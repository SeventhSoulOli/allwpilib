# Gradle
# Build your Java projects and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/java

resources:
  containers:
  - container: wpilib2020
    image: wpilib/roborio-cross-ubuntu:2020-18.04
  - container: raspbian
    image:  wpilib/raspbian-cross-ubuntu:10-18.04
  - container: ubuntu
    image:  wpilib/ubuntu-base:18.04

variables:
- group: Artifactory-Package-Publish

trigger:
  batch: true
  branches:
    include:
    - master

stages:
- stage: Build
  jobs:
  - job: Linux_Arm
    pool:
      vmImage: 'Ubuntu 16.04'

    container: wpilib2020

    steps:
      - task: Gradle@2
        condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/tags/v')))
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'build'
          options: '-Ponlylinuxathena -PbuildServer'

      - task: Gradle@2
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'build'
          options: '-Ponlylinuxathena -PreleaseMode -PbuildServer'

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'Athena'
          targetPath: 'build/allOutputs'

