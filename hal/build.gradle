// There are two hal libraries that are built
// - desktop which is used by simulation (gcc/msvc)
// - athena which is used by the roborio (arm)

apply plugin: 'cpp'

defineWpiUtilProperties()

model {
    components {
        HALAthena(NativeLibrarySpec) {
            targetPlatform 'arm'
            binaries.all {
                tasks.withType(CppCompile) {
                    addNiLibraryLinks(linker, targetPlatform)
                    addWpiUtilLibraryLinks(it, linker, targetPlatform)
                }
            }
            sources {
                cpp {
                    source {
                        srcDirs = ["lib/athena", "lib/athena/FRC_FPGA_ChipObject", "lib/shared"]
                        includes = ["**/*.cpp"]
                    }
                    exportedHeaders {
                        srcDirs = ["include", "lib/athena/FRC_FPGA_ChipObject", wpiUtilInclude]
                    }
                }
            }
        }

//        HALSim(NativeLibrarySpec) {
//            binaries.all {
//                if (toolChain in Gcc){
//                    cppCompiler.args "-std=c++1y"
//                }
//            }
//
//            sources {
//                cpp {
//                    source {
//                        srcDirs = ["lib/sim", "lib/shared"]
//                        includes = ["**/*.cpp"]
//                    }
//                    exportedHeaders {
//                        srcDirs = ["include", "lib/sim", "lib/shared"]
//                    }
//                }
//            }
//        }
    }
}
