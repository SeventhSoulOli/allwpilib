// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./hal/generate_usage_reporting.py. DO NOT
// MODIFY

#pragma once

#include <stdint.h>
#include "wpi/string.h"

// ifdef's definition is to allow for default parameters in C++.
#ifdef __cplusplus
#include <string_view>

namespace hal {
/**
 * Reports a hardware usage to the HAL.
 *
 * @param resource       the used resource
 * @param instanceNumber the instance of the resource
 * @param context        a user specified context index
 * @param feature        a user specified feature string
 * @return               the index of the added value in NetComm
 */
int64_t UsageReport(int32_t resource, int32_t instanceNumber,
                    int32_t context = 0, std::string_view feature = nullptr);
}  // namespace hal
#endif

#ifdef __cplusplus
extern "C" {
#endif

/**
 * Reports a hardware usage to the HAL.
 *
 * @param resource       the used resource
 * @param instanceNumber the instance of the resource
 * @param context        a user specified context index
 * @param feature        a user specified feature string
 * @return               the index of the added value in NetComm
 */
int64_t HAL_Report(int32_t resource, int32_t instanceNumber, int32_t context,
                   const WPI_String* feature);

#ifdef __cplusplus
}
#endif

/*
 * Autogenerated file! Do not manually edit this file.
 */

#ifdef __cplusplus
namespace HALUsageReporting {
enum tResourceType : int32_t { ${usage_reporting_types_cpp} };
enum tInstances : int32_t { ${usage_reporting_instances_cpp} };
}  // namespace HALUsageReporting
#endif
