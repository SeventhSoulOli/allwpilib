// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.
/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_WPI_PROTO_SYSTEM_NBP_H_INCLUDED
#define PB_WPI_PROTO_SYSTEM_NBP_H_INCLUDED
#include <pb.h>
#include "wpimath.nbp.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _wpi_proto_ProtobufLinearSystem {
    uint32_t num_states;
    uint32_t num_inputs;
    uint32_t num_outputs;
    bool has_a;
    wpi_proto_ProtobufMatrix a;
    bool has_b;
    wpi_proto_ProtobufMatrix b;
    bool has_c;
    wpi_proto_ProtobufMatrix c;
    bool has_d;
    wpi_proto_ProtobufMatrix d;
} wpi_proto_ProtobufLinearSystem;


/* Initializer values for message structs */
#define wpi_proto_ProtobufLinearSystem_init_default {0, 0, 0, false, wpi_proto_ProtobufMatrix_init_default, false, wpi_proto_ProtobufMatrix_init_default, false, wpi_proto_ProtobufMatrix_init_default, false, wpi_proto_ProtobufMatrix_init_default}
#define wpi_proto_ProtobufLinearSystem_init_zero {0, 0, 0, false, wpi_proto_ProtobufMatrix_init_zero, false, wpi_proto_ProtobufMatrix_init_zero, false, wpi_proto_ProtobufMatrix_init_zero, false, wpi_proto_ProtobufMatrix_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define wpi_proto_ProtobufLinearSystem_num_states_tag 1
#define wpi_proto_ProtobufLinearSystem_num_inputs_tag 2
#define wpi_proto_ProtobufLinearSystem_num_outputs_tag 3
#define wpi_proto_ProtobufLinearSystem_a_tag     4
#define wpi_proto_ProtobufLinearSystem_b_tag     5
#define wpi_proto_ProtobufLinearSystem_c_tag     6
#define wpi_proto_ProtobufLinearSystem_d_tag     7

/* Struct field encoding specification for nanopb */
#define wpi_proto_ProtobufLinearSystem_FIELDLIST(X, a_) \
X(a_, STATIC,   SINGULAR, UINT32,   num_states,        1) \
X(a_, STATIC,   SINGULAR, UINT32,   num_inputs,        2) \
X(a_, STATIC,   SINGULAR, UINT32,   num_outputs,       3) \
X(a_, STATIC,   OPTIONAL, MESSAGE,  a,                 4) \
X(a_, STATIC,   OPTIONAL, MESSAGE,  b,                 5) \
X(a_, STATIC,   OPTIONAL, MESSAGE,  c,                 6) \
X(a_, STATIC,   OPTIONAL, MESSAGE,  d,                 7)
#define wpi_proto_ProtobufLinearSystem_CALLBACK NULL
#define wpi_proto_ProtobufLinearSystem_DEFAULT NULL
#define wpi_proto_ProtobufLinearSystem_a_MSGTYPE wpi_proto_ProtobufMatrix
#define wpi_proto_ProtobufLinearSystem_b_MSGTYPE wpi_proto_ProtobufMatrix
#define wpi_proto_ProtobufLinearSystem_c_MSGTYPE wpi_proto_ProtobufMatrix
#define wpi_proto_ProtobufLinearSystem_d_MSGTYPE wpi_proto_ProtobufMatrix

const pb_msgdesc_t *get_wpi_proto_ProtobufLinearSystem_msg(void);

/* Maximum encoded size of messages (where known) */
#if defined(wpi_proto_ProtobufMatrix_size) && defined(wpi_proto_ProtobufMatrix_size) && defined(wpi_proto_ProtobufMatrix_size) && defined(wpi_proto_ProtobufMatrix_size)
#define WPI_PROTO_SYSTEM_NBP_H_MAX_SIZE          wpi_proto_ProtobufLinearSystem_size
#define wpi_proto_ProtobufLinearSystem_size      (42 + wpi_proto_ProtobufMatrix_size + wpi_proto_ProtobufMatrix_size + wpi_proto_ProtobufMatrix_size + wpi_proto_ProtobufMatrix_size)
#endif


#endif
