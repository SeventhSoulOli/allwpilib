// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: system.proto

#include "system.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace wpi {
namespace proto {
PROTOBUF_CONSTEXPR ProtobufLinearSystem::ProtobufLinearSystem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.a_)*/nullptr
  , /*decltype(_impl_.b_)*/nullptr
  , /*decltype(_impl_.c_)*/nullptr
  , /*decltype(_impl_.d_)*/nullptr
  , /*decltype(_impl_.num_states_)*/0u
  , /*decltype(_impl_.num_inputs_)*/0u
  , /*decltype(_impl_.num_outputs_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProtobufLinearSystemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtobufLinearSystemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtobufLinearSystemDefaultTypeInternal() {}
  union {
    ProtobufLinearSystem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtobufLinearSystemDefaultTypeInternal _ProtobufLinearSystem_default_instance_;
}  // namespace proto
}  // namespace wpi
static ::_pb::Metadata file_level_metadata_system_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_system_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_system_2eproto = nullptr;

const uint32_t TableStruct_system_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wpi::proto::ProtobufLinearSystem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wpi::proto::ProtobufLinearSystem, _impl_.num_states_),
  PROTOBUF_FIELD_OFFSET(::wpi::proto::ProtobufLinearSystem, _impl_.num_inputs_),
  PROTOBUF_FIELD_OFFSET(::wpi::proto::ProtobufLinearSystem, _impl_.num_outputs_),
  PROTOBUF_FIELD_OFFSET(::wpi::proto::ProtobufLinearSystem, _impl_.a_),
  PROTOBUF_FIELD_OFFSET(::wpi::proto::ProtobufLinearSystem, _impl_.b_),
  PROTOBUF_FIELD_OFFSET(::wpi::proto::ProtobufLinearSystem, _impl_.c_),
  PROTOBUF_FIELD_OFFSET(::wpi::proto::ProtobufLinearSystem, _impl_.d_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::wpi::proto::ProtobufLinearSystem)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::wpi::proto::_ProtobufLinearSystem_default_instance_._instance,
};

const char descriptor_table_protodef_system_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014system.proto\022\twpi.proto\032\rwpimath.proto"
  "\"\353\001\n\024ProtobufLinearSystem\022\022\n\nnum_states\030"
  "\001 \001(\r\022\022\n\nnum_inputs\030\002 \001(\r\022\023\n\013num_outputs"
  "\030\003 \001(\r\022$\n\001a\030\004 \001(\0132\031.wpi.proto.ProtobufMa"
  "trix\022$\n\001b\030\005 \001(\0132\031.wpi.proto.ProtobufMatr"
  "ix\022$\n\001c\030\006 \001(\0132\031.wpi.proto.ProtobufMatrix"
  "\022$\n\001d\030\007 \001(\0132\031.wpi.proto.ProtobufMatrixB\032"
  "\n\030edu.wpi.first.math.protob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_system_2eproto_deps[1] = {
  &::descriptor_table_wpimath_2eproto,
};
static ::_pbi::once_flag descriptor_table_system_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_system_2eproto = {
    false, false, 314, descriptor_table_protodef_system_2eproto,
    "system.proto",
    &descriptor_table_system_2eproto_once, descriptor_table_system_2eproto_deps, 1, 1,
    schemas, file_default_instances, TableStruct_system_2eproto::offsets,
    file_level_metadata_system_2eproto, file_level_enum_descriptors_system_2eproto,
    file_level_service_descriptors_system_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_system_2eproto_getter() {
  return &descriptor_table_system_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_system_2eproto(&descriptor_table_system_2eproto);
namespace wpi {
namespace proto {

// ===================================================================

class ProtobufLinearSystem::_Internal {
 public:
  static const ::wpi::proto::ProtobufMatrix& a(const ProtobufLinearSystem* msg);
  static const ::wpi::proto::ProtobufMatrix& b(const ProtobufLinearSystem* msg);
  static const ::wpi::proto::ProtobufMatrix& c(const ProtobufLinearSystem* msg);
  static const ::wpi::proto::ProtobufMatrix& d(const ProtobufLinearSystem* msg);
};

const ::wpi::proto::ProtobufMatrix&
ProtobufLinearSystem::_Internal::a(const ProtobufLinearSystem* msg) {
  return *msg->_impl_.a_;
}
const ::wpi::proto::ProtobufMatrix&
ProtobufLinearSystem::_Internal::b(const ProtobufLinearSystem* msg) {
  return *msg->_impl_.b_;
}
const ::wpi::proto::ProtobufMatrix&
ProtobufLinearSystem::_Internal::c(const ProtobufLinearSystem* msg) {
  return *msg->_impl_.c_;
}
const ::wpi::proto::ProtobufMatrix&
ProtobufLinearSystem::_Internal::d(const ProtobufLinearSystem* msg) {
  return *msg->_impl_.d_;
}
void ProtobufLinearSystem::clear_a() {
  if (GetArenaForAllocation() == nullptr && _impl_.a_ != nullptr) {
    delete _impl_.a_;
  }
  _impl_.a_ = nullptr;
}
void ProtobufLinearSystem::clear_b() {
  if (GetArenaForAllocation() == nullptr && _impl_.b_ != nullptr) {
    delete _impl_.b_;
  }
  _impl_.b_ = nullptr;
}
void ProtobufLinearSystem::clear_c() {
  if (GetArenaForAllocation() == nullptr && _impl_.c_ != nullptr) {
    delete _impl_.c_;
  }
  _impl_.c_ = nullptr;
}
void ProtobufLinearSystem::clear_d() {
  if (GetArenaForAllocation() == nullptr && _impl_.d_ != nullptr) {
    delete _impl_.d_;
  }
  _impl_.d_ = nullptr;
}
ProtobufLinearSystem::ProtobufLinearSystem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wpi.proto.ProtobufLinearSystem)
}
ProtobufLinearSystem::ProtobufLinearSystem(const ProtobufLinearSystem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProtobufLinearSystem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.a_){nullptr}
    , decltype(_impl_.b_){nullptr}
    , decltype(_impl_.c_){nullptr}
    , decltype(_impl_.d_){nullptr}
    , decltype(_impl_.num_states_){}
    , decltype(_impl_.num_inputs_){}
    , decltype(_impl_.num_outputs_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_a()) {
    _this->_impl_.a_ = new ::wpi::proto::ProtobufMatrix(*from._impl_.a_);
  }
  if (from._internal_has_b()) {
    _this->_impl_.b_ = new ::wpi::proto::ProtobufMatrix(*from._impl_.b_);
  }
  if (from._internal_has_c()) {
    _this->_impl_.c_ = new ::wpi::proto::ProtobufMatrix(*from._impl_.c_);
  }
  if (from._internal_has_d()) {
    _this->_impl_.d_ = new ::wpi::proto::ProtobufMatrix(*from._impl_.d_);
  }
  ::memcpy(&_impl_.num_states_, &from._impl_.num_states_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_outputs_) -
    reinterpret_cast<char*>(&_impl_.num_states_)) + sizeof(_impl_.num_outputs_));
  // @@protoc_insertion_point(copy_constructor:wpi.proto.ProtobufLinearSystem)
}

inline void ProtobufLinearSystem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.a_){nullptr}
    , decltype(_impl_.b_){nullptr}
    , decltype(_impl_.c_){nullptr}
    , decltype(_impl_.d_){nullptr}
    , decltype(_impl_.num_states_){0u}
    , decltype(_impl_.num_inputs_){0u}
    , decltype(_impl_.num_outputs_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ProtobufLinearSystem::~ProtobufLinearSystem() {
  // @@protoc_insertion_point(destructor:wpi.proto.ProtobufLinearSystem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProtobufLinearSystem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.a_;
  if (this != internal_default_instance()) delete _impl_.b_;
  if (this != internal_default_instance()) delete _impl_.c_;
  if (this != internal_default_instance()) delete _impl_.d_;
}

void ProtobufLinearSystem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProtobufLinearSystem::Clear() {
// @@protoc_insertion_point(message_clear_start:wpi.proto.ProtobufLinearSystem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.a_ != nullptr) {
    delete _impl_.a_;
  }
  _impl_.a_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.b_ != nullptr) {
    delete _impl_.b_;
  }
  _impl_.b_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.c_ != nullptr) {
    delete _impl_.c_;
  }
  _impl_.c_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.d_ != nullptr) {
    delete _impl_.d_;
  }
  _impl_.d_ = nullptr;
  ::memset(&_impl_.num_states_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_outputs_) -
      reinterpret_cast<char*>(&_impl_.num_states_)) + sizeof(_impl_.num_outputs_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtobufLinearSystem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 num_states = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.num_states_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 num_inputs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_inputs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 num_outputs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.num_outputs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .wpi.proto.ProtobufMatrix a = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_a(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .wpi.proto.ProtobufMatrix b = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_b(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .wpi.proto.ProtobufMatrix c = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_c(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .wpi.proto.ProtobufMatrix d = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProtobufLinearSystem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wpi.proto.ProtobufLinearSystem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 num_states = 1;
  if (this->_internal_num_states() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_num_states(), target);
  }

  // uint32 num_inputs = 2;
  if (this->_internal_num_inputs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_num_inputs(), target);
  }

  // uint32 num_outputs = 3;
  if (this->_internal_num_outputs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_num_outputs(), target);
  }

  // .wpi.proto.ProtobufMatrix a = 4;
  if (this->_internal_has_a()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::a(this),
        _Internal::a(this).GetCachedSize(), target, stream);
  }

  // .wpi.proto.ProtobufMatrix b = 5;
  if (this->_internal_has_b()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::b(this),
        _Internal::b(this).GetCachedSize(), target, stream);
  }

  // .wpi.proto.ProtobufMatrix c = 6;
  if (this->_internal_has_c()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::c(this),
        _Internal::c(this).GetCachedSize(), target, stream);
  }

  // .wpi.proto.ProtobufMatrix d = 7;
  if (this->_internal_has_d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::d(this),
        _Internal::d(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wpi.proto.ProtobufLinearSystem)
  return target;
}

size_t ProtobufLinearSystem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wpi.proto.ProtobufLinearSystem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .wpi.proto.ProtobufMatrix a = 4;
  if (this->_internal_has_a()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.a_);
  }

  // .wpi.proto.ProtobufMatrix b = 5;
  if (this->_internal_has_b()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.b_);
  }

  // .wpi.proto.ProtobufMatrix c = 6;
  if (this->_internal_has_c()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.c_);
  }

  // .wpi.proto.ProtobufMatrix d = 7;
  if (this->_internal_has_d()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.d_);
  }

  // uint32 num_states = 1;
  if (this->_internal_num_states() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_num_states());
  }

  // uint32 num_inputs = 2;
  if (this->_internal_num_inputs() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_num_inputs());
  }

  // uint32 num_outputs = 3;
  if (this->_internal_num_outputs() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_num_outputs());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtobufLinearSystem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProtobufLinearSystem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtobufLinearSystem::GetClassData() const { return &_class_data_; }


void ProtobufLinearSystem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProtobufLinearSystem*>(&to_msg);
  auto& from = static_cast<const ProtobufLinearSystem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wpi.proto.ProtobufLinearSystem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_a()) {
    _this->_internal_mutable_a()->::wpi::proto::ProtobufMatrix::MergeFrom(
        from._internal_a());
  }
  if (from._internal_has_b()) {
    _this->_internal_mutable_b()->::wpi::proto::ProtobufMatrix::MergeFrom(
        from._internal_b());
  }
  if (from._internal_has_c()) {
    _this->_internal_mutable_c()->::wpi::proto::ProtobufMatrix::MergeFrom(
        from._internal_c());
  }
  if (from._internal_has_d()) {
    _this->_internal_mutable_d()->::wpi::proto::ProtobufMatrix::MergeFrom(
        from._internal_d());
  }
  if (from._internal_num_states() != 0) {
    _this->_internal_set_num_states(from._internal_num_states());
  }
  if (from._internal_num_inputs() != 0) {
    _this->_internal_set_num_inputs(from._internal_num_inputs());
  }
  if (from._internal_num_outputs() != 0) {
    _this->_internal_set_num_outputs(from._internal_num_outputs());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtobufLinearSystem::CopyFrom(const ProtobufLinearSystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wpi.proto.ProtobufLinearSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufLinearSystem::IsInitialized() const {
  return true;
}

void ProtobufLinearSystem::InternalSwap(ProtobufLinearSystem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtobufLinearSystem, _impl_.num_outputs_)
      + sizeof(ProtobufLinearSystem::_impl_.num_outputs_)
      - PROTOBUF_FIELD_OFFSET(ProtobufLinearSystem, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtobufLinearSystem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_system_2eproto_getter, &descriptor_table_system_2eproto_once,
      file_level_metadata_system_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace wpi
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::wpi::proto::ProtobufLinearSystem*
Arena::CreateMaybeMessage< ::wpi::proto::ProtobufLinearSystem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wpi::proto::ProtobufLinearSystem >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
