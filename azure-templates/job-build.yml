# Job for building

parameters:
  jobName: ''
  pool:
    vmImage: 'Ubuntu 16.04'
  container: wpilib2020
  preBuild: []
  gradleOptions: ''
  jdkVersionOption: ''
  buildOptions: ''
  artifactName: ''

jobs:
- job: ${{ parameters.jobName }}
  pool: ${{ parameters.pool }}

  ${{ if ne(parameters.container, '') }}:
    container: ${{ parameters.container }}

  workspace:
    clean: all

  timeoutInMinutes: 0

  steps:
    - ${{ parameters.preBuild }}

    - task: PublishPipelineArtifact@0
      condition: always()
      inputs:
        artifactName: JDK
        targetPath: 'C:\Program Files\Java\zulu-11-azure-jdk_11.33.15-11.0.4-win_x64\'

# PR Builds
    - ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/tags/v')) }}:
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m ${{ parameters.gradleOptions }}'
          ${{ if ne(parameters.jdkVersionOption, '') }}:
            jdkVersionOption: ${{ parameters.jdkVersionOption }}
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: ':wpiutil:test'
          options: '-PbuildServer --info ${{ parameters.buildOptions }}'

# Tagged Builds
    - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/v') }}:
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m ${{ parameters.gradleOptions }}'
          ${{ if ne(parameters.jdkVersionOption, '') }}:
            jdkVersionOption: ${{ parameters.jdkVersionOption }}
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'build'
          options: '-PreleaseMode -PbuildServer ${{ parameters.buildOptions }}'

    - powershell: ls wpiutil\build\install\wpiutilDev\windowsx86-64\lib\
      condition: always()

    - script: |
        "C:\Program Files (x86)\Windows Kits\10\Debuggers\x64\gflags.exe" -i wpiutil\build\install\wpiutilDev\windowsx86-64\lib\wpiutilDev.exe +sls
        "C:\Program Files (x86)\Windows Kits\10\Debuggers\x64\windbg.exe" -g -G wpiutil\build\install\wpiutilDev\windowsx86-64\lib\wpiutilDev.exe
      condition: always()

    - task: PublishPipelineArtifact@0
      condition: always()
      inputs:
        artifactName: ${{ parameters.artifactName }}
        targetPath: 'wpiutil\build\install\wpiutilDev\windowsx86-64\lib\'
