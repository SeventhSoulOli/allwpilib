From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Patrick Plenefisch <simonpatp@gmail.com>
Date: Fri, 29 Aug 2014 13:58:17 -0400
Subject: [PATCH 0331/6262] Remove Version number from zips

Change-Id: Ifc9ba2e47a61f2d545b7c4b40c327b661b4f48ba
---
 .../first/wpilib/plugins/core/WPILibCore.java |   2 +-
 .../core/installer/AbstractInstaller.java     |  18 +--
 .../core/installer/ToolsInstaller.java        |  13 +-
 .../preferences/PreferenceInitializer.java    |   5 +-
 .../cpp/toolchains/linux/Activator.java       |   2 +-
 .../toolchains/linux/ToolchainInstaller.java  |  10 +-
 .../plugins/cpp/toolchains/mac/Activator.java |   2 +-
 .../toolchains/mac/ToolchainInstaller.java    |  10 +-
 .../cpp/toolchains/windows/Activator.java     |   2 +-
 .../windows/ToolchainInstaller.java           |  10 +-
 .../wpilib/plugins/cpp/WPILibCPPPlugin.java   |   8 +-
 .../plugins/cpp/installer/CPPInstaller.java   |  32 ++---
 .../cpp/preferences/CPPPreferencePage.java    | 118 ------------------
 .../cpp/preferences/PreferenceConstants.java  |   6 +-
 .../preferences/PreferenceInitializer.java    |   9 +-
 .../plugin.xml                                |   9 --
 .../wpilib/plugins/java/WPILibJavaPlugin.java |   6 +-
 .../plugins/java/installer/JavaInstaller.java |  16 +--
 .../java/preferences/JavaPreferencePage.java  |  96 --------------
 .../java/preferences/PreferenceConstants.java |   3 +-
 .../preferences/PreferenceInitializer.java    |   6 +-
 21 files changed, 61 insertions(+), 322 deletions(-)
 delete mode 100644 eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/CPPPreferencePage.java
 delete mode 100644 eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/JavaPreferencePage.java

diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/WPILibCore.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/WPILibCore.java
index 1bc4e710bc37040f1385fbce262bc69f5f4ec366..111b97af28305201073643b5b8fcdc86441f9bed 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/WPILibCore.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/WPILibCore.java
@@ -133,7 +133,7 @@ public class WPILibCore extends AbstractUIPlugin {
 	}
 
 	public String getDefaultVersion() {
-		return "2013-test-0.4";
+		return "0.2";
 	}
 
 	public String getCurrentVersion() {
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/installer/AbstractInstaller.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/installer/AbstractInstaller.java
index b2ca3ad4ddbb3c8a160d704924ceeb92a6147b80..e26bdd262849511578c3384c03d7303cde64f02c 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/installer/AbstractInstaller.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/installer/AbstractInstaller.java
@@ -22,12 +22,12 @@ import edu.wpi.first.wpilib.plugins.core.WPILibCore;
 
 public abstract class AbstractInstaller {
 	protected File installLocation;
-	protected String version;
+	protected String version, installedVersion;
 
-	public AbstractInstaller(String version) {
-		this.installLocation = new File(WPILibCore.getDefault().getWPILibBaseDir()
-				+ File.separator + getFeatureName() + File.separator + version);
+	public AbstractInstaller(String version, String installedVersion, String path) {
+		this.installLocation = new File(path);
 		this.version = version;
+		this.installedVersion = installedVersion;
 	}
 
 	/**
@@ -55,7 +55,7 @@ public abstract class AbstractInstaller {
 				WPILibCore.logInfo("Installing "+getFeatureName()+" if necessary");
 
 				if (!isInstalled()) {
-					WPILibCore.logInfo("Install necessary");
+					WPILibCore.logInfo("Install necessary for " + getFeatureName());
 					try {
 						install();
 					} catch (InstallException e) {
@@ -64,9 +64,9 @@ public abstract class AbstractInstaller {
 								getErrorMessage(e));
 					}
 				}
-
+				
 				updateInstalledVersion(version);
-				WPILibCore.logInfo("Installed");
+				WPILibCore.logInfo("Installed" + getFeatureName());
 
 				return Status.OK_STATUS;
 			}
@@ -105,7 +105,7 @@ public abstract class AbstractInstaller {
 	 * @return True for is there and newer, false otherwise.
 	 */
 	protected boolean isInstalled() {
-		return installLocation.exists(); 
+		return installLocation.exists() && !version.contains("DEVELOPMENT") && version.equals(installedVersion);
 	}
 
 	/**
@@ -138,7 +138,7 @@ public abstract class AbstractInstaller {
 					}
 
 					// Call 'unzip'
-					final String[] cmd = {"unzip", tmpFile.getAbsolutePath(), "-d", installLocation.getAbsolutePath()};
+					final String[] cmd = {"unzip" , "-o", tmpFile.getAbsolutePath(), "-d", installLocation.getAbsolutePath()};
 					WPILibCore.logInfo("unzip "+tmpFile.getAbsolutePath()+" -d "+installLocation.getAbsolutePath());
 					final Process unzipProcess = DebugPlugin.exec(cmd, installLocation);
 					try (final InputStream is = unzipProcess.getInputStream()) {
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/installer/ToolsInstaller.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/installer/ToolsInstaller.java
index f1723aa53cda5f2c3be9b26048200e65037a7b9b..4dff87bcbcb54d43e34f2ee6c0211f4a6e0941a9 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/installer/ToolsInstaller.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/installer/ToolsInstaller.java
@@ -1,8 +1,6 @@
 package edu.wpi.first.wpilib.plugins.core.installer;
 
 import java.io.InputStream;
-import java.util.Properties;
-
 import org.eclipse.jface.preference.IPreferenceStore;
 
 import edu.wpi.first.wpilib.plugins.core.WPILibCore;
@@ -11,7 +9,7 @@ import edu.wpi.first.wpilib.plugins.core.preferences.PreferenceConstants;
 public class ToolsInstaller extends AbstractInstaller {
 
 	public ToolsInstaller(String version) {
-		super(version);
+		super(version, WPILibCore.getDefault().getPreferenceStore().getString(PreferenceConstants.TOOLS_VERSION), WPILibCore.getDefault().getWPILibBaseDir() + "/tools");
 	}
 
 	@Override
@@ -22,13 +20,8 @@ public class ToolsInstaller extends AbstractInstaller {
 	@Override
 	protected void updateInstalledVersion(String version) {
 		IPreferenceStore prefs = WPILibCore.getDefault().getPreferenceStore();
-		if (prefs.getBoolean(PreferenceConstants.UPDATE_TOOLS_VERSION)) {
-			WPILibCore.logInfo("Forcing library version to "+version);
-	    	Properties props = WPILibCore.getDefault().getProjectProperties(null);
-	    	props.setProperty("version", version);
-	    	WPILibCore.getDefault().saveGlobalProperties(props);
-			prefs.setValue(PreferenceConstants.TOOLS_VERSION, version);
-		}
+		prefs.setValue(PreferenceConstants.TOOLS_VERSION, version);
+		
 	}
 
 	@Override
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/preferences/PreferenceInitializer.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/preferences/PreferenceInitializer.java
index 8697809fa9d1e14b2471523624b1bcd18a9845f0..20d88c7ce19882437aedc35ae93270e5f01c78c0 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/preferences/PreferenceInitializer.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.core/src/main/java/edu/wpi/first/wpilib/plugins/core/preferences/PreferenceInitializer.java
@@ -19,7 +19,8 @@ public class PreferenceInitializer extends AbstractPreferenceInitializer {
 		IPreferenceStore store = WPILibCore.getDefault().getPreferenceStore();
 		store.setDefault(PreferenceConstants.TEAM_NUMBER,
 				WPILibCore.getDefault().getProjectProperties(null).getProperty("team-number", "0"));
-		store.setDefault(PreferenceConstants.TOOLS_VERSION, WPILibCore.getDefault().getDefaultVersion());
-		store.setDefault(PreferenceConstants.UPDATE_TOOLS_VERSION, true);
+		String val = store.getString(PreferenceConstants.TOOLS_VERSION);
+		if (!store.contains(PreferenceConstants.TOOLS_VERSION) && val != null)
+			store.setValue(PreferenceConstants.TOOLS_VERSION, "none");
 	}
 }
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.linux/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/linux/Activator.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.linux/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/linux/Activator.java
index 3222d1842261e626beaa3c0918c792738d570996..b3a54f6c7ad0fef44418c0f776566462e83e19d0 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.linux/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/linux/Activator.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.linux/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/linux/Activator.java
@@ -33,7 +33,7 @@ public class Activator extends AbstractUIPlugin implements IStartup {
 	}
 
 	private String getCurrentVersion() {
-		return WPILibCPPPlugin.getDefault().getDefaultToolchainVersion();
+		return "4.4.1-csery-gcc";
 	}
 
 	/*
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.linux/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/linux/ToolchainInstaller.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.linux/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/linux/ToolchainInstaller.java
index b42d84e0200e90f06c9cf0ad02b8be93b5164fb1..bb24443a0f9964ee9fc1c9935267496b322325c2 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.linux/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/linux/ToolchainInstaller.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.linux/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/linux/ToolchainInstaller.java
@@ -11,7 +11,8 @@ import edu.wpi.first.wpilib.plugins.cpp.preferences.PreferenceConstants;
 public class ToolchainInstaller extends AbstractInstaller {
 
 	public ToolchainInstaller(String version) {
-		super(version);
+		super(version, 
+				WPILibCPPPlugin.getDefault().getPreferenceStore().getString(PreferenceConstants.TOOLCHAIN_INSTALLED), WPILibCPPPlugin.getDefault().getToolchain());
 	}
 
 	@Override
@@ -21,11 +22,8 @@ public class ToolchainInstaller extends AbstractInstaller {
 
 	@Override
 	protected void updateInstalledVersion(String version) {
-		IPreferenceStore prefs = WPILibCPPPlugin.getDefault().getPreferenceStore();
-		if (prefs.getBoolean(PreferenceConstants.UPDATE_TOOLCHAIN_VERSION)) {
-			System.out.println("Forcing library version to "+version);
-			prefs.setValue(PreferenceConstants.TOOLCHAIN_VERSION, version);
-		}
+		WPILibCPPPlugin.getDefault().getPreferenceStore().setValue(PreferenceConstants.TOOLCHAIN_INSTALLED,
+				WPILibCPPPlugin.getDefault().getCurrentVersion());
 	}
 
 	@Override
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.mac/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/mac/Activator.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.mac/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/mac/Activator.java
index 6c9b8c281b5ae89e19f00745c4691344150fee66..7ae4b3b816760bcdbbce2b6bf0c938873ccad390 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.mac/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/mac/Activator.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.mac/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/mac/Activator.java
@@ -33,7 +33,7 @@ public class Activator extends AbstractUIPlugin implements IStartup {
 	}
 
 	private String getCurrentVersion() {
-		return WPILibCPPPlugin.getDefault().getDefaultToolchainVersion();
+		return "4.4.1-csery-gcc";
 	}
 
 	/*
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.mac/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/mac/ToolchainInstaller.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.mac/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/mac/ToolchainInstaller.java
index 15c3fc4d6841bea967f89a531754232df70d9455..733578a8f3d1c44880abc0c3b4f0c767adc3a929 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.mac/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/mac/ToolchainInstaller.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.mac/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/mac/ToolchainInstaller.java
@@ -11,7 +11,8 @@ import edu.wpi.first.wpilib.plugins.cpp.preferences.PreferenceConstants;
 public class ToolchainInstaller extends AbstractInstaller {
 
 	public ToolchainInstaller(String version) {
-		super(version);
+		super(version, 
+				WPILibCPPPlugin.getDefault().getPreferenceStore().getString(PreferenceConstants.TOOLCHAIN_INSTALLED), WPILibCPPPlugin.getDefault().getToolchain());
 	}
 
 	@Override
@@ -21,11 +22,8 @@ public class ToolchainInstaller extends AbstractInstaller {
 
 	@Override
 	protected void updateInstalledVersion(String version) {
-		IPreferenceStore prefs = WPILibCPPPlugin.getDefault().getPreferenceStore();
-		if (prefs.getBoolean(PreferenceConstants.UPDATE_TOOLCHAIN_VERSION)) {
-			System.out.println("Forcing library version to "+version);
-			prefs.setValue(PreferenceConstants.TOOLCHAIN_VERSION, version);
-		}
+		WPILibCPPPlugin.getDefault().getPreferenceStore().setDefault(PreferenceConstants.TOOLCHAIN_INSTALLED,
+				WPILibCPPPlugin.getDefault().getCurrentVersion());
 	}
 
 	@Override
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.windows/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/windows/Activator.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.windows/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/windows/Activator.java
index 5d8023d69e01d17958aa9e8786adce358affa6a5..65d7f0d8dae470877259931ece91d4eb4a313833 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.windows/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/windows/Activator.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.windows/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/windows/Activator.java
@@ -33,7 +33,7 @@ public class Activator extends AbstractUIPlugin implements IStartup {
 	}
 
 	private String getCurrentVersion() {
-		return WPILibCPPPlugin.getDefault().getDefaultToolchainVersion();
+		return "4.4.1-csery-gcc";
 	}
 
 	/*
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.windows/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/windows/ToolchainInstaller.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.windows/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/windows/ToolchainInstaller.java
index d57fa3ee622b9bc189f4738acbafee665db805aa..175a6e3abc8f286ff4d97bf80924f2029da672e3 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.windows/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/windows/ToolchainInstaller.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp.toolchains.windows/src/edu/wpi/first/wpilib/plugins/cpp/toolchains/windows/ToolchainInstaller.java
@@ -11,7 +11,8 @@ import edu.wpi.first.wpilib.plugins.cpp.preferences.PreferenceConstants;
 public class ToolchainInstaller extends AbstractInstaller {
 
 	public ToolchainInstaller(String version) {
-		super(version);
+		super(version, 
+				WPILibCPPPlugin.getDefault().getPreferenceStore().getString(PreferenceConstants.TOOLCHAIN_INSTALLED), WPILibCPPPlugin.getDefault().getToolchain());
 	}
 
 	@Override
@@ -21,11 +22,8 @@ public class ToolchainInstaller extends AbstractInstaller {
 
 	@Override
 	protected void updateInstalledVersion(String version) {
-		IPreferenceStore prefs = WPILibCPPPlugin.getDefault().getPreferenceStore();
-		if (prefs.getBoolean(PreferenceConstants.UPDATE_TOOLCHAIN_VERSION)) {
-			System.out.println("Forcing library version to "+version);
-			prefs.setValue(PreferenceConstants.TOOLCHAIN_VERSION, version);
-		}
+		WPILibCPPPlugin.getDefault().getPreferenceStore().setValue(PreferenceConstants.TOOLCHAIN_INSTALLED,
+				WPILibCPPPlugin.getDefault().getCurrentVersion());
 	}
 
 	@Override
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/WPILibCPPPlugin.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/WPILibCPPPlugin.java
index f5f6a06c26bd9e118f38006c49e598358c4c9d05..f25d0e66daec9a4edd2ca1d2312962b5aaffc9bc 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/WPILibCPPPlugin.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/WPILibCPPPlugin.java
@@ -58,13 +58,9 @@ public class WPILibCPPPlugin extends AbstractUIPlugin implements IStartup {
 		return plugin;
 	}
 
-	public String getDefaultToolchainVersion() {
-		return "arm-none-linux-gnueabi-4.4.1";
-	}
-
 	public String getToolchain() {
 		return WPILibCore.getDefault().getWPILibBaseDir()
-				+ File.separator + "toolchains" + File.separator + getPreferenceStore().getString(PreferenceConstants.TOOLCHAIN_VERSION);
+				+ File.separator + "toolchains" + File.separator + "current";
 	}
 	
 	public String getCurrentVersion() {
@@ -82,7 +78,7 @@ public class WPILibCPPPlugin extends AbstractUIPlugin implements IStartup {
 
 	public String getCPPDir() {
 		return WPILibCore.getDefault().getWPILibBaseDir()
-				+ File.separator + "cpp" + File.separator + getPreferenceStore().getString(PreferenceConstants.LIBRARY_VERSION);
+				+ File.separator + "cpp" + File.separator + "current";
 	}
 
 	@Override
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/installer/CPPInstaller.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/installer/CPPInstaller.java
index bdc5c262692c6beb3264212e2ad30682e65e8c3a..4702a30a5a9ce3452a41734fb5d450173b98958d 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/installer/CPPInstaller.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/installer/CPPInstaller.java
@@ -1,11 +1,6 @@
 package edu.wpi.first.wpilib.plugins.cpp.installer;
 
 import java.io.InputStream;
-import java.util.Properties;
-
-import org.eclipse.jface.preference.IPreferenceStore;
-
-import edu.wpi.first.wpilib.plugins.core.WPILibCore;
 import edu.wpi.first.wpilib.plugins.core.installer.AbstractInstaller;
 import edu.wpi.first.wpilib.plugins.cpp.WPILibCPPPlugin;
 import edu.wpi.first.wpilib.plugins.cpp.preferences.PreferenceConstants;
@@ -19,28 +14,23 @@ import edu.wpi.first.wpilib.plugins.cpp.preferences.PreferenceConstants;
 public class CPPInstaller extends AbstractInstaller {
 
 	public CPPInstaller(String version) {
-		super(version);
-	}
-
-	@Override
-	protected String getFeatureName() {
-		return "cpp";
+		super(version, 
+				WPILibCPPPlugin.getDefault().getPreferenceStore().getString(PreferenceConstants.LIBRARY_INSTALLED), WPILibCPPPlugin.getDefault().getCPPDir());
 	}
-
 	@Override
 	protected void updateInstalledVersion(String version) {
-		IPreferenceStore prefs = WPILibCPPPlugin.getDefault().getPreferenceStore();
-		if (prefs.getBoolean(PreferenceConstants.UPDATE_LIBRARY_VERSION)) {
-			WPILibCPPPlugin.logInfo("Forcing library version to "+version);
-	    	Properties props = WPILibCore.getDefault().getProjectProperties(null);
-	    	props.setProperty("cpp-version", version);
-	    	WPILibCore.getDefault().saveGlobalProperties(props);
-			prefs.setValue(PreferenceConstants.LIBRARY_VERSION, version);
-		}
+		WPILibCPPPlugin.getDefault().getPreferenceStore().setValue(PreferenceConstants.LIBRARY_INSTALLED,
+				WPILibCPPPlugin.getDefault().getCurrentVersion());
 	}
-
+	
 	@Override
 	protected InputStream getInstallResourceStream() {
 		return CPPInstaller.class.getResourceAsStream("/resources/cpp.zip");
 	}
+
+	@Override
+	protected String getFeatureName()
+	{
+		return "cpp";
+	}
 }
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/CPPPreferencePage.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/CPPPreferencePage.java
deleted file mode 100644
index 4ee009db4f4754946e0ecd1cca23dfe15a56c431..0000000000000000000000000000000000000000
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/CPPPreferencePage.java
+++ /dev/null
@@ -1,118 +0,0 @@
-package edu.wpi.first.wpilib.plugins.cpp.preferences;
-
-import java.io.File;
-import java.io.FileFilter;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import java.util.Properties;
-
-import org.eclipse.jface.preference.BooleanFieldEditor;
-import org.eclipse.jface.preference.FieldEditorPreferencePage;
-import org.eclipse.ui.IWorkbench;
-import org.eclipse.ui.IWorkbenchPreferencePage;
-
-import edu.wpi.first.wpilib.plugins.core.WPILibCore;
-import edu.wpi.first.wpilib.plugins.core.preferences.ComboFieldEditor;
-import edu.wpi.first.wpilib.plugins.cpp.WPILibCPPPlugin;
-
-/**
- * This class represents a preference page that
- * is contributed to the Preferences dialog. By 
- * subclassing <samp>FieldEditorPreferencePage</samp>, we
- * can use the field support built into JFace that allows
- * us to create a page that is small and knows how to 
- * save, restore and apply itself.
- * <p>
- * This page is used to modify preferences only. They
- * are stored in the preference store that belongs to
- * the main plug-in class. That way, preferences can
- * be accessed directly via the preference store.
- */
-
-public class CPPPreferencePage
-	extends FieldEditorPreferencePage
-	implements IWorkbenchPreferencePage {
-	ComboFieldEditor toolchainVersionEditor;
-	BooleanFieldEditor autoUpdateToolchainEditor;
-	private ComboFieldEditor wpiLibVersionEditor;
-	private BooleanFieldEditor autoUpdateEditor;
-
-	public CPPPreferencePage() {
-		super(GRID);
-		setPreferenceStore(WPILibCPPPlugin.getDefault().getPreferenceStore());
-		setDescription("Change workspace level settings for C++.");
-	}
-	
-	/**
-	 * Creates the field editors. Field editors are abstractions of
-	 * the common GUI blocks needed to manipulate various types
-	 * of preferences. Each field editor knows how to save and
-	 * restore itself.
-	 */
-	public void createFieldEditors() {
-		wpiLibVersionEditor = new ComboFieldEditor(PreferenceConstants.LIBRARY_VERSION,
-				"&Library Version:", getFieldEditorParent(), getInstalledVersions());
-		addField(wpiLibVersionEditor);
-		autoUpdateEditor =	new BooleanFieldEditor(PreferenceConstants.UPDATE_LIBRARY_VERSION,
-				"&Auto Update Library Version", getFieldEditorParent());
-		addField(autoUpdateEditor);
-		toolchainVersionEditor = new ComboFieldEditor(PreferenceConstants.TOOLCHAIN_VERSION,
-				"&Toolchain Version:", getFieldEditorParent(), getInstalledToolchains());
-		addField(toolchainVersionEditor);
-		autoUpdateToolchainEditor =	new BooleanFieldEditor(PreferenceConstants.UPDATE_TOOLCHAIN_VERSION,
-				"&Auto Update Toolchain Version", getFieldEditorParent());
-		addField(autoUpdateToolchainEditor);
-	}
-
-	private List<String> getInstalledVersions() {
-		File[] dirs = new File(WPILibCore.getDefault().getWPILibBaseDir()+File.separator+"cpp")
-							.listFiles(new FileFilter() {
-			@Override public boolean accept(File f) {
-				return f.isDirectory();
-			}
-		});
-		List<String> versions = new ArrayList<String>();
-		for (File dir : dirs) {
-			versions.add(dir.getName());
-		}
-		Collections.sort(versions);
-		return versions;
-	}
-	
-	private List<String> getInstalledToolchains() {
-		File[] dirs = new File(WPILibCore.getDefault().getWPILibBaseDir()+File.separator+"toolchains")
-							.listFiles(new FileFilter() {
-			@Override public boolean accept(File f) {
-				return f.isDirectory();
-			}
-		});
-		List<String> versions = new ArrayList<String>();
-		for (File dir : dirs) {
-			versions.add(dir.getName());
-		}
-		Collections.sort(versions);
-		return versions;
-	}
-
-	/* (non-Javadoc)
-	 * @see org.eclipse.ui.IWorkbenchPreferencePage#init(org.eclipse.ui.IWorkbench)
-	 */
-	public void init(IWorkbench workbench) {
-		WPILibCPPPlugin.logInfo("Preferences initialized.");
-		Properties props = WPILibCore.getDefault().getProjectProperties(null);
-		getPreferenceStore().setValue(PreferenceConstants.LIBRARY_VERSION,
-				props.getProperty("cpp-version", WPILibCPPPlugin.getDefault().getCurrentVersion()));
-	}
-	
-	@Override public void performApply() {
-		performOk();
-	}
-	
-    @Override public boolean performOk() {
-    	Properties props = WPILibCore.getDefault().getProjectProperties(null);
-    	props.setProperty("cpp-version", wpiLibVersionEditor.getChoice());
-    	WPILibCore.getDefault().saveGlobalProperties(props);
-		return super.performOk();
-	}
-}
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/PreferenceConstants.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/PreferenceConstants.java
index 936107c9375ff4708f91b31eec4f1df71f0530eb..d04dd6165d3ae5fabae0735e3b9089e279c8982c 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/PreferenceConstants.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/PreferenceConstants.java
@@ -4,8 +4,6 @@ package edu.wpi.first.wpilib.plugins.cpp.preferences;
  * Constant definitions for plug-in preferences
  */
 public class PreferenceConstants {
-	public static final String LIBRARY_VERSION = "libraryVersionPreference";
-	public static final String UPDATE_LIBRARY_VERSION = "udpateLibraryVersionPreference";
-	public static final String TOOLCHAIN_VERSION = "toolchainVersionPreference";
-	public static final String UPDATE_TOOLCHAIN_VERSION = "udpateToolchainVersionPreference";
+	public static final String LIBRARY_INSTALLED = "libraryVersion_current";
+	public static final String TOOLCHAIN_INSTALLED = "toolchainVersion_current";
 }
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/PreferenceInitializer.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/PreferenceInitializer.java
index a82f47bcab3e3eec2dccfbffdcd109a4f17b2d29..b4241e92a2ed7ed3059d622bbf28cd0b591b58f3 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/PreferenceInitializer.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/preferences/PreferenceInitializer.java
@@ -18,11 +18,8 @@ public class PreferenceInitializer extends AbstractPreferenceInitializer {
 	 */
 	public void initializeDefaultPreferences() {
 		IPreferenceStore store = WPILibCPPPlugin.getDefault().getPreferenceStore();
-		store.setDefault(PreferenceConstants.LIBRARY_VERSION,
-				WPILibCore.getDefault().getProjectProperties(null)
-				.getProperty("cpp-version", WPILibCPPPlugin.getDefault().getCurrentVersion()));
-		store.setDefault(PreferenceConstants.UPDATE_LIBRARY_VERSION, true);
-		store.setDefault(PreferenceConstants.TOOLCHAIN_VERSION, WPILibCPPPlugin.getDefault().getDefaultToolchainVersion());
-		store.setDefault(PreferenceConstants.UPDATE_TOOLCHAIN_VERSION, true);
+		if (!store.contains(PreferenceConstants.LIBRARY_INSTALLED))
+			store.setValue(PreferenceConstants.LIBRARY_INSTALLED,
+					"none");
 	}
 }
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/plugin.xml b/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/plugin.xml
index d6e694fdc63e7156fdfaa29014ebfedaf6e235c8..8e70003133115fa69a90fb86f54c123b0bc2d9f1 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/plugin.xml
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/plugin.xml
@@ -157,15 +157,6 @@
          </enablement>
       </commonWizard>
    </extension>
-   <extension
-       point="org.eclipse.ui.preferencePages">
-      <page
-            category="edu.wpi.first.wpilib.plugins.core.preferences.WPILibPreferencePage"
-            class="edu.wpi.first.wpilib.plugins.java.preferences.JavaPreferencePage"
-            id="edu.wpi.first.wpilib.plugins.java.preferences.JavaPreferencePage"
-            name="Java Preferences">
-      </page>
-   </extension>
    <extension
          point="org.eclipse.core.runtime.preferences">
       <initializer
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/WPILibJavaPlugin.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/WPILibJavaPlugin.java
index ad5230676b947db987fc65b2ea7bee05b377bc10..4ad4033badc77a046b8ccf7bbfbd150b502bfeac 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/WPILibJavaPlugin.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/WPILibJavaPlugin.java
@@ -78,12 +78,16 @@ public class WPILibJavaPlugin extends AbstractUIPlugin implements IStartup {
 			return "DEVELOPMENT";
 		}
 	}
+	public String getJavaPath() {
+		return WPILibCore.getDefault().getWPILibBaseDir()
+				+ File.separator + "java" + File.separator + "current";
+	}
 
 	public Properties getProjectProperties(IProject project) {
 		Properties defaults = WPILibCore.getDefault().getProjectProperties(project);
 		Properties props;
 		try {
-			File file = new File(WPILibCore.getDefault().getWPILibBaseDir()+"/java/"+getCurrentVersion()+"/ant/build.properties");
+			File file = new File(WPILibCore.getDefault().getWPILibBaseDir()+"/java/current/ant/build.properties");
 			props = new AntPropertiesParser(new FileInputStream(file)).getProperties(defaults);
 		} catch (Exception e) {
             WPILibJavaPlugin.logError("Error getting properties.", e);
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/installer/JavaInstaller.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/installer/JavaInstaller.java
index d3e023ddf314d2c54900ad2b5a2bf54e219e73bb..3dade7364e94d46979a9228b8c4a5c15c895deae 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/installer/JavaInstaller.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/installer/JavaInstaller.java
@@ -1,11 +1,8 @@
 package edu.wpi.first.wpilib.plugins.java.installer;
 
 import java.io.InputStream;
-import java.util.Properties;
-
 import org.eclipse.jface.preference.IPreferenceStore;
 
-import edu.wpi.first.wpilib.plugins.core.WPILibCore;
 import edu.wpi.first.wpilib.plugins.core.installer.AbstractInstaller;
 import edu.wpi.first.wpilib.plugins.java.WPILibJavaPlugin;
 import edu.wpi.first.wpilib.plugins.java.preferences.PreferenceConstants;
@@ -19,7 +16,9 @@ import edu.wpi.first.wpilib.plugins.java.preferences.PreferenceConstants;
 public class JavaInstaller extends AbstractInstaller {
 
 	public JavaInstaller(String version) {
-		super(version);
+		super(version, 
+				WPILibJavaPlugin.getDefault().getPreferenceStore().getString(PreferenceConstants.LIBRARY_INSTALLED),
+				WPILibJavaPlugin.getDefault().getJavaPath());
 	}
 
 	@Override
@@ -30,14 +29,7 @@ public class JavaInstaller extends AbstractInstaller {
 	@Override
 	protected void updateInstalledVersion(String version) {
 		IPreferenceStore prefs = WPILibJavaPlugin.getDefault().getPreferenceStore();
-		if (prefs.getBoolean(PreferenceConstants.UPDATE_LIBRARY_VERSION)) {
-			WPILibJavaPlugin.logInfo("Forcing library version to "+version);
-	    	Properties props = WPILibCore.getDefault().getProjectProperties(null);
-	    	props.setProperty("version", version);
-	    	WPILibCore.getDefault().saveGlobalProperties(props);
-			prefs.setValue(PreferenceConstants.LIBRARY_VERSION, version);
-		}
-    	WPILibJavaPlugin.getDefault().updateProjects();
+			prefs.setValue(PreferenceConstants.LIBRARY_INSTALLED, version);
 	}
 
 	@Override
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/JavaPreferencePage.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/JavaPreferencePage.java
deleted file mode 100644
index b35c926e9078465cd612475188ce005c9f475907..0000000000000000000000000000000000000000
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/JavaPreferencePage.java
+++ /dev/null
@@ -1,96 +0,0 @@
-package edu.wpi.first.wpilib.plugins.java.preferences;
-
-import java.io.File;
-import java.io.FileFilter;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import java.util.Properties;
-
-import org.eclipse.jface.preference.BooleanFieldEditor;
-import org.eclipse.jface.preference.FieldEditorPreferencePage;
-import org.eclipse.ui.IWorkbenchPreferencePage;
-import org.eclipse.ui.IWorkbench;
-
-import edu.wpi.first.wpilib.plugins.core.WPILibCore;
-import edu.wpi.first.wpilib.plugins.core.preferences.ComboFieldEditor;
-import edu.wpi.first.wpilib.plugins.java.WPILibJavaPlugin;
-
-/**
- * This class represents a preference page that
- * is contributed to the Preferences dialog. By 
- * subclassing <samp>FieldEditorPreferencePage</samp>, we
- * can use the field support built into JFace that allows
- * us to create a page that is small and knows how to 
- * save, restore and apply itself.
- * <p>
- * This page is used to modify preferences only. They
- * are stored in the preference store that belongs to
- * the main plug-in class. That way, preferences can
- * be accessed directly via the preference store.
- */
-
-public class JavaPreferencePage
-	extends FieldEditorPreferencePage
-	implements IWorkbenchPreferencePage {
-	ComboFieldEditor wpiLibVersionEditor;
-	BooleanFieldEditor autoUpdateEditor;
-
-	public JavaPreferencePage() {
-		super(GRID);
-		setPreferenceStore(WPILibJavaPlugin.getDefault().getPreferenceStore());
-		setDescription("Change workspace level settings for Java.");
-	}
-	
-	/**
-	 * Creates the field editors. Field editors are abstractions of
-	 * the common GUI blocks needed to manipulate various types
-	 * of preferences. Each field editor knows how to save and
-	 * restore itself.
-	 */
-	public void createFieldEditors() {
-		wpiLibVersionEditor = new ComboFieldEditor(PreferenceConstants.LIBRARY_VERSION,
-				"&Library Version:", getFieldEditorParent(), getInstalledVersions());
-		addField(wpiLibVersionEditor);
-		autoUpdateEditor =	new BooleanFieldEditor(PreferenceConstants.UPDATE_LIBRARY_VERSION,
-				"&Auto Update Library Version", getFieldEditorParent());
-		addField(autoUpdateEditor);
-	}
-
-	private List<String> getInstalledVersions() {
-		File[] dirs = new File(WPILibCore.getDefault().getWPILibBaseDir()+File.separator+"java")
-							.listFiles(new FileFilter() {
-			@Override public boolean accept(File f) {
-				return f.isDirectory();
-			}
-		});
-		List<String> versions = new ArrayList<String>();
-		for (File dir : dirs) {
-			versions.add(dir.getName());
-		}
-		Collections.sort(versions);
-		return versions;
-	}
-
-	/* (non-Javadoc)
-	 * @see org.eclipse.ui.IWorkbenchPreferencePage#init(org.eclipse.ui.IWorkbench)
-	 */
-	public void init(IWorkbench workbench) {
-		WPILibJavaPlugin.logInfo("Preferences initialized.");
-		Properties props = WPILibCore.getDefault().getProjectProperties(null);
-		getPreferenceStore().setValue(PreferenceConstants.LIBRARY_VERSION,
-				props.getProperty("version", WPILibJavaPlugin.getDefault().getCurrentVersion()));
-	}
-	
-	@Override public void performApply() {
-		performOk();
-	}
-	
-    @Override public boolean performOk() {
-    	Properties props = WPILibCore.getDefault().getProjectProperties(null);
-    	props.setProperty("version", wpiLibVersionEditor.getChoice());
-    	WPILibCore.getDefault().saveGlobalProperties(props);
-    	WPILibJavaPlugin.getDefault().updateProjects();
-		return super.performOk();
-	}
-}
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/PreferenceConstants.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/PreferenceConstants.java
index f8ac04c143c23e6230ed8973185ea228768fc7f2..396e04d797df42d3d58806e4e13275b313c454ff 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/PreferenceConstants.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/PreferenceConstants.java
@@ -4,6 +4,5 @@ package edu.wpi.first.wpilib.plugins.java.preferences;
  * Constant definitions for plug-in preferences
  */
 public class PreferenceConstants {
-	public static final String LIBRARY_VERSION = "libraryVersionPreference";
-	public static final String UPDATE_LIBRARY_VERSION = "udpateLibraryVersionPreference";
+	public static final String LIBRARY_INSTALLED = "libraryVersion_current";
 }
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/PreferenceInitializer.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/PreferenceInitializer.java
index 948356d992a45de10a1455e21ec45fa3d4003808..575f3fa440c7f5fcc3184ae02cf0689bcd8b75af 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/PreferenceInitializer.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.java/src/main/java/edu/wpi/first/wpilib/plugins/java/preferences/PreferenceInitializer.java
@@ -18,9 +18,7 @@ public class PreferenceInitializer extends AbstractPreferenceInitializer {
 	 */
 	public void initializeDefaultPreferences() {
 		IPreferenceStore store = WPILibJavaPlugin.getDefault().getPreferenceStore();
-		store.setDefault(PreferenceConstants.LIBRARY_VERSION,
-				WPILibCore.getDefault().getProjectProperties(null)
-				.getProperty("version", WPILibJavaPlugin.getDefault().getCurrentVersion()));
-		store.setDefault(PreferenceConstants.UPDATE_LIBRARY_VERSION, true);
+		if (!store.contains(PreferenceConstants.LIBRARY_INSTALLED))
+			store.setValue(PreferenceConstants.LIBRARY_INSTALLED, "none");
 	}
 }
