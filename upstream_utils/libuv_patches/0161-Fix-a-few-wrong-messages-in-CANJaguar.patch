From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: thomasclark <tjclark@wpi.edu>
Date: Wed, 16 Jul 2014 10:23:46 -0400
Subject: [PATCH 0161/6262] Fix a few wrong messages in CANJaguar

Change-Id: I8e1a8fa9b0c20a40e060a8319dbbd605173dc407
---
 wpilibc/wpilibC++/lib/CANJaguar.cpp              | 16 ++++++++--------
 .../java/edu/wpi/first/wpilibj/CANJaguar.java    | 16 ++++++++--------
 2 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/wpilibc/wpilibC++/lib/CANJaguar.cpp b/wpilibc/wpilibC++/lib/CANJaguar.cpp
index aabc7253f40ed0d682f20d7772a6d871c0597735..489ff76e051697a2ee2dafd3c3def4acd66daced 100644
--- a/wpilibc/wpilibC++/lib/CANJaguar.cpp
+++ b/wpilibc/wpilibC++/lib/CANJaguar.cpp
@@ -922,7 +922,7 @@ void CANJaguar::verify()
 		}
 		else if(m_controlMode == kVoltage)
 		{
-			if(getMessage(LM_API_VCOMP_IN_RAMP, CAN_MSGID_FULL_M, dataBuffer, &dataSize))
+			if(getMessage(LM_API_VCOMP_COMP_RAMP, CAN_MSGID_FULL_M, dataBuffer, &dataSize))
 			{
 				double rate = unpackFXP8_8(dataBuffer);
 
@@ -937,7 +937,7 @@ void CANJaguar::verify()
 			else
 			{
 				// Verification is needed but not available - request it again.
-				requestMessage(LM_API_VCOMP_IN_RAMP);
+				requestMessage(LM_API_VCOMP_COMP_RAMP);
 			}
 		}
 	}
@@ -1271,7 +1271,7 @@ void CANJaguar::SetPercentMode(CANJaguar::EncoderStruct, uint16_t codesPerRev)
 void CANJaguar::SetPercentMode(CANJaguar::QuadEncoderStruct, uint16_t codesPerRev)
 {
 	ChangeControlMode(kPercentVbus);
-	SetPositionReference(LM_REF_QUAD_ENCODER);
+	SetPositionReference(LM_REF_ENCODER);
 	SetSpeedReference(LM_REF_QUAD_ENCODER);
 	ConfigEncoderCodesPerRev(codesPerRev);
 }
@@ -1335,7 +1335,7 @@ void CANJaguar::SetCurrentMode(CANJaguar::EncoderStruct, uint16_t codesPerRev, d
 void CANJaguar::SetCurrentMode(CANJaguar::QuadEncoderStruct, uint16_t codesPerRev, double p, double i, double d)
 {
 	ChangeControlMode(kCurrent);
-	SetPositionReference(LM_REF_QUAD_ENCODER);
+	SetPositionReference(LM_REF_ENCODER);
 	SetSpeedReference(LM_REF_QUAD_ENCODER);
 	ConfigEncoderCodesPerRev(codesPerRev);
 	SetPID(p, i, d);
@@ -1390,7 +1390,7 @@ void CANJaguar::SetSpeedMode(CANJaguar::EncoderStruct, uint16_t codesPerRev, dou
 void CANJaguar::SetSpeedMode(CANJaguar::QuadEncoderStruct, uint16_t codesPerRev, double p, double i, double d)
 {
 	ChangeControlMode(kSpeed);
-	SetPositionReference(LM_REF_QUAD_ENCODER);
+	SetPositionReference(LM_REF_ENCODER);
 	SetSpeedReference(LM_REF_QUAD_ENCODER);
 	ConfigEncoderCodesPerRev(codesPerRev);
 	SetPID(p, i, d);
@@ -1405,7 +1405,7 @@ void CANJaguar::SetSpeedMode(CANJaguar::QuadEncoderStruct, uint16_t codesPerRev,
 void CANJaguar::SetPositionMode(CANJaguar::QuadEncoderStruct, uint16_t codesPerRev, double p, double i, double d)
 {
 	ChangeControlMode(kPosition);
-	SetPositionReference(LM_REF_QUAD_ENCODER);
+	SetPositionReference(LM_REF_ENCODER);
 	ConfigEncoderCodesPerRev(codesPerRev);
 	SetPID(p, i, d);
 }
@@ -1456,7 +1456,7 @@ void CANJaguar::SetVoltageMode(CANJaguar::EncoderStruct, uint16_t codesPerRev)
 void CANJaguar::SetVoltageMode(CANJaguar::QuadEncoderStruct, uint16_t codesPerRev)
 {
 	ChangeControlMode(kVoltage);
-	SetPositionReference(LM_REF_QUAD_ENCODER);
+	SetPositionReference(LM_REF_ENCODER);
 	SetSpeedReference(LM_REF_QUAD_ENCODER);
 	ConfigEncoderCodesPerRev(codesPerRev);
 }
@@ -1636,7 +1636,7 @@ void CANJaguar::SetVoltageRampRate(double rampRate)
 		break;
 	case kVoltage:
 		dataSize = packFXP8_8(dataBuffer, rampRate / kControllerRate);
-		message = LM_API_VCOMP_IN_RAMP;
+		message = LM_API_VCOMP_COMP_RAMP;
 		break;
 	default:
 		wpi_setWPIErrorWithContext(IncompatibleMode, "SetVoltageRampRate only applies in Voltage and Percent mode");
diff --git a/wpilibj/wpilibJava/src/main/java/edu/wpi/first/wpilibj/CANJaguar.java b/wpilibj/wpilibJava/src/main/java/edu/wpi/first/wpilibj/CANJaguar.java
index 9cd5262b12602af3d44b1ac353e65aa89b3738ae..7f14b44275c1353ffa0bb7075114db27c3f3fe7a 100644
--- a/wpilibj/wpilibJava/src/main/java/edu/wpi/first/wpilibj/CANJaguar.java
+++ b/wpilibj/wpilibJava/src/main/java/edu/wpi/first/wpilibj/CANJaguar.java
@@ -679,7 +679,7 @@ public class CANJaguar implements MotorSafety, PIDOutput, SpeedController, LiveW
 			}
 		} else if(m_controlMode == ControlMode.Voltage) {
 			try {
-				getMessage(CANJNI.LM_API_VCOMP_IN_RAMP, CANJNI.CAN_MSGID_FULL_M, data);
+				getMessage(CANJNI.LM_API_VCOMP_COMP_RAMP, CANJNI.CAN_MSGID_FULL_M, data);
 
 				double rate = unpackFXP8_8(data);
 
@@ -692,7 +692,7 @@ public class CANJaguar implements MotorSafety, PIDOutput, SpeedController, LiveW
 
 			} catch(CANMessageNotFoundException e) {
 				// Verification is needed but not available - request it again.
-				requestMessage(CANJNI.LM_API_VCOMP_IN_RAMP);
+				requestMessage(CANJNI.LM_API_VCOMP_COMP_RAMP);
 			}
 		}
 	}
@@ -1005,7 +1005,7 @@ public class CANJaguar implements MotorSafety, PIDOutput, SpeedController, LiveW
 	public void setPercentMode(QuadEncoderTag tag, int codesPerRev)
 	{
 		changeControlMode(ControlMode.PercentVbus);
-		setPositionReference(CANJNI.LM_REF_QUAD_ENCODER);
+		setPositionReference(CANJNI.LM_REF_ENCODER);
 		setSpeedReference(CANJNI.LM_REF_QUAD_ENCODER);
 		configEncoderCodesPerRev(codesPerRev);
 	}
@@ -1069,7 +1069,7 @@ public class CANJaguar implements MotorSafety, PIDOutput, SpeedController, LiveW
 	public void setCurrentMode(QuadEncoderTag tag, int codesPerRev, double p, double i, double d)
 	{
 		changeControlMode(ControlMode.Current);
-		setPositionReference(CANJNI.LM_REF_QUAD_ENCODER);
+		setPositionReference(CANJNI.LM_REF_ENCODER);
 		setSpeedReference(CANJNI.LM_REF_QUAD_ENCODER);
 		configEncoderCodesPerRev(codesPerRev);
 		setPID(p, i, d);
@@ -1124,7 +1124,7 @@ public class CANJaguar implements MotorSafety, PIDOutput, SpeedController, LiveW
 	public void setSpeedMode(QuadEncoderTag tag, int codesPerRev, double p, double i, double d)
 	{
 		changeControlMode(ControlMode.Speed);
-		setPositionReference(CANJNI.LM_REF_QUAD_ENCODER);
+		setPositionReference(CANJNI.LM_REF_ENCODER);
 		setSpeedReference(CANJNI.LM_REF_QUAD_ENCODER);
 		configEncoderCodesPerRev(codesPerRev);
 		setPID(p, i, d);
@@ -1139,7 +1139,7 @@ public class CANJaguar implements MotorSafety, PIDOutput, SpeedController, LiveW
 	public void setPositionMode(QuadEncoderTag tag, int codesPerRev, double p, double i, double d)
 	{
 		changeControlMode(ControlMode.Position);
-		setPositionReference(CANJNI.LM_REF_QUAD_ENCODER);
+		setPositionReference(CANJNI.LM_REF_ENCODER);
 		configEncoderCodesPerRev(codesPerRev);
 		setPID(p, i, d);
 	}
@@ -1190,7 +1190,7 @@ public class CANJaguar implements MotorSafety, PIDOutput, SpeedController, LiveW
 	public void setVoltageMode(QuadEncoderTag tag, int codesPerRev)
 	{
 		changeControlMode(ControlMode.Voltage);
-		setPositionReference(CANJNI.LM_REF_QUAD_ENCODER);
+		setPositionReference(CANJNI.LM_REF_ENCODER);
 		setSpeedReference(CANJNI.LM_REF_QUAD_ENCODER);
 		configEncoderCodesPerRev(codesPerRev);
 	}
@@ -1359,7 +1359,7 @@ public class CANJaguar implements MotorSafety, PIDOutput, SpeedController, LiveW
 			break;
 		case Voltage:
 			dataSize = packFXP8_8(data, rampRate / kControllerRate);
-			message = CANJNI.LM_API_VCOMP_IN_RAMP;
+			message = CANJNI.LM_API_VCOMP_COMP_RAMP;
 			break;
 		default:
 			throw new IllegalStateException("Voltage ramp rate only applies in Percentage and Voltage modes");
