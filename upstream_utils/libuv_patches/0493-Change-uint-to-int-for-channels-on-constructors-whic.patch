From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kevin O'Connor <koconnor@usfirst.org>
Date: Wed, 19 Nov 2014 11:40:43 -0500
Subject: [PATCH 0493/6262] Change uint to int for channels on constructors
 which can take a single channel or single pointer to avoid ambiguous calls.

Change-Id: Id56f611675bf4dee8d31e152c4ee30112d07aac4
---
 wpilibc/wpilibC++Devices/include/AnalogAccelerometer.h | 2 +-
 wpilibc/wpilibC++Devices/include/AnalogTrigger.h       | 2 +-
 wpilibc/wpilibC++Devices/include/Counter.h             | 6 +++---
 wpilibc/wpilibC++Devices/include/Gyro.h                | 2 +-
 wpilibc/wpilibC++Devices/src/AnalogAccelerometer.cpp   | 2 +-
 wpilibc/wpilibC++Devices/src/AnalogTrigger.cpp         | 2 +-
 wpilibc/wpilibC++Devices/src/Counter.cpp               | 6 +++---
 wpilibc/wpilibC++Devices/src/Gyro.cpp                  | 2 +-
 8 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/wpilibc/wpilibC++Devices/include/AnalogAccelerometer.h b/wpilibc/wpilibC++Devices/include/AnalogAccelerometer.h
index 4135101aabe58bf7db79ee82d2cc704341cf4e62..61718dcb62594497848ede436ce24fcbec360f3b 100644
--- a/wpilibc/wpilibC++Devices/include/AnalogAccelerometer.h
+++ b/wpilibc/wpilibC++Devices/include/AnalogAccelerometer.h
@@ -18,7 +18,7 @@
  */
 class AnalogAccelerometer : public SensorBase, public PIDSource, public LiveWindowSendable {
 public:
-	explicit AnalogAccelerometer(uint32_t channel);
+	explicit AnalogAccelerometer(int32_t channel);
 	explicit AnalogAccelerometer(AnalogInput *channel);
 	virtual ~AnalogAccelerometer();
 
diff --git a/wpilibc/wpilibC++Devices/include/AnalogTrigger.h b/wpilibc/wpilibC++Devices/include/AnalogTrigger.h
index 6b39a64672e88e8259abcabb4da28e584d1e06ff..9b18a33b619acacb721371d5714bf0ed2c292396 100644
--- a/wpilibc/wpilibC++Devices/include/AnalogTrigger.h
+++ b/wpilibc/wpilibC++Devices/include/AnalogTrigger.h
@@ -15,7 +15,7 @@ class AnalogTrigger : public SensorBase
 {
 	friend class AnalogTriggerOutput;
 public:
-	explicit AnalogTrigger(uint32_t channel);
+	explicit AnalogTrigger(int32_t channel);
 	explicit AnalogTrigger(AnalogInput *channel);
 	virtual ~AnalogTrigger();
 
diff --git a/wpilibc/wpilibC++Devices/include/Counter.h b/wpilibc/wpilibC++Devices/include/Counter.h
index 97d0ecb019bdd5fcc63b97cc0eabc9dd4ddc21f3..7543e5fb622404e9a68991db81db325556c9ba0d 100644
--- a/wpilibc/wpilibC++Devices/include/Counter.h
+++ b/wpilibc/wpilibC++Devices/include/Counter.h
@@ -25,7 +25,7 @@ class Counter : public SensorBase, public CounterBase, public LiveWindowSendable
 public:
 
 	Counter();
-	explicit Counter(uint32_t channel);
+	explicit Counter(int32_t channel);
 	explicit Counter(DigitalSource *source);
 	explicit Counter(DigitalSource &source);
 	explicit Counter(AnalogTrigger *trigger);
@@ -34,7 +34,7 @@ public:
 			bool inverted);
 	virtual ~Counter();
 
-	void SetUpSource(uint32_t channel);
+	void SetUpSource(int32_t channel);
 	void SetUpSource(AnalogTrigger *analogTrigger, AnalogTriggerType triggerType);
 	void SetUpSource(AnalogTrigger &analogTrigger, AnalogTriggerType triggerType);
 	void SetUpSource(DigitalSource *source);
@@ -42,7 +42,7 @@ public:
 	void SetUpSourceEdge(bool risingEdge, bool fallingEdge);
 	void ClearUpSource();
 
-	void SetDownSource(uint32_t channel);
+	void SetDownSource(int32_t channel);
 	void SetDownSource(AnalogTrigger *analogTrigger, AnalogTriggerType triggerType);
 	void SetDownSource(AnalogTrigger &analogTrigger, AnalogTriggerType triggerType);
 	void SetDownSource(DigitalSource *source);
diff --git a/wpilibc/wpilibC++Devices/include/Gyro.h b/wpilibc/wpilibC++Devices/include/Gyro.h
index bcf7bb4574331112a1dc632fb9371fb162eea8ad..3dd92a6f3c7377711d96c5290244d9917a919a2f 100644
--- a/wpilibc/wpilibC++Devices/include/Gyro.h
+++ b/wpilibc/wpilibC++Devices/include/Gyro.h
@@ -30,7 +30,7 @@ public:
 	static constexpr float kCalibrationSampleTime = 5.0;
 	static constexpr float kDefaultVoltsPerDegreePerSecond = 0.007;
 
-	explicit Gyro(uint32_t channel);
+	explicit Gyro(int32_t channel);
 	explicit Gyro(AnalogInput *channel);
 	explicit Gyro(AnalogInput &channel);
 	virtual ~Gyro();
diff --git a/wpilibc/wpilibC++Devices/src/AnalogAccelerometer.cpp b/wpilibc/wpilibC++Devices/src/AnalogAccelerometer.cpp
index ac33ab3034cfca5792d2a39721459101a0d876f0..2ce5293a98ef7c0b6114684e39bce8b192e859fe 100644
--- a/wpilibc/wpilibC++Devices/src/AnalogAccelerometer.cpp
+++ b/wpilibc/wpilibC++Devices/src/AnalogAccelerometer.cpp
@@ -26,7 +26,7 @@ void AnalogAccelerometer::InitAccelerometer()
  *
  * The constructor allocates desired analog input.
  */
-AnalogAccelerometer::AnalogAccelerometer(uint32_t channel)
+AnalogAccelerometer::AnalogAccelerometer(int32_t channel)
 {
 	m_AnalogInput = new AnalogInput(channel);
 	m_allocatedChannel = true;
diff --git a/wpilibc/wpilibC++Devices/src/AnalogTrigger.cpp b/wpilibc/wpilibC++Devices/src/AnalogTrigger.cpp
index 43eaba4b126d3fe549c5e496f2e0e51187a38af4..778ced1d3fc9ffb115a93466e6aafdaaf340e9be 100644
--- a/wpilibc/wpilibC++Devices/src/AnalogTrigger.cpp
+++ b/wpilibc/wpilibC++Devices/src/AnalogTrigger.cpp
@@ -31,7 +31,7 @@ void AnalogTrigger::InitTrigger(uint32_t channel)
  *
  * @param channel The analog channel (0..7).
  */
-AnalogTrigger::AnalogTrigger(uint32_t channel)
+AnalogTrigger::AnalogTrigger(int32_t channel)
 {
 	InitTrigger(channel);
 }
diff --git a/wpilibc/wpilibC++Devices/src/Counter.cpp b/wpilibc/wpilibC++Devices/src/Counter.cpp
index 904345aed62b6d2c189172d9be67308b74e39aa4..76a0d3b9bd08847bde2acfc0e94aebd0a734aa28 100644
--- a/wpilibc/wpilibC++Devices/src/Counter.cpp
+++ b/wpilibc/wpilibC++Devices/src/Counter.cpp
@@ -82,7 +82,7 @@ Counter::Counter(DigitalSource &source) :
  *
  * The counter will start counting immediately.
  */
-Counter::Counter(uint32_t channel) :
+Counter::Counter(int32_t channel) :
 	m_upSource(NULL),
 	m_downSource(NULL),
 	m_counter(NULL)
@@ -177,7 +177,7 @@ Counter::~Counter()
 /**
  * Set the upsource for the counter as a digital input channel.
  */
-void Counter::SetUpSource(uint32_t channel)
+void Counter::SetUpSource(int32_t channel)
 {
     if (StatusIsFatal()) return;
     SetUpSource(new DigitalInput(channel));
@@ -278,7 +278,7 @@ void Counter::ClearUpSource()
 /**
  * Set the down counting source to be a digital input channel.
  */
-void Counter::SetDownSource(uint32_t channel)
+void Counter::SetDownSource(int32_t channel)
 {
 	if (StatusIsFatal()) return;
 	SetDownSource(new DigitalInput(channel));
diff --git a/wpilibc/wpilibC++Devices/src/Gyro.cpp b/wpilibc/wpilibC++Devices/src/Gyro.cpp
index 0861b5af2c09f3a4268eb242387b256dd1371f23..aa343a71ef31d9d05165e9b1298101e1d9df9ffc 100644
--- a/wpilibc/wpilibC++Devices/src/Gyro.cpp
+++ b/wpilibc/wpilibC++Devices/src/Gyro.cpp
@@ -75,7 +75,7 @@ void Gyro::InitGyro()
  *
  * @param channel The analog channel the gyro is connected to.
  */
-Gyro::Gyro(uint32_t channel)
+Gyro::Gyro(int32_t channel)
 {
 	m_analog = new AnalogInput(channel);
 	m_channelAllocated = true;
