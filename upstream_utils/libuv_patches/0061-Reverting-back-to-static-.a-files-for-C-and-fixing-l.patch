From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Patrick Plenefisch <simonpatp@gmail.com>
Date: Fri, 2 May 2014 17:54:01 -0400
Subject: [PATCH 0061/6262] Reverting back to static .a files for C++ and
 fixing lots of other assorted items

---
 Building.md                                   |  29 ++
 CMakeLists.txt                                |   2 +-
 cmake/pom.xml                                 |   4 +-
 .../META-INF/MANIFEST.MF                      |   3 +-
 .../plugin.xml                                |   2 +-
 .../resources/templates/.cproject             |  36 +-
 .../cpp/launching/DeployLaunchShortcut.java   | 210 ++++++------
 .../plugins/cpp/launching/RSEUtils.java       |   7 +-
 .../src/main/resources/cpp-zip/ant/build.xml  |  15 +-
 .../resources/cpp-zip/ant/debugjavaprogram    |   6 -
 .../main/resources/cpp-zip/ant/runcppprogram  |   6 -
 .../main/resources/cpp-zip/ant/runjavaprogram |   6 -
 hal/CMakeLists.txt                            |   4 +-
 hal/include/HAL/Analog.h                      |  66 ----
 hal/include/HAL/Analog.hpp                    |  78 +++++
 hal/include/HAL/{CAN.h => CAN.hpp}            |  14 +-
 hal/include/HAL/Digital.h                     | 141 --------
 hal/include/HAL/Digital.hpp                   | 159 +++++++++
 hal/include/HAL/{Errors.h => Errors.hpp}      |   6 +-
 hal/include/HAL/HAL.h                         | 300 -----------------
 hal/include/HAL/HAL.hpp                       | 312 ++++++++++++++++++
 hal/include/HAL/Interrupts.h                  |  27 --
 hal/include/HAL/Interrupts.hpp                |  26 ++
 hal/include/HAL/Notifier.h                    |  17 -
 hal/include/HAL/Notifier.hpp                  |  15 +
 .../HAL/{Semaphore.h => Semaphore.hpp}        |  20 +-
 hal/include/HAL/Solenoid.h                    |  17 -
 hal/include/HAL/Solenoid.hpp                  |  16 +
 hal/include/HAL/Task.h                        |  68 ----
 hal/include/HAL/Task.hpp                      |  62 ++++
 hal/include/HAL/Utilities.h                   |  18 -
 hal/include/HAL/Utilities.hpp                 |  17 +
 .../HAL/cpp/{Resource.h => Resource.hpp}      |   9 +-
 hal/include/HAL/cpp/StackTrace.h              |  15 -
 hal/include/HAL/cpp/StackTrace.hpp            |  13 +
 .../cpp/{Synchronized.h => Synchronized.hpp}  |  24 +-
 hal/include/{Log.h => Log.hpp}                |   5 +-
 hal/lib/Athena/Analog.cpp                     |  13 +-
 hal/lib/Athena/ChipObject.h                   |   6 +-
 hal/lib/Athena/ChipObject/tSystemInterface.h  |   6 +-
 hal/lib/Athena/Digital.cpp                    |  23 +-
 hal/lib/Athena/HAL.cpp                        | 259 ++++++++++-----
 hal/lib/Athena/Interrupts.cpp                 |  96 +++---
 hal/lib/Athena/Notifier.cpp                   |  58 ++--
 hal/lib/Athena/Port.h                         |  16 +-
 hal/lib/Athena/Semaphore.cpp                  |   4 +-
 hal/lib/Athena/Solenoid.cpp                   |   6 +-
 hal/lib/Athena/Task.cpp                       |   8 +-
 hal/lib/Athena/Utilities.cpp                  |  40 +--
 hal/lib/Athena/cpp/Resource.cpp               |   4 +-
 hal/lib/Athena/cpp/StackTrace.cpp             |   4 +-
 hal/lib/Athena/cpp/Synchronized.cpp           |   4 +-
 hal/lib/Athena/i2clib/i2c-lib.h               |   5 +-
 networktables/cpp/CMakeLists.txt              |   4 +-
 .../client/ClientConnectionState.h            |   1 +
 ni-libraries/genlinks                         |  11 +
 ni-libraries/libFRC_FPGA_ChipObject.so        |   2 +
 ni-libraries/libFRC_NetworkCommunication.so   |   2 +
 ni-libraries/libNiFpga.so                     |   2 +
 ni-libraries/libNiFpga.so.13                  | Bin
 ni-libraries/libNiFpgaLv.so                   |   2 +
 ni-libraries/libNiFpgaLv.so.13                | Bin
 ni-libraries/libNiRioSrv.so                   |   2 +
 ni-libraries/libNiRioSrv.so.13                | Bin
 ni-libraries/libRoboRIO_FRC_ChipObject.so     |   2 +
 ni-libraries/libi2c.so                        |   2 +
 ni-libraries/libni_emb.so                     |   2 +
 ni-libraries/libni_emb.so.6                   | Bin
 ni-libraries/libni_rtlog.so                   |   2 +
 ni-libraries/libni_rtlog.so.2                 | Bin
 ni-libraries/libnirio_emb_can.so              |   2 +
 ni-libraries/libnirio_emb_can.so.14           | Bin
 ni-libraries/libspi.so                        |   2 +
 ni-libraries/libvisa.so                       | Bin
 wpilibc/CMakeLists.txt                        |   4 +-
 wpilibc/include/ADXL345_I2C.h                 |   7 +-
 wpilibc/include/ADXL345_SPI.h                 |   7 +-
 wpilibc/include/Accelerometer.h               |   6 +-
 wpilibc/include/AnalogChannel.h               |  14 +-
 wpilibc/include/AnalogModule.h                |  14 +-
 wpilibc/include/AnalogTrigger.h               |  11 +-
 wpilibc/include/AnalogTriggerOutput.h         |  11 +-
 wpilibc/include/Base.h                        |   7 +-
 wpilibc/include/CANJaguar.h                   |  11 +-
 wpilibc/include/Commands/Scheduler.h          |   2 +-
 wpilibc/include/Compressor.h                  |  17 +-
 wpilibc/include/Controller.h                  |   9 +-
 wpilibc/include/Counter.h                     |  18 +-
 wpilibc/include/CounterBase.h                 |  13 +-
 wpilibc/include/Dashboard.h                   |  12 +-
 wpilibc/include/DashboardBase.h               |  15 +-
 wpilibc/include/DigitalInput.h                |  16 +-
 wpilibc/include/DigitalModule.h               |  21 +-
 wpilibc/include/DigitalOutput.h               |  10 +-
 wpilibc/include/DigitalSource.h               |   9 +-
 wpilibc/include/DoubleSolenoid.h              |  19 +-
 wpilibc/include/DriverStation.h               | 103 ++++--
 wpilibc/include/DriverStationEnhancedIO.h     |  12 +-
 wpilibc/include/DriverStationLCD.h            |  24 +-
 wpilibc/include/Encoder.h                     |  27 +-
 wpilibc/include/Error.h                       |  26 +-
 wpilibc/include/ErrorBase.h                   |  30 +-
 wpilibc/include/GearTooth.h                   |   9 +-
 wpilibc/include/GenericHID.h                  |  18 +-
 wpilibc/include/Gyro.h                        |   9 +-
 wpilibc/include/HiTechnicColorSensor.h        |  26 +-
 wpilibc/include/HiTechnicCompass.h            |   7 +-
 wpilibc/include/I2C.h                         |  12 +-
 wpilibc/include/InterruptableSensorBase.h     |  11 +-
 wpilibc/include/IterativeRobot.h              |  22 +-
 wpilibc/include/Jaguar.h                      |   9 +-
 wpilibc/include/Joystick.h                    |  30 +-
 wpilibc/include/Kinect.h                      |  28 +-
 wpilibc/include/KinectStick.h                 |   7 +-
 wpilibc/include/Module.h                      |  20 +-
 wpilibc/include/MotorSafety.h                 |   9 +-
 wpilibc/include/MotorSafetyHelper.h           |   8 +-
 .../NetworkCommunication/symModuleLink.h      |   2 +-
 wpilibc/include/Notifier.h                    |  13 +-
 wpilibc/include/PIDController.h               |  46 ++-
 wpilibc/include/PIDOutput.h                   |   6 +-
 wpilibc/include/PIDSource.h                   |   8 +-
 wpilibc/include/PWM.h                         | 113 ++++---
 wpilibc/include/Preferences.h                 |  22 +-
 wpilibc/include/Relay.h                       |  28 +-
 wpilibc/include/Resource.h                    |  10 +-
 wpilibc/include/RobotBase.h                   |  26 +-
 wpilibc/include/RobotDrive.h                  |  47 +--
 wpilibc/include/SPI.h                         |  14 +-
 wpilibc/include/SafePWM.h                     |   8 +-
 wpilibc/include/SensorBase.h                  |  25 +-
 wpilibc/include/SerialPort.h                  |  23 +-
 wpilibc/include/Servo.h                       |  26 +-
 wpilibc/include/SimpleRobot.h                 |  12 +-
 wpilibc/include/Skeleton.h                    |  22 +-
 wpilibc/include/Solenoid.h                    |  16 +-
 wpilibc/include/SolenoidBase.h                |  13 +-
 wpilibc/include/SpeedController.h             |  13 +-
 wpilibc/include/Talon.h                       |   9 +-
 wpilibc/include/Task.h                        |  15 +-
 wpilibc/include/Timer.h                       |   9 +-
 wpilibc/include/Ultrasonic.h                  |  31 +-
 wpilibc/include/Utility.h                     |   7 +-
 wpilibc/include/Victor.h                      |   9 +-
 wpilibc/include/WPIErrors.h                   |   5 +-
 wpilibc/include/WPILib.h                      |   7 +-
 wpilibc/lib/CANJaguar.cpp                     |   9 +-
 wpilibc/lib/Commands/Scheduler.cpp            |   2 +-
 wpilibc/lib/Dashboard.cpp                     |   2 +-
 wpilibc/lib/DigitalModule.cpp                 |   2 +-
 wpilibc/lib/DriverStation.cpp                 |   4 +-
 wpilibc/lib/DriverStationEnhancedIO.cpp       |   2 +-
 wpilibc/lib/DriverStationLCD.cpp              |   2 +-
 wpilibc/lib/Error.cpp                         |   2 +-
 wpilibc/lib/ErrorBase.cpp                     |   6 +-
 wpilibc/lib/I2C.cpp                           |   2 +-
 wpilibc/lib/IterativeRobot.cpp                |   2 +-
 wpilibc/lib/Kinect.cpp                        |   2 +-
 wpilibc/lib/PIDController.cpp                 |   2 +-
 wpilibc/lib/Preferences.cpp                   |   2 +-
 wpilibc/lib/RobotBase.cpp                     |   2 +-
 wpilibc/lib/SPI.cpp                           |   2 +-
 wpilibc/lib/Timer.cpp                         |   4 +-
 wpilibc/lib/Utility.cpp                       |   4 +-
 wpilibj/wpilibJavaJNI/CMakeLists.txt          |   4 +-
 wpilibj/wpilibJavaJNI/lib/AnalogJNI.cpp       |   4 +-
 wpilibj/wpilibJavaJNI/lib/CANJNI.cpp          |   4 +-
 wpilibj/wpilibJavaJNI/lib/CounterJNI.cpp      |   4 +-
 wpilibj/wpilibJavaJNI/lib/DIOJNI.cpp          |   4 +-
 wpilibj/wpilibJavaJNI/lib/EncoderJNI.cpp      |   4 +-
 .../lib/FRCNetworkCommunicationsLibrary.cpp   |   6 +-
 wpilibj/wpilibJavaJNI/lib/HALUtil.cpp         |   4 +-
 wpilibj/wpilibJavaJNI/lib/I2CJNI.cpp          |   2 +-
 wpilibj/wpilibJavaJNI/lib/InterruptJNI.cpp    |   2 +-
 wpilibj/wpilibJavaJNI/lib/JNIWrapper.cpp      |   4 +-
 wpilibj/wpilibJavaJNI/lib/PWMJNI.cpp          |   4 +-
 wpilibj/wpilibJavaJNI/lib/RelayJNI.cpp        |   4 +-
 wpilibj/wpilibJavaJNI/lib/SPIJNI.cpp          |   2 +-
 178 files changed, 1905 insertions(+), 1850 deletions(-)
 create mode 100644 Building.md
 delete mode 100644 eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/debugjavaprogram
 delete mode 100644 eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/runcppprogram
 delete mode 100644 eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/runjavaprogram
 delete mode 100644 hal/include/HAL/Analog.h
 create mode 100644 hal/include/HAL/Analog.hpp
 rename hal/include/HAL/{CAN.h => CAN.hpp} (56%)
 delete mode 100644 hal/include/HAL/Digital.h
 create mode 100644 hal/include/HAL/Digital.hpp
 rename hal/include/HAL/{Errors.h => Errors.hpp} (96%)
 delete mode 100644 hal/include/HAL/HAL.h
 create mode 100644 hal/include/HAL/HAL.hpp
 delete mode 100644 hal/include/HAL/Interrupts.h
 create mode 100644 hal/include/HAL/Interrupts.hpp
 delete mode 100644 hal/include/HAL/Notifier.h
 create mode 100644 hal/include/HAL/Notifier.hpp
 rename hal/include/HAL/{Semaphore.h => Semaphore.hpp} (81%)
 delete mode 100644 hal/include/HAL/Solenoid.h
 create mode 100644 hal/include/HAL/Solenoid.hpp
 delete mode 100644 hal/include/HAL/Task.h
 create mode 100644 hal/include/HAL/Task.hpp
 delete mode 100644 hal/include/HAL/Utilities.h
 create mode 100644 hal/include/HAL/Utilities.hpp
 rename hal/include/HAL/cpp/{Resource.h => Resource.hpp} (93%)
 delete mode 100644 hal/include/HAL/cpp/StackTrace.h
 create mode 100644 hal/include/HAL/cpp/StackTrace.hpp
 rename hal/include/HAL/cpp/{Synchronized.h => Synchronized.hpp} (91%)
 rename hal/include/{Log.h => Log.hpp} (97%)
 create mode 100755 ni-libraries/genlinks
 create mode 100644 ni-libraries/libFRC_FPGA_ChipObject.so
 create mode 100644 ni-libraries/libFRC_NetworkCommunication.so
 create mode 100644 ni-libraries/libNiFpga.so
 mode change 100644 => 100755 ni-libraries/libNiFpga.so.13
 create mode 100644 ni-libraries/libNiFpgaLv.so
 mode change 100644 => 100755 ni-libraries/libNiFpgaLv.so.13
 create mode 100644 ni-libraries/libNiRioSrv.so
 mode change 100644 => 100755 ni-libraries/libNiRioSrv.so.13
 create mode 100644 ni-libraries/libRoboRIO_FRC_ChipObject.so
 create mode 100644 ni-libraries/libi2c.so
 create mode 100644 ni-libraries/libni_emb.so
 mode change 100644 => 100755 ni-libraries/libni_emb.so.6
 create mode 100644 ni-libraries/libni_rtlog.so
 mode change 100644 => 100755 ni-libraries/libni_rtlog.so.2
 create mode 100644 ni-libraries/libnirio_emb_can.so
 mode change 100644 => 100755 ni-libraries/libnirio_emb_can.so.14
 create mode 100644 ni-libraries/libspi.so
 mode change 100644 => 100755 ni-libraries/libvisa.so

diff --git a/Building.md b/Building.md
new file mode 100644
index 0000000000000000000000000000000000000000..518620bd55c7354e655d064b4e9b8df32ed51c91
--- /dev/null
+++ b/Building.md
@@ -0,0 +1,29 @@
+Building everything requires Maven
+mvn package -DembeddedJDKHome=/home/patrick/Downloads/arm-jdk1.7.0_45/
+TODO... Explain maven....
+TODO.. how to import into eclipse correctly...
+
+Building C++ only
+------------------
+
+C++ requires cmake if not run from maven, and is much faster. 
+Make a new directory and then run:
+```
+mkdir build && cd build
+cmake .. -DCMAKE_TOOLCHAIN_FILE=../arm-toolchain.cmake
+make # multicore add -j(num of cpu cores + 1), so -j3 on dual core for faster compile
+make install DESTDIR=/some/dir/you/want/to/put/all/headers/and/libs #optional
+``
+
+Alternatively, if you like IDE's, you can import it directly into QtDeveloper, or a number of other IDE's such as Code::Blocks or Eclipse. See CMake documentation for details.
+Eclipse demo:
+```
+cd ..
+mkdir build && cd build
+cmake -DCMAKE_TOOLCHAIN_FILE=../allwpilib/arm-toolchain.cmake .. -G "Eclipse CDT4 - Unix Makefiles"
+```
+and then import that directory into eclipse. Eclipse will detect a CDT project and standard tools will work.
+
+GCC versions
+------------
+Update arm-toolchain.cmake if the triplet changes (eg using Ubuntu repo arm compiler is arm-linux-gnueabi) or in a non-standard location. Currently it assumes that the compiler is on the path.
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1d4db945008b324bf2045bd2077163e42b394b0e..2da30cb56965b357be6c58b6cc0fe87e04738cbc 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 2.8)
 project(All-WPILib)
 set(CMAKE_BUILD_TYPE Debug)
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wformat=2 -Wextra -Wno-unused-parameter")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wformat=2 -Wextra -Wno-unused-parameter -fPIC -Werror")
 SET(CMAKE_SKIP_BUILD_RPATH TRUE)
 
 file(GLOB_RECURSE NI_LIBS ni-libraries/*.so*)
diff --git a/cmake/pom.xml b/cmake/pom.xml
index c0b480a84e079b98bb3c76294d1e4b713b640652..d1730d87ce1c82d5b04c90d07ecea282ca4a4770 100644
--- a/cmake/pom.xml
+++ b/cmake/pom.xml
@@ -138,8 +138,8 @@
                   <type>zip</type>
                 </artifact>
                 <artifact>
-                  <file>${project.build.directory}/cmake/target-root/lib/libHALAthena.so</file>
-                  <type>so</type>
+                  <file>${project.build.directory}/cmake/target-root/lib/libHALAthena.a</file>
+                  <type>a</type>
                 </artifact>
               </artifacts>
             </configuration>
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/META-INF/MANIFEST.MF b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/META-INF/MANIFEST.MF
index b321588db9054210e39466aabaee6f76f132f117..343ba0b42a844ca987d8941d407b916604d51e90 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/META-INF/MANIFEST.MF
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/META-INF/MANIFEST.MF
@@ -24,7 +24,8 @@ Require-Bundle: org.eclipse.ui,
  org.eclipse.cdt.debug.core;bundle-version="7.2.0",
  org.eclipse.cdt.debug.ui;bundle-version="7.2.0",
  org.eclipse.cdt.launch;bundle-version="7.1.0",
- org.eclipse.cdt.launch.remote;bundle-version="2.4.0"
+ org.eclipse.cdt.launch.remote;bundle-version="2.4.0",
+ org.eclipse.cdt.debug.mi.core;bundle-version="7.2.0"
 Bundle-ActivationPolicy: lazy
 Bundle-RequiredExecutionEnvironment: JavaSE-1.7
 Export-Package: edu.wpi.first.wpilib.plugins.cpp,
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/plugin.xml b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/plugin.xml
index 492db0c514822783568da59297e44342b0e6b31b..1aa3c2b5e6b48b937f9dbae52a9d1358611b2068 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/plugin.xml
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/plugin.xml
@@ -150,7 +150,7 @@
             description="Deploy the WPILib project to the athena board."
             icon="resources/icons/wpi.ico"
             id="edu.wpi.first.wpilib.plugins.cpp.launching.deploy"
-            label="WPILib Deploy"
+            label="WPILib Deploy Configure Builder"
             modes="run,debug">
             <contextualLaunch>
             <enablement>
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/.cproject b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/.cproject
index bfc041ab71807cdb4fb9e6e693038c16db7496c8..08aebc6031049b41d94da1a1ef962e4421f9a28a 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/.cproject
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/.cproject
@@ -5,10 +5,10 @@
 			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.cross.exe.debug.418253318" moduleId="org.eclipse.cdt.core.settings" name="Debug">
 				<externalSettings/>
 				<extensions>
-					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
 					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
 					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
 					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
 				</extensions>
 			</storageModule>
 			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
@@ -34,15 +34,31 @@
 							</tool>
 							<tool id="cdt.managedbuild.tool.gnu.cross.c.linker.1367166630" name="Cross GCC Linker" superClass="cdt.managedbuild.tool.gnu.cross.c.linker"/>
 							<tool command="g++" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" errorParsers="org.eclipse.cdt.core.GLDErrorParser" id="cdt.managedbuild.tool.gnu.cross.cpp.linker.1568604896" name="Cross G++ Linker" superClass="cdt.managedbuild.tool.gnu.cross.cpp.linker">
-							  <option id="gnu.cpp.link.option.paths.1928585110" name="Library search path (-L)" superClass="gnu.cpp.link.option.paths" valueType="libPaths">
-							    <listOptionValue builtIn="false" value="$cpp-location/lib"/>
-							  </option>
-							  <option id="gnu.cpp.link.option.libs.1072058280" name="Libraries (-l)" superClass="gnu.cpp.link.option.libs" valueType="libs">
-								<listOptionValue builtIn="false" value="WPILibAthena"/>
-								<listOptionValue builtIn="false" value="dl"/>
-								<listOptionValue builtIn="false" value="pthread"/>
+								<option id="gnu.cpp.link.option.paths.1928585110" name="Library search path (-L)" superClass="gnu.cpp.link.option.paths" valueType="libPaths">
+									<listOptionValue builtIn="false" value="$cpp-location/lib"/>
+								</option>
+								<option id="gnu.cpp.link.option.libs.1072058280" name="Libraries (-l)" superClass="gnu.cpp.link.option.libs" valueType="libs">
+									<listOptionValue builtIn="false" value="WPILibAthena"/>
+									<listOptionValue builtIn="false" value="HALAthena"/>
+									<listOptionValue builtIn="false" value="NetworkTables"/>
+									<listOptionValue builtIn="false" value="FRC_FPGA_ChipObject"/>
+									<listOptionValue builtIn="false" value="FRC_NetworkCommunication"/>
+									<listOptionValue builtIn="false" value="i2c"/>
+									<listOptionValue builtIn="false" value="ni_emb"/>
+									<listOptionValue builtIn="false" value="NiFpgaLv"/>
+									<listOptionValue builtIn="false" value="NiFpga"/>
+									<listOptionValue builtIn="false" value="nirio_emb_can"/>
+									<listOptionValue builtIn="false" value="NiRioSrv"/>
+									<listOptionValue builtIn="false" value="ni_rtlog"/>
+									<listOptionValue builtIn="false" value="RoboRIO_FRC_ChipObject"/>
+									<listOptionValue builtIn="false" value="spi"/>
+									<listOptionValue builtIn="false" value="visa"/>
+									<listOptionValue builtIn="false" value="dl"/>
+									<listOptionValue builtIn="false" value="pthread"/>
+								</option>
+								<option id="gnu.cpp.link.option.flags.1747959472" name="Linker flags" superClass="gnu.cpp.link.option.flags" value="-Wl,-rpath-link,$cpp-location/lib" valueType="string"/>
+								<option id="gnu.cpp.link.option.other.1891020896" name="Other options (-Xlinker [option])" superClass="gnu.cpp.link.option.other" valueType="stringList">
 								</option>
-								<option id="gnu.cpp.link.option.flags.1747959472" superClass="gnu.cpp.link.option.flags" value="-Wl,-rpath-link,$cpp-location/lib" valueType="string"/>
 								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.1757265359" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
 									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
 									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
@@ -66,12 +82,12 @@
 			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.cross.exe.release.1534660163" moduleId="org.eclipse.cdt.core.settings" name="Release">
 				<externalSettings/>
 				<extensions>
-					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
 					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
 					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
 					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
 					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
 					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
 				</extensions>
 			</storageModule>
 			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/launching/DeployLaunchShortcut.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/launching/DeployLaunchShortcut.java
index 58e8387cbfce76d00bc460fc0db8716d8bc144f7..3026bb09db75269bcd6649965d28a9a1b61c8121 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/launching/DeployLaunchShortcut.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/launching/DeployLaunchShortcut.java
@@ -2,25 +2,42 @@ package edu.wpi.first.wpilib.plugins.cpp.launching;
 
 import java.io.File;
 import java.lang.reflect.Method;
+import java.util.ArrayList;
+import java.util.Collection;
 import java.util.HashMap;
+import java.util.List;
 import java.util.Map;
 import java.util.Vector;
 
 import org.eclipse.cdt.debug.core.ICDTLaunchConfigurationConstants;
+import org.eclipse.cdt.debug.core.executables.Executable;
+import org.eclipse.cdt.debug.core.executables.ExecutablesManager;
+import org.eclipse.cdt.debug.mi.core.IGDBServerMILaunchConfigurationConstants;
+import org.eclipse.cdt.debug.mi.core.IMIConstants;
+import org.eclipse.cdt.debug.mi.core.IMILaunchConfigurationConstants;
 import org.eclipse.cdt.launch.remote.IRemoteConnectionConfigurationConstants;
+import org.eclipse.cdt.launch.remote.IRemoteConnectionHostConstants;
+import org.eclipse.cdt.ui.ICDTConstants;
 import org.eclipse.core.internal.resources.Resource;
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;
 import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.debug.core.DebugException;
 import org.eclipse.debug.core.DebugPlugin;
 import org.eclipse.debug.core.ILaunch;
 import org.eclipse.debug.core.ILaunchConfigurationType;
 import org.eclipse.debug.core.ILaunchConfigurationWorkingCopy;
 import org.eclipse.debug.core.ILaunchManager;
+import org.eclipse.debug.internal.ui.launchConfigurations.LaunchHistory;
+import org.eclipse.debug.ui.DebugUITools;
 import org.eclipse.debug.ui.IDebugUIConstants;
+import org.eclipse.debug.ui.ILaunchGroup;
 import org.eclipse.debug.ui.ILaunchShortcut;
 import org.eclipse.jface.viewers.ISelection;
 import org.eclipse.jface.viewers.StructuredSelection;
+import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.IFileEditorInput;
 import org.eclipse.ui.PlatformUI;
@@ -38,147 +55,118 @@ import edu.wpi.first.wpilib.plugins.cpp.WPILibCPPPlugin;
  * @author Alex Henning
  */
 @SuppressWarnings("restriction")
-public class DeployLaunchShortcut implements ILaunchShortcut {
-	//Class constants - used to delineate types for launch shortcuts
+public class DeployLaunchShortcut implements ILaunchShortcut
+{
+	// Class constants - used to delineate types for launch shortcuts
 	public static final String DEPLOY_TYPE = "edu.wpi.first.wpilib.plugins.core.deploy";
-	private static final String ANT_SERVER_THREAD_NAME = "Ant Build Server Connection";
-	
-	private static ILaunch lastDeploy = null;
 	
 	/**
-	 * Returns the launch type of the shortcut that was used, one of the constants
-	 * defined in BaseLaunchShortcut
+	 * Returns the launch type of the shortcut that was used, one of the
+	 * constants defined in BaseLaunchShortcut
+	 * 
 	 * @return Launch shortcut type
 	 */
-	public String getLaunchType() {return DEPLOY_TYPE;}
+	public String getLaunchType()
+	{
+		return DEPLOY_TYPE;
+	}
 	
 	@Override
-	public void launch(ISelection selection, String mode) {
-		//Extract resource from selection
-		StructuredSelection sel = (StructuredSelection)selection;
+	public void launch(ISelection selection, String mode)
+	{
+		// Extract resource from selection
+		StructuredSelection sel = (StructuredSelection) selection;
 		IProject activeProject = null;
-		if (sel.getFirstElement() instanceof IProject) {
+		if (sel.getFirstElement() instanceof IProject)
+		{
 			activeProject = (IProject) sel.getFirstElement();
-		} else {
+		} else
+		{
 			return;
 		}
-        
-        //Run config using project found in extracted resource, with indicated mode
-        runConfig(activeProject, mode);
+		
+		// Run config using project found in extracted resource, with indicated
+		// mode
+		runConfig(activeProject, mode, PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell());
 	}
-
+	
 	@Override
-	public void launch(IEditorPart editor, String mode) {
-		//Extract resource from editor
-		if(editor  != null){
-		    IFileEditorInput input = (IFileEditorInput)editor.getEditorInput();
-		    IFile file = input.getFile();
-		    IProject activeProject = file.getProject();
-		    
-		    //If editor existed, run config using extracted resource in indicated mode
-		    runConfig(activeProject, mode);
-		}else{
+	public void launch(IEditorPart editor, String mode)
+	{
+		// Extract resource from editor
+		if (editor != null)
+		{
+			IFileEditorInput input = (IFileEditorInput) editor.getEditorInput();
+			IFile file = input.getFile();
+			IProject activeProject = file.getProject();
+			
+			// If editor existed, run config using extracted resource in
+			// indicated mode
+			runConfig(activeProject, mode, editor.getSite().getWorkbenchWindow().getShell());
+		} else
+		{
 			System.err.println("editor was null");
 		}
-
+		
 	}
 	
 	/**
-	 * Runs the ant script using the correct target for the indicated mode (deploy to cRIO or just compile)
-	 * @param activeProj The project that the script will be run on/from
-	 * @param mode The mode it will be run in (ILaunchManager.RUN_MODE or ILaunchManager.DEBUG_MODE)
+	 * 
+	 * @param activeProj
+	 *            The project that the script will be run on/from
+	 * @param mode
+	 *            The mode it will be run in (ILaunchManager.RUN_MODE or
+	 *            ILaunchManager.DEBUG_MODE)
 	 */
-	public void runConfig(IProject activeProj, String mode){
-		String targets = "deploy";
-		    
-		if(mode.equals(ILaunchManager.RUN_MODE)){
-			if(getLaunchType().equals(DEPLOY_TYPE)){
-				targets = "deploy";
-			}
-		} else if ((mode.equals(ILaunchManager.DEBUG_MODE))&&(getLaunchType().equals(DEPLOY_TYPE))) {
-			targets = "debug-deploy";
-			try{
-				PlatformUI.getWorkbench().showPerspective(IDebugUIConstants.ID_DEBUG_PERSPECTIVE, 
-					PlatformUI.getWorkbench().getActiveWorkbenchWindow());
-				
-			}catch(Exception e){}
+	public void runConfig(IProject activeProj, String mode, Shell shell) //TODO: figure out UI issues. tjats why this is undocumented""
+	{	
+		ILaunchConfigurationWorkingCopy config;
+		try
+		{
+			config = getRemoteDebugConfig(activeProj);
+			//config.doSave(); // NOTE: For debugging
+			//org.eclipse.debug.core.DebugPlugin.getDefault().getLaunchManager().addLaunch(config.launch(mode, null));
+			//THIS IS MADDENING! we want to add to the recent history, but I can't seem to find a public api to do so, so lets just launch the config dialog
+			//DebugUITools.openLaunchConfigurationPropertiesDialog(shell, config, "org.eclipse.cdt.launch.launchGroup");
+			//config.launch(mode, new NullProgressMonitor(), false, true);
+			DebugUITools.launch(config, mode);
+		} catch (CoreException e)
+		{
+			System.err.println("Debug attach failed.");
+			e.printStackTrace();
 		}
 		
-		if((lastDeploy != null)&&(!lastDeploy.isTerminated())){
-			System.out.println("Last deploy running");
-			//Find the server connection thread and kill it
-			Vector<ThreadGroup> threadGroups = new Vector<ThreadGroup>();
-	        ThreadGroup root = Thread.currentThread().getThreadGroup().getParent();
-	        while (root.getParent() != null) {root = root.getParent();}
-	        threadGroups.add(root);
-	        ThreadGroup threadGroup = threadGroups.remove(0);
-	        int numThreads = threadGroup.activeCount();
-	        Thread[] threads = new Thread[numThreads*100];
-            numThreads = threadGroup.enumerate(threads, true);
-            
-            for(Thread current: threads){
-            	if(current != null){
-            		if(current.getName().equals(ANT_SERVER_THREAD_NAME)){
-            			try{
-            				//Manually end thread and then try terminating launch
-            				Method stopMethod = current.getClass().getMethod("stop");
-            				stopMethod.invoke(current);
-            				lastDeploy.terminate();
-            				break;
-            			}catch(Exception e){e.printStackTrace();}
-            		}
-            	}
-            }
-            
-            System.out.println("Waiting");
-            try{wait(1000);}catch(Exception e){}
-               
-		}
-		
-		if (mode.equals(ILaunchManager.RUN_MODE)) {
-			System.out.println("Running ant file: " + activeProj.getLocation().toOSString() + File.separator + "build.xml");
-			System.out.println("Targets: " + targets + ", Mode: " + mode);
-			lastDeploy = AntLauncher.runAntFile(new File (activeProj.getLocation().toOSString() + File.separator + "build.xml"), targets, null, mode);
-		} else if((mode.equals(ILaunchManager.DEBUG_MODE))&&(getLaunchType().equals(DEPLOY_TYPE))) {
-			ILaunchConfigurationWorkingCopy config;
-			try {
-				config = getRemoteDebugConfig(activeProj);
-				//config.doSave(); // NOTE: For debugging
-				startDebugConfig(config, lastDeploy);
-			} catch (CoreException e) {
-				System.err.println("Debug attach failed.");
-				e.printStackTrace();
-			}
-		}
-		
-		try {
+		try
+		{
 			activeProj.refreshLocal(Resource.DEPTH_INFINITE, null);
-		} catch (Exception e) {}
+		} catch (Exception e)
+		{
+		}
 	}
 	
-	private ILaunchConfigurationWorkingCopy getRemoteDebugConfig(IProject activeProj) throws CoreException {
+	private ILaunchConfigurationWorkingCopy getRemoteDebugConfig(IProject activeProj) throws CoreException
+	{
 		ILaunchManager manager = DebugPlugin.getDefault().getLaunchManager();
 		ILaunchConfigurationType type = manager.getLaunchConfigurationType(ICDTLaunchConfigurationConstants.ID_LAUNCH_C_REMOTE_APP);
 		int teamNumber = WPILibCore.getDefault().getTeamNumber(activeProj);
 		String remote_connection = RSEUtils.getTarget(teamNumber).getName();
-
-		ILaunchConfigurationWorkingCopy config = type.newInstance(null, "Debug "+activeProj.getName());
+		
+		ILaunchConfigurationWorkingCopy config = type.newInstance(null, activeProj.getName());
 		config.setAttribute(ICDTLaunchConfigurationConstants.ATTR_PROJECT_NAME, activeProj.getName());
-		config.setAttribute(ICDTLaunchConfigurationConstants.ATTR_PROGRAM_NAME, "Debug/FRCUserProgram");
-		config.setAttribute(DebugPlugin.getUniqueIdentifier() + ".ATTR_TARGET_PATH", "/home/admin/FRCUserProgram");
-		config.setAttribute("org.eclipse.cdt.debug.mi.core.DEBUG_NAME", WPILibCPPPlugin.getDefault().getToolchain()+"/bin/arm-none-linux-gnueabi-gdb");
-		config.setAttribute("org.eclipse.cdt.dsf.gdb.DEBUG_NAME", WPILibCPPPlugin.getDefault().getToolchain()+"/bin/arm-none-linux-gnueabi-gdb");
+		Collection<Executable> exes = ExecutablesManager.getExecutablesManager().getExecutablesForProject(activeProj);
+		config.setAttribute(ICDTLaunchConfigurationConstants.ATTR_PROGRAM_NAME, 
+				exes.size() > 0 ? exes.toArray(new Executable[0])[0].getPath().makeRelativeTo(activeProj.getLocation()).toString():
+			 "Debug/FRCUserProgram");
+		config.setAttribute(IRemoteConnectionConfigurationConstants.ATTR_REMOTE_PATH, "/home/admin/FRCUserProgram");
+		config.setAttribute(IMILaunchConfigurationConstants.ATTR_DEBUG_NAME, WPILibCPPPlugin.getDefault().getToolchain() + "/bin/arm-none-linux-gnueabi-gdb");
 		config.setAttribute(IRemoteConnectionConfigurationConstants.ATTR_REMOTE_CONNECTION, remote_connection);
-		config.setAttribute(ICDTLaunchConfigurationConstants.ATTR_DEBUGGER_ID, "org.eclipse.rse.remotecdt.RemoteGDBDebugger");
-		Map<String, String> launchers = new HashMap<String, String>();
-		launchers.put("[debug]", "org.eclipse.rse.remotecdt.launch");
-		config.setAttribute(DebugPlugin.getUniqueIdentifier() + ".preferred_launchers", launchers);
-
+		config.setAttribute(ICDTLaunchConfigurationConstants.ATTR_DEBUGGER_ID, "gdbserver");
+		List<String> solibs = new ArrayList<>();
+		solibs.add(WPILibCPPPlugin.getDefault().getToolchain() + "/arm-non-linux-gnueabi/libc/lib");
+		solibs.add(WPILibCPPPlugin.getDefault().getToolchain() + "/arm-non-linux-gnueabi/libc/usr/lib");
+		solibs.add(WPILibCPPPlugin.getDefault().getCPPDir() + "/lib");
+		config.setAttribute(IMILaunchConfigurationConstants.ATTR_DEBUGGER_SOLIB_PATH, solibs);
+		
 		return config;
 	}
-	
-	private void startDebugConfig(final ILaunchConfigurationWorkingCopy config, ILaunch deploy) throws CoreException {
-		config.launch(ILaunchManager.DEBUG_MODE, null);
-	}
 }
-
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/launching/RSEUtils.java b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/launching/RSEUtils.java
index 1a88a91246dc913c46aec8ac0a79ba481ca374d0..6a2bc68fb56c7a33e4402ab13902a0f8247c4403 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/launching/RSEUtils.java
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/java/edu/wpi/first/wpilib/plugins/cpp/launching/RSEUtils.java
@@ -2,6 +2,9 @@ package edu.wpi.first.wpilib.plugins.cpp.launching;
 
 import java.util.Arrays;
 
+import org.eclipse.cdt.debug.core.ICDTLaunchConfigurationConstants;
+import org.eclipse.debug.core.DebugPlugin;
+import org.eclipse.debug.core.ILaunchConfigurationType;
 import org.eclipse.rse.core.IRSESystemType;
 import org.eclipse.rse.core.PasswordPersistenceManager;
 import org.eclipse.rse.core.RSECorePlugin;
@@ -15,7 +18,7 @@ public class RSEUtils {
 	public static IHost getTarget(int teamNumber) {
 		// The ip address based on the team number
         String hostName = "10."+(teamNumber/100)+"."+(teamNumber%100)+".2";
-        String connectionName = "Team "+teamNumber;
+        String connectionName = hostName; //"Team "+teamNumber;
    
         // get the singleton RSE registry
         try {
@@ -42,7 +45,7 @@ public class RSEUtils {
             			"The remote target for debugging the robot for team "+teamNumber+".");
             	host.setDefaultUserId("admin");
             	SystemSignonInformation info = new SystemSignonInformation(hostName, "admin",
-            			"XX", systemType);
+            			"", systemType);
     			PasswordPersistenceManager.getInstance().add(info, true, false);
             } catch (Exception e) {
                 e.printStackTrace();
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/build.xml b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/build.xml
index 3a3248fdb6fd9c53266ce666d741de077bf1d563..8c46cf2257b06410d2c1147d0b0715915ebb3b05 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/build.xml
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/build.xml
@@ -30,14 +30,13 @@
   </target>
   
   <target name="deploy" depends="get-target-ip" description="Deploy the progam and start it running.">
-    <echo>[athena-deploy] Killing running program</echo>
     <sshexec host="${target}"
-             username="${username}"
-             password="${password}"
-             trust="true"
-             command="killall FRCUserProgram; sleep 1"/>
+	     username="${username}"
+	     password="${password}"
+	     trust="true"
+	     command="rm ${deploy.dir}/FRCUserProgram" />
     <echo>[athena-deploy] Copying code over.</echo>
-    <scp file="${out.exe}" todir="${username}@${target}:${deploy.dir}"
+    <scp file="${out.exe}" sftp="true" todir="${username}@${target}:${deploy.dir}"
 	 password="${password}" trust="true"/>
     <sshexec host="${target}"
 	     username="${username}"
@@ -119,14 +118,12 @@ ${md5.hal} usr/local/frc/lib/libHALAthena.so</echo>
 				 command="opkg install /tmp/${opkg.name}_${cpp-sos}_${opkg.arch}.deb; sh -c 'rm -rf /tmp/wpilib*.deb'"/>
 		</else>
 	</if>
-    <scp file="${wpilib.ant.dir}/runcppprogram" todir="${username}@${target}:${deploy.dir}"
-	 password="${password}" trust="true"/>
     <echo>[athena-deploy] Starting program.</echo>
     <sshexec host="${target}"
 	     username="${username}"
 	     password="${password}"
 	     trust="true"
-	     command="chmod a+x run*program; ${deploy.run.command}"/>
+	     command="chmod +x ${deploy.dir}/FRCUserProgram; ${deploy.dir}/FRCUserProgram"/>
   </target>
 
   <target name="debug-deploy" depends="get-target-ip" description="Deploy the jar and start the program running in debug mode.">
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/debugjavaprogram b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/debugjavaprogram
deleted file mode 100644
index e5c0068b6a82b5e4bd571f4cbff16e14f23d16b5..0000000000000000000000000000000000000000
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/debugjavaprogram
+++ /dev/null
@@ -1,6 +0,0 @@
-#. ./.profile
-killall java
-sleep 1
-nohup java -Djna.library.path=$LD_LIBRARY_PATH -Xmx32M -agentlib:jdwp=transport=dt_socket,address=8348,server=y,suspend=y -jar FRCUserProgram.jar edu.wpi.first.wpilibj.unittests.RunTests
-
-
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/runcppprogram b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/runcppprogram
deleted file mode 100644
index 8f6e0b4827bc460a37e328ea63c4ba1d1fdca492..0000000000000000000000000000000000000000
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/runcppprogram
+++ /dev/null
@@ -1,6 +0,0 @@
-#. ./.profile
-killall java
-killall FRCUserProgram
-sleep 1
-chmod +x ./FRCUserProgram
-./FRCUserProgram
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/runjavaprogram b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/runjavaprogram
deleted file mode 100644
index 272b38cd183cf808a96d69c6fd1aa6e52e7ab869..0000000000000000000000000000000000000000
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/src/main/resources/cpp-zip/ant/runjavaprogram
+++ /dev/null
@@ -1,6 +0,0 @@
-#. ./.profile
-killall java
-killall FRCUserProgram
-sleep 1
-nohup /usr/local/frc/JRE/bin/java -jar FRCUserProgram.jar
-#nohup /usr/local/frc/JRE/bin/java -Djna.library.path=$LD_LIBRARY_PATH -Xmx32M -jar FRCUserProgram.jar
diff --git a/hal/CMakeLists.txt b/hal/CMakeLists.txt
index a41d559995d3a7c1d2ab84e1ae4752b9e8bdb1df..2be3df36245099a14edf7d56b0947082e593e836 100644
--- a/hal/CMakeLists.txt
+++ b/hal/CMakeLists.txt
@@ -3,9 +3,9 @@ project(HAL)
 
 file(GLOB_RECURSE SRC_FILES lib/Athena/*.cpp)
 include_directories(lib/Athena include)
-add_library(HALAthena SHARED ${SRC_FILES})
+add_library(HALAthena STATIC ${SRC_FILES})
 target_link_libraries(HALAthena ${NI_LIBS})
-INSTALL(TARGETS HALAthena LIBRARY DESTINATION lib COMPONENT lib)
+INSTALL(TARGETS HALAthena ARCHIVE DESTINATION lib COMPONENT lib)
 INSTALL(FILES ${NI_LIBS} DESTINATION lib COMPONENT ni_lib)
 INSTALL(DIRECTORY include DESTINATION ${CMAKE_INSTALL_PREFIX} COMPONENT headers)
 # lib/ c m gcc_s ld-linux
diff --git a/hal/include/HAL/Analog.h b/hal/include/HAL/Analog.h
deleted file mode 100644
index 260cbeceb2064594a9f188c1c086d4f8c710b70e..0000000000000000000000000000000000000000
--- a/hal/include/HAL/Analog.h
+++ /dev/null
@@ -1,66 +0,0 @@
-
-#ifdef __vxworks
-#include <vxWorks.h>
-#else
-#include <stdint.h>
-#endif
-
-#ifndef HAL_ANALOG_H
-#define HAL_ANALOG_H
-
-extern "C" {
-  void* initializeAnalogPort(void* port_pointer, int32_t *status);
-  bool checkAnalogModule(uint8_t module);
-  bool checkAnalogChannel(uint32_t pin);
-
-  void setAnalogSampleRate(double samplesPerSecond, int32_t *status);
-  float getAnalogSampleRate(int32_t *status);
-  void setAnalogSampleRateWithModule(uint8_t module, double samplesPerSecond, int32_t *status);
-  float getAnalogSampleRateWithModule(uint8_t module, int32_t *status);
-  void setAnalogAverageBits(void* analog_port_pointer, uint32_t bits, int32_t *status);
-  uint32_t getAnalogAverageBits(void* analog_port_pointer, int32_t *status);
-  void setAnalogOversampleBits(void* analog_port_pointer, uint32_t bits, int32_t *status);
-  uint32_t getAnalogOversampleBits(void* analog_port_pointer, int32_t *status);
-  int16_t getAnalogValue(void* analog_port_pointer, int32_t *status);
-  int32_t getAnalogAverageValue(void* analog_port_pointer, int32_t *status);
-  int32_t getAnalogVoltsToValue(void* analog_port_pointer, double voltage, int32_t *status);
-  float getAnalogVoltage(void* analog_port_pointer, int32_t *status);
-  float getAnalogAverageVoltage(void* analog_port_pointer, int32_t *status);
-  uint32_t getAnalogLSBWeight(void* analog_port_pointer, int32_t *status);
-  int32_t getAnalogOffset(void* analog_port_pointer, int32_t *status);
-
-  bool isAccumulatorChannel(void* analog_port_pointer, int32_t *status);
-  void initAccumulator(void* analog_port_pointer, int32_t *status);
-  void resetAccumulator(void* analog_port_pointer, int32_t *status);
-  void setAccumulatorCenter(void* analog_port_pointer, int32_t center, int32_t *status);
-  void setAccumulatorDeadband(void* analog_port_pointer, int32_t deadband, int32_t *status);
-  int64_t getAccumulatorValue(void* analog_port_pointer, int32_t *status);
-  uint32_t getAccumulatorCount(void* analog_port_pointer, int32_t *status);
-  void getAccumulatorOutput(void* analog_port_pointer, int64_t *value, uint32_t *count, int32_t *status);
-
-  typedef enum {kInWindow=0, kState=1, kRisingPulse=2, kFallingPulse=3} AnalogTriggerType;
-  void* initializeAnalogTrigger(void* port_pointer, uint32_t *index, int32_t *status);
-  void cleanAnalogTrigger(void* analog_trigger_pointer, int32_t *status);
-  void setAnalogTriggerLimitsRaw(void* analog_trigger_pointer, int32_t lower, int32_t upper, int32_t *status);
-  void setAnalogTriggerLimitsVoltage(void* analog_trigger_pointer, double lower, double upper, int32_t *status);
-  void setAnalogTriggerAveraged(void* analog_trigger_pointer, bool useAveragedValue, int32_t *status);
-  void setAnalogTriggerFiltered(void* analog_trigger_pointer, bool useFilteredValue, int32_t *status);
-  bool getAnalogTriggerInWindow(void* analog_trigger_pointer, int32_t *status);
-  bool getAnalogTriggerTriggerState(void* analog_trigger_pointer, int32_t *status);
-  bool getAnalogTriggerOutput(void* analog_trigger_pointer, AnalogTriggerType type, int32_t *status);
-
-
-  //// Float JNA Hack
-  // Float
-  int getAnalogSampleRateIntHack(int32_t *status);
-  int getAnalogSampleRateWithModuleIntHack(uint8_t module, int32_t *status);
-  int getAnalogVoltageIntHack(void* analog_port_pointer, int32_t *status);
-  int getAnalogAverageVoltageIntHack(void* analog_port_pointer, int32_t *status);
-  
-  // Doubles
-  void setAnalogSampleRateIntHack(int samplesPerSecond, int32_t *status);
-  void setAnalogSampleRateWithModuleIntHack(uint8_t module, int samplesPerSecond, int32_t *status);
-  int32_t getAnalogVoltsToValueIntHack(void* analog_port_pointer, int voltage, int32_t *status);
-  void setAnalogTriggerLimitsVoltageIntHack(void* analog_trigger_pointer, int lower, int upper, int32_t *status);
-}
-#endif
diff --git a/hal/include/HAL/Analog.hpp b/hal/include/HAL/Analog.hpp
new file mode 100644
index 0000000000000000000000000000000000000000..a88d557cdba64810b48472a3f645edceb3928a00
--- /dev/null
+++ b/hal/include/HAL/Analog.hpp
@@ -0,0 +1,78 @@
+#pragma once
+
+#ifdef __vxworks
+#include <vxWorks.h>
+#else
+#include <stdint.h>
+#endif
+
+enum AnalogTriggerType
+{
+	kInWindow = 0,
+	kState = 1,
+	kRisingPulse = 2,
+	kFallingPulse = 3
+};
+
+extern "C"
+{
+	void* initializeAnalogPort(void* port_pointer, int32_t *status);
+	bool checkAnalogModule(uint8_t module);
+	bool checkAnalogChannel(uint32_t pin);
+
+	void setAnalogSampleRate(double samplesPerSecond, int32_t *status);
+	float getAnalogSampleRate(int32_t *status);
+	void setAnalogSampleRateWithModule(uint8_t module, double samplesPerSecond, int32_t *status);
+	float getAnalogSampleRateWithModule(uint8_t module, int32_t *status);
+	void setAnalogAverageBits(void* analog_port_pointer, uint32_t bits, int32_t *status);
+	uint32_t getAnalogAverageBits(void* analog_port_pointer, int32_t *status);
+	void setAnalogOversampleBits(void* analog_port_pointer, uint32_t bits, int32_t *status);
+	uint32_t getAnalogOversampleBits(void* analog_port_pointer, int32_t *status);
+	int16_t getAnalogValue(void* analog_port_pointer, int32_t *status);
+	int32_t getAnalogAverageValue(void* analog_port_pointer, int32_t *status);
+	int32_t getAnalogVoltsToValue(void* analog_port_pointer, double voltage, int32_t *status);
+	float getAnalogVoltage(void* analog_port_pointer, int32_t *status);
+	float getAnalogAverageVoltage(void* analog_port_pointer, int32_t *status);
+	uint32_t getAnalogLSBWeight(void* analog_port_pointer, int32_t *status);
+	int32_t getAnalogOffset(void* analog_port_pointer, int32_t *status);
+
+	bool isAccumulatorChannel(void* analog_port_pointer, int32_t *status);
+	void initAccumulator(void* analog_port_pointer, int32_t *status);
+	void resetAccumulator(void* analog_port_pointer, int32_t *status);
+	void setAccumulatorCenter(void* analog_port_pointer, int32_t center, int32_t *status);
+	void setAccumulatorDeadband(void* analog_port_pointer, int32_t deadband, int32_t *status);
+	int64_t getAccumulatorValue(void* analog_port_pointer, int32_t *status);
+	uint32_t getAccumulatorCount(void* analog_port_pointer, int32_t *status);
+	void getAccumulatorOutput(void* analog_port_pointer, int64_t *value, uint32_t *count,
+			int32_t *status);
+
+	void* initializeAnalogTrigger(void* port_pointer, uint32_t *index, int32_t *status);
+	void cleanAnalogTrigger(void* analog_trigger_pointer, int32_t *status);
+	void setAnalogTriggerLimitsRaw(void* analog_trigger_pointer, int32_t lower, int32_t upper,
+			int32_t *status);
+	void setAnalogTriggerLimitsVoltage(void* analog_trigger_pointer, double lower, double upper,
+			int32_t *status);
+	void setAnalogTriggerAveraged(void* analog_trigger_pointer, bool useAveragedValue,
+			int32_t *status);
+	void setAnalogTriggerFiltered(void* analog_trigger_pointer, bool useFilteredValue,
+			int32_t *status);
+	bool getAnalogTriggerInWindow(void* analog_trigger_pointer, int32_t *status);
+	bool getAnalogTriggerTriggerState(void* analog_trigger_pointer, int32_t *status);
+	bool getAnalogTriggerOutput(void* analog_trigger_pointer, AnalogTriggerType type,
+			int32_t *status);
+
+	//// Float JNA Hack
+	// Float
+	int getAnalogSampleRateIntHack(int32_t *status);
+	int getAnalogSampleRateWithModuleIntHack(uint8_t module, int32_t *status);
+	int getAnalogVoltageIntHack(void* analog_port_pointer, int32_t *status);
+	int getAnalogAverageVoltageIntHack(void* analog_port_pointer, int32_t *status);
+
+	// Doubles
+	void setAnalogSampleRateIntHack(int samplesPerSecond, int32_t *status);
+	void setAnalogSampleRateWithModuleIntHack(uint8_t module, int samplesPerSecond,
+			int32_t *status);
+	int32_t getAnalogVoltsToValueIntHack(void* analog_port_pointer, int voltage, int32_t *status);
+	void setAnalogTriggerLimitsVoltageIntHack(void* analog_trigger_pointer, int lower, int upper,
+			int32_t *status);
+}
diff --git a/hal/include/HAL/CAN.h b/hal/include/HAL/CAN.hpp
similarity index 56%
rename from hal/include/HAL/CAN.h
rename to hal/include/HAL/CAN.hpp
index c069adea09d1ebd0fce82ec5c433b31fe7fad954..6b032a43bdf94aa96f5c19160dc02a7be72ca670 100644
--- a/hal/include/HAL/CAN.h
+++ b/hal/include/HAL/CAN.hpp
@@ -1,3 +1,4 @@
+#pragma once
 
 #ifdef __vxworks
 #include <vxWorks.h>
@@ -5,11 +6,10 @@
 #include <stdint.h>
 #endif
 
-#ifndef HAL_CAN_H
-#define HAL_CAN_H
-
-extern "C" {
-	void JaguarCANSendMessage(uint32_t messageID, const uint8_t *data, uint8_t dataSize, int32_t *status);
-	void JaguarCANReceiveMessage(uint32_t *messageID, uint8_t *data, uint8_t *dataSize, uint32_t timeoutMs, int32_t *status);
+extern "C"
+{
+	void JaguarCANSendMessage(uint32_t messageID, const uint8_t *data, uint8_t dataSize,
+			int32_t *status);
+	void JaguarCANReceiveMessage(uint32_t *messageID, uint8_t *data, uint8_t *dataSize,
+			uint32_t timeoutMs, int32_t *status);
 }
-#endif
diff --git a/hal/include/HAL/Digital.h b/hal/include/HAL/Digital.h
deleted file mode 100644
index 91a33fd802f6fa780f03eb966d8412fe8d3bf4e2..0000000000000000000000000000000000000000
--- a/hal/include/HAL/Digital.h
+++ /dev/null
@@ -1,141 +0,0 @@
-
-#ifdef __vxworks
-#include <vxWorks.h>
-#else
-#include <stdint.h>
-#endif
-
-#ifndef HAL_DIGITAL_H
-#define HAL_DIGITAL_H
-extern "C" {
-  void* initializeDigitalPort(void* port_pointer, int32_t *status);
-  bool checkDigitalModule(uint8_t module);
-  bool checkPWMChannel(void* digital_port_pointer);
-  bool checkRelayChannel(void* digital_port_pointer);
-  uint8_t remapDigitalChannel(uint32_t pin, int32_t *status);
-  uint8_t unmapDigitalChannel(uint32_t pin, int32_t *status);
-  
-  void setPWM(void* digital_port_pointer, unsigned short value, int32_t *status);
-  unsigned short getPWM(void* digital_port_pointer, int32_t *status);
-  void setPWMPeriodScale(void* digital_port_pointer, uint32_t squelchMask, int32_t *status);
-  void* allocatePWM(int32_t *status);
-  void* allocatePWMWithModule(uint8_t module, int32_t *status);
-  void freePWM(void* pwmGenerator, int32_t *status);
-  void freePWMWithModule(uint8_t module, void* pwmGenerator, int32_t *status);
-  void setPWMRate(double rate, int32_t *status);
-  void setPWMRateWithModule(uint8_t module, double rate, int32_t *status);
-  void setPWMDutyCycle(void* pwmGenerator, double dutyCycle, int32_t *status);
-  void setPWMDutyCycleWithModule(uint8_t module, void* pwmGenerator, double dutyCycle, int32_t *status);
-  void setPWMOutputChannel(void* pwmGenerator, uint32_t pin, int32_t *status);
-  void setPWMOutputChannelWithModule(uint8_t module, void* pwmGenerator, uint32_t pin, int32_t *status);
-  
-  void setRelayForward(void* digital_port_pointer, bool on, int32_t *status);
-  void setRelayReverse(void* digital_port_pointer, bool on, int32_t *status);
-  bool getRelayForward(void* digital_port_pointer, int32_t *status);
-  bool getRelayReverse(void* digital_port_pointer, int32_t *status);
-  
-  bool allocateDIO(void* digital_port_pointer, bool input, int32_t *status);
-  void freeDIO(void* digital_port_pointer, int32_t *status);
-  void setDIO(void* digital_port_pointer, short value, int32_t *status);
-  bool getDIO(void* digital_port_pointer, int32_t *status);
-  bool getDIODirection(void* digital_port_pointer, int32_t *status);
-  void pulse(void* digital_port_pointer, double pulseLength, int32_t *status);
-  bool isPulsing(void* digital_port_pointer, int32_t *status);
-  bool isAnyPulsing(int32_t *status);
-  bool isAnyPulsingWithModule(uint8_t module, int32_t *status);
-
-  typedef enum {kTwoPulse=0, kSemiperiod=1, kPulseLength=2, kExternalDirection=3} Mode;
-  
-  void* initializeCounter(Mode mode, uint32_t *index, int32_t *status);
-  void freeCounter(void* counter_pointer, int32_t *status);
-  void setCounterAverageSize(void* counter_pointer, int32_t size, int32_t *status);
-  void setCounterUpSourceWithModule(void* counter_pointer, uint8_t module, uint32_t pin,
-									bool analogTrigger, int32_t *status); // TODO: Without Module
-  void setCounterUpSourceEdge(void* counter_pointer, bool risingEdge, bool fallingEdge, int32_t *status);
-  void clearCounterUpSource(void* counter_pointer, int32_t *status);
-  void setCounterDownSourceWithModule(void* counter_pointer, uint8_t module, uint32_t pin,
-									  bool analogTrigger, int32_t *status); // TODO: Without Module
-  void setCounterDownSourceEdge(void* counter_pointer, bool risingEdge, bool fallingEdge, int32_t *status);
-  void clearCounterDownSource(void* counter_pointer, int32_t *status);  
-  void setCounterUpDownMode(void* counter_pointer, int32_t *status);
-  void setCounterExternalDirectionMode(void* counter_pointer, int32_t *status);
-  void setCounterSemiPeriodMode(void* counter_pointer, bool highSemiPeriod, int32_t *status);
-  void setCounterPulseLengthMode(void* counter_pointer, double threshold, int32_t *status);
-  int32_t getCounterSamplesToAverage(void* counter_pointer, int32_t *status);
-  void setCounterSamplesToAverage(void* counter_pointer, int samplesToAverage, int32_t *status);
-  void startCounter(void* counter_pointer, int32_t *status);
-  void stopCounter(void* counter_pointer, int32_t *status);
-  void resetCounter(void* counter_pointer, int32_t *status);
-  int32_t getCounter(void* counter_pointer, int32_t *status);
-  double getCounterPeriod(void* counter_pointer, int32_t *status);
-  void setCounterMaxPeriod(void* counter_pointer, double maxPeriod, int32_t *status);
-  void setCounterUpdateWhenEmpty(void* counter_pointer, bool enabled, int32_t *status);
-  bool getCounterStopped(void* counter_pointer, int32_t *status);
-  bool getCounterDirection(void* counter_pointer, int32_t *status);
-  void setCounterReverseDirection(void* counter_pointer, bool reverseDirection, int32_t *status);
-
-  void* initializeEncoder(uint8_t port_a_module, uint32_t port_a_pin, bool port_a_analog_trigger,
-						  uint8_t port_b_module, uint32_t port_b_pin, bool port_b_analog_trigger,
-						  bool reverseDirection, int32_t *index, int32_t *status); // TODO: fix routing
-  void freeEncoder(void* encoder_pointer, int32_t *status);
-  void startEncoder(void* encoder_pointer, int32_t *status);
-  void stopEncoder(void* encoder_pointer, int32_t *status);
-  void resetEncoder(void* encoder_pointer, int32_t *status);
-  int32_t getEncoder(void* encoder_pointer, int32_t *status); // Raw value
-  double getEncoderPeriod(void* encoder_pointer, int32_t *status);
-  void setEncoderMaxPeriod(void* encoder_pointer, double maxPeriod, int32_t *status);
-  bool getEncoderStopped(void* encoder_pointer, int32_t *status);
-  bool getEncoderDirection(void* encoder_pointer, int32_t *status);
-  void setEncoderReverseDirection(void* encoder_pointer, bool reverseDirection, int32_t *status);
-  void setEncoderSamplesToAverage(void* encoder_pointer, uint32_t samplesToAverage, int32_t *status);
-  uint32_t getEncoderSamplesToAverage(void* encoder_pointer, int32_t *status);
-
-  uint16_t getLoopTiming(int32_t *status);
-  uint16_t getLoopTimingWithModule(uint8_t module, int32_t *status);
-
-  enum tSPIConstants {kReceiveFIFODepth=512, kTransmitFIFODepth=512};
-  enum tFrameMode {kChipSelect, kPreLatchPulse, kPostLatchPulse, kPreAndPostLatchPulse};
-  void* initializeSPI(uint8_t sclk_routing_module, uint32_t sclk_routing_pin,
-					  uint8_t mosi_routing_module, uint32_t mosi_routing_pin,
-					  uint8_t miso_routing_module, uint32_t miso_routing_pin, int32_t *status);
-  void cleanSPI(void* spi_pointer, int32_t *status);
-  void setSPIBitsPerWord(void* spi_pointer, uint32_t bits, int32_t *status);
-  uint32_t getSPIBitsPerWord(void* spi_pointer, int32_t *status);
-  void setSPIClockRate(void* spi_pointer, double hz, int32_t *status);
-  void setSPIMSBFirst(void* spi_pointer, int32_t *status);
-  void setSPILSBFirst(void* spi_pointer, int32_t *status);
-  void setSPISampleDataOnFalling(void* spi_pointer, int32_t *status);
-  void setSPISampleDataOnRising(void* spi_pointer, int32_t *status);
-  void setSPISlaveSelect(void* spi_pointer, uint8_t ss_routing_module, uint32_t ss_routing_pin,
-						 int32_t *status);
-  void setSPILatchMode(void* spi_pointer, tFrameMode mode, int32_t *status);
-  tFrameMode getSPILatchMode(void* spi_pointer, int32_t *status);
-  void setSPIFramePolarity(void* spi_pointer, bool activeLow, int32_t *status);
-  bool getSPIFramePolarity(void* spi_pointer, int32_t *status);
-  void setSPIClockActiveLow(void* spi_pointer, int32_t *status);
-  void setSPIClockActiveHigh(void* spi_pointer, int32_t *status);
-  void applySPIConfig(void* spi_pointer, int32_t *status);
-  uint16_t getSPIOutputFIFOAvailable(void* spi_pointer, int32_t *status);
-  uint16_t getSPINumReceived(void* spi_pointer, int32_t *status);
-  bool isSPIDone(void* spi_pointer, int32_t *status);
-  bool hadSPIReceiveOverflow(void* spi_pointer, int32_t *status);
-  void writeSPI(void* spi_pointer, uint32_t data, int32_t *status);
-  uint32_t readSPI(void* spi_pointer, bool initiate, int32_t *status);
-  void resetSPI(void* spi_pointer, int32_t *status);
-  void clearSPIReceivedData(void* spi_pointer, int32_t *status);
-
-  bool doI2CTransaction(uint8_t address, bool compatibilityMode, uint8_t *dataToSend,
-						uint8_t sendSize, uint8_t *dataReceived, uint8_t receiveSize,
-						int32_t *status);
-  bool doI2CTransactionWithModule(uint8_t module, uint8_t address, bool compatibilityMode,
-								  uint8_t *dataToSend, uint8_t sendSize, uint8_t *dataReceived,
-								  uint8_t receiveSize, int32_t *status);
-
-  //// Float JNA Hack
-  // double
-  void setPWMRateIntHack(int rate, int32_t *status);
-  void setPWMRateWithModuleIntHack(uint8_t module, int32_t rate, int32_t *status);
-  void setPWMDutyCycleIntHack(void* pwmGenerator, int32_t dutyCycle, int32_t *status);
-  void setPWMDutyCycleWithModuleIntHack(uint8_t module, void* pwmGenerator, int32_t dutyCycle, int32_t *status);
-}
-#endif
diff --git a/hal/include/HAL/Digital.hpp b/hal/include/HAL/Digital.hpp
new file mode 100644
index 0000000000000000000000000000000000000000..774bee83132fe1a01d5a8ec3e88818b0262f27ed
--- /dev/null
+++ b/hal/include/HAL/Digital.hpp
@@ -0,0 +1,159 @@
+#pragma once
+#ifdef __vxworks
+#include <vxWorks.h>
+#else
+#include <stdint.h>
+#endif
+
+enum Mode
+{
+	kTwoPulse = 0,
+	kSemiperiod = 1,
+	kPulseLength = 2,
+	kExternalDirection = 3
+};
+enum tSPIConstants
+{
+	kReceiveFIFODepth = 512,
+	kTransmitFIFODepth = 512
+};
+enum tFrameMode
+{
+	kChipSelect,
+	kPreLatchPulse,
+	kPostLatchPulse,
+	kPreAndPostLatchPulse
+};
+extern "C"
+{
+	void* initializeDigitalPort(void* port_pointer, int32_t *status);
+	bool checkDigitalModule(uint8_t module);
+	bool checkPWMChannel(void* digital_port_pointer);
+	bool checkRelayChannel(void* digital_port_pointer);
+	uint8_t remapDigitalChannel(uint32_t pin, int32_t *status);
+	uint8_t unmapDigitalChannel(uint32_t pin, int32_t *status);
+
+	void setPWM(void* digital_port_pointer, unsigned short value, int32_t *status);
+	unsigned short getPWM(void* digital_port_pointer, int32_t *status);
+	void setPWMPeriodScale(void* digital_port_pointer, uint32_t squelchMask, int32_t *status);
+	void* allocatePWM(int32_t *status);
+	void* allocatePWMWithModule(uint8_t module, int32_t *status);
+	void freePWM(void* pwmGenerator, int32_t *status);
+	void freePWMWithModule(uint8_t module, void* pwmGenerator, int32_t *status);
+	void setPWMRate(double rate, int32_t *status);
+	void setPWMRateWithModule(uint8_t module, double rate, int32_t *status);
+	void setPWMDutyCycle(void* pwmGenerator, double dutyCycle, int32_t *status);
+	void setPWMDutyCycleWithModule(uint8_t module, void* pwmGenerator, double dutyCycle,
+			int32_t *status);
+	void setPWMOutputChannel(void* pwmGenerator, uint32_t pin, int32_t *status);
+	void setPWMOutputChannelWithModule(uint8_t module, void* pwmGenerator, uint32_t pin,
+			int32_t *status);
+
+	void setRelayForward(void* digital_port_pointer, bool on, int32_t *status);
+	void setRelayReverse(void* digital_port_pointer, bool on, int32_t *status);
+	bool getRelayForward(void* digital_port_pointer, int32_t *status);
+	bool getRelayReverse(void* digital_port_pointer, int32_t *status);
+
+	bool allocateDIO(void* digital_port_pointer, bool input, int32_t *status);
+	void freeDIO(void* digital_port_pointer, int32_t *status);
+	void setDIO(void* digital_port_pointer, short value, int32_t *status);
+	bool getDIO(void* digital_port_pointer, int32_t *status);
+	bool getDIODirection(void* digital_port_pointer, int32_t *status);
+	void pulse(void* digital_port_pointer, double pulseLength, int32_t *status);
+	bool isPulsing(void* digital_port_pointer, int32_t *status);
+	bool isAnyPulsing(int32_t *status);
+	bool isAnyPulsingWithModule(uint8_t module, int32_t *status);
+
+	void* initializeCounter(Mode mode, uint32_t *index, int32_t *status);
+	void freeCounter(void* counter_pointer, int32_t *status);
+	void setCounterAverageSize(void* counter_pointer, int32_t size, int32_t *status);
+	void setCounterUpSourceWithModule(void* counter_pointer, uint8_t module, uint32_t pin,
+			bool analogTrigger, int32_t *status); // TODO: Without Module
+	void setCounterUpSourceEdge(void* counter_pointer, bool risingEdge, bool fallingEdge,
+			int32_t *status);
+	void clearCounterUpSource(void* counter_pointer, int32_t *status);
+	void setCounterDownSourceWithModule(void* counter_pointer, uint8_t module, uint32_t pin,
+			bool analogTrigger, int32_t *status); // TODO: Without Module
+	void setCounterDownSourceEdge(void* counter_pointer, bool risingEdge, bool fallingEdge,
+			int32_t *status);
+	void clearCounterDownSource(void* counter_pointer, int32_t *status);
+	void setCounterUpDownMode(void* counter_pointer, int32_t *status);
+	void setCounterExternalDirectionMode(void* counter_pointer, int32_t *status);
+	void setCounterSemiPeriodMode(void* counter_pointer, bool highSemiPeriod, int32_t *status);
+	void setCounterPulseLengthMode(void* counter_pointer, double threshold, int32_t *status);
+	int32_t getCounterSamplesToAverage(void* counter_pointer, int32_t *status);
+	void setCounterSamplesToAverage(void* counter_pointer, int samplesToAverage, int32_t *status);
+	void startCounter(void* counter_pointer, int32_t *status);
+	void stopCounter(void* counter_pointer, int32_t *status);
+	void resetCounter(void* counter_pointer, int32_t *status);
+	int32_t getCounter(void* counter_pointer, int32_t *status);
+	double getCounterPeriod(void* counter_pointer, int32_t *status);
+	void setCounterMaxPeriod(void* counter_pointer, double maxPeriod, int32_t *status);
+	void setCounterUpdateWhenEmpty(void* counter_pointer, bool enabled, int32_t *status);
+	bool getCounterStopped(void* counter_pointer, int32_t *status);
+	bool getCounterDirection(void* counter_pointer, int32_t *status);
+	void setCounterReverseDirection(void* counter_pointer, bool reverseDirection, int32_t *status);
+
+	void* initializeEncoder(uint8_t port_a_module, uint32_t port_a_pin, bool port_a_analog_trigger,
+			uint8_t port_b_module, uint32_t port_b_pin, bool port_b_analog_trigger,
+			bool reverseDirection, int32_t *index, int32_t *status); // TODO: fix routing
+	void freeEncoder(void* encoder_pointer, int32_t *status);
+	void startEncoder(void* encoder_pointer, int32_t *status);
+	void stopEncoder(void* encoder_pointer, int32_t *status);
+	void resetEncoder(void* encoder_pointer, int32_t *status);
+	int32_t getEncoder(void* encoder_pointer, int32_t *status); // Raw value
+	double getEncoderPeriod(void* encoder_pointer, int32_t *status);
+	void setEncoderMaxPeriod(void* encoder_pointer, double maxPeriod, int32_t *status);
+	bool getEncoderStopped(void* encoder_pointer, int32_t *status);
+	bool getEncoderDirection(void* encoder_pointer, int32_t *status);
+	void setEncoderReverseDirection(void* encoder_pointer, bool reverseDirection, int32_t *status);
+	void setEncoderSamplesToAverage(void* encoder_pointer, uint32_t samplesToAverage,
+			int32_t *status);
+	uint32_t getEncoderSamplesToAverage(void* encoder_pointer, int32_t *status);
+
+	uint16_t getLoopTiming(int32_t *status);
+	uint16_t getLoopTimingWithModule(uint8_t module, int32_t *status);
+
+	void* initializeSPI(uint8_t sclk_routing_module, uint32_t sclk_routing_pin,
+			uint8_t mosi_routing_module, uint32_t mosi_routing_pin, uint8_t miso_routing_module,
+			uint32_t miso_routing_pin, int32_t *status);
+	void cleanSPI(void* spi_pointer, int32_t *status);
+	void setSPIBitsPerWord(void* spi_pointer, uint32_t bits, int32_t *status);
+	uint32_t getSPIBitsPerWord(void* spi_pointer, int32_t *status);
+	void setSPIClockRate(void* spi_pointer, double hz, int32_t *status);
+	void setSPIMSBFirst(void* spi_pointer, int32_t *status);
+	void setSPILSBFirst(void* spi_pointer, int32_t *status);
+	void setSPISampleDataOnFalling(void* spi_pointer, int32_t *status);
+	void setSPISampleDataOnRising(void* spi_pointer, int32_t *status);
+	void setSPISlaveSelect(void* spi_pointer, uint8_t ss_routing_module, uint32_t ss_routing_pin,
+			int32_t *status);
+	void setSPILatchMode(void* spi_pointer, tFrameMode mode, int32_t *status);
+	tFrameMode getSPILatchMode(void* spi_pointer, int32_t *status);
+	void setSPIFramePolarity(void* spi_pointer, bool activeLow, int32_t *status);
+	bool getSPIFramePolarity(void* spi_pointer, int32_t *status);
+	void setSPIClockActiveLow(void* spi_pointer, int32_t *status);
+	void setSPIClockActiveHigh(void* spi_pointer, int32_t *status);
+	void applySPIConfig(void* spi_pointer, int32_t *status);
+	uint16_t getSPIOutputFIFOAvailable(void* spi_pointer, int32_t *status);
+	uint16_t getSPINumReceived(void* spi_pointer, int32_t *status);
+	bool isSPIDone(void* spi_pointer, int32_t *status);
+	bool hadSPIReceiveOverflow(void* spi_pointer, int32_t *status);
+	void writeSPI(void* spi_pointer, uint32_t data, int32_t *status);
+	uint32_t readSPI(void* spi_pointer, bool initiate, int32_t *status);
+	void resetSPI(void* spi_pointer, int32_t *status);
+	void clearSPIReceivedData(void* spi_pointer, int32_t *status);
+
+	bool doI2CTransaction(uint8_t address, bool compatibilityMode, uint8_t *dataToSend,
+			uint8_t sendSize, uint8_t *dataReceived, uint8_t receiveSize, int32_t *status);
+	bool doI2CTransactionWithModule(uint8_t module, uint8_t address, bool compatibilityMode,
+			uint8_t *dataToSend, uint8_t sendSize, uint8_t *dataReceived, uint8_t receiveSize,
+			int32_t *status);
+
+	//// Float JNA Hack
+	// double
+	void setPWMRateIntHack(int rate, int32_t *status);
+	void setPWMRateWithModuleIntHack(uint8_t module, int32_t rate, int32_t *status);
+	void setPWMDutyCycleIntHack(void* pwmGenerator, int32_t dutyCycle, int32_t *status);
+	void setPWMDutyCycleWithModuleIntHack(uint8_t module, void* pwmGenerator, int32_t dutyCycle,
+			int32_t *status);
+}
diff --git a/hal/include/HAL/Errors.h b/hal/include/HAL/Errors.hpp
similarity index 96%
rename from hal/include/HAL/Errors.h
rename to hal/include/HAL/Errors.hpp
index 6d516e5e35baaf7461c577b6d663351af0bded4f..46b5ee3044df8ff415957deaad1d90afb05d1c8c 100644
--- a/hal/include/HAL/Errors.h
+++ b/hal/include/HAL/Errors.hpp
@@ -1,6 +1,4 @@
-
-#ifndef HAL_ERRORS_H
-#define HAL_ERRORS_H
+#pragma once
 
 #define SAMPLE_RATE_TOO_HIGH 1
 #define SAMPLE_RATE_TOO_HIGH_MESSAGE "Analog module sample rate is too high"
@@ -26,5 +24,3 @@
 #define ANALOG_TRIGGER_PULSE_OUTPUT_ERROR_MESSAGE "Attempted to read AnalogTrigger pulse output."
 #define PARAMETER_OUT_OF_RANGE -28
 #define PARAMETER_OUT_OF_RANGE_MESSAGE "A parameter is out of range."
-
-#endif
diff --git a/hal/include/HAL/HAL.h b/hal/include/HAL/HAL.h
deleted file mode 100644
index 31a323fbd5b6c6298aa7f229bc5b1e345b27a7cd..0000000000000000000000000000000000000000
--- a/hal/include/HAL/HAL.h
+++ /dev/null
@@ -1,300 +0,0 @@
-/*----------------------------------------------------------------------------*/
-/* Copyright (c) FIRST 2013. All Rights Reserved.  			      */
-/* Open Source Software - may be modified and shared by FRC teams. The code   */
-/* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
-/*----------------------------------------------------------------------------*/
-
-#ifdef __vxworks
-#include <vxWorks.h>
-#else
-#include <stdint.h>
-#endif
-#include <cmath>
-
-#include "Analog.h"
-#include "Digital.h"
-#include "Solenoid.h"
-#include "Notifier.h"
-#include "Interrupts.h"
-#include "Errors.h"
-
-#include "Utilities.h"
-#include "Semaphore.h"
-#include "Task.h"
-
-#ifndef HAL_H
-#define HAL_H
-
-#define HAL_IO_CONFIG_DATA_SIZE 32
-#define HAL_SYS_STATUS_DATA_SIZE 44
-#define HAL_USER_STATUS_DATA_SIZE (984 - HAL_IO_CONFIG_DATA_SIZE - HAL_SYS_STATUS_DATA_SIZE)
-#define HAL_USER_DS_LCD_DATA_SIZE 128
-
-
-#define HALFRC_NetworkCommunication_DynamicType_DSEnhancedIO_Input 17
-#define HALFRC_NetworkCommunication_DynamicType_DSEnhancedIO_Output 18
-#define HALFRC_NetworkCommunication_DynamicType_Kinect_Header 19
-#define HALFRC_NetworkCommunication_DynamicType_Kinect_Extra1 20
-#define HALFRC_NetworkCommunication_DynamicType_Kinect_Vertices1 21
-#define HALFRC_NetworkCommunication_DynamicType_Kinect_Extra2 22
-#define HALFRC_NetworkCommunication_DynamicType_Kinect_Vertices2 23
-#define HALFRC_NetworkCommunication_DynamicType_Kinect_Joystick 24
-#define HALFRC_NetworkCommunication_DynamicType_Kinect_Custom 25
-
-namespace HALUsageReporting
-{
-    typedef enum
-    {
-        kResourceType_Controller,
-        kResourceType_Module,
-        kResourceType_Language,
-        kResourceType_CANPlugin,
-        kResourceType_Accelerometer,
-        kResourceType_ADXL345,
-        kResourceType_AnalogChannel,
-        kResourceType_AnalogTrigger,
-        kResourceType_AnalogTriggerOutput,
-        kResourceType_CANJaguar,
-        kResourceType_Compressor,
-        kResourceType_Counter,
-        kResourceType_Dashboard,
-        kResourceType_DigitalInput,
-        kResourceType_DigitalOutput,
-        kResourceType_DriverStationCIO,
-        kResourceType_DriverStationEIO,
-        kResourceType_DriverStationLCD,
-        kResourceType_Encoder,
-        kResourceType_GearTooth,
-        kResourceType_Gyro,
-        kResourceType_I2C,
-        kResourceType_Framework,
-        kResourceType_Jaguar,
-        kResourceType_Joystick,
-        kResourceType_Kinect,
-        kResourceType_KinectStick,
-        kResourceType_PIDController,
-        kResourceType_Preferences,
-        kResourceType_PWM,
-        kResourceType_Relay,
-        kResourceType_RobotDrive,
-        kResourceType_SerialPort,
-        kResourceType_Servo,
-        kResourceType_Solenoid,
-        kResourceType_SPI,
-        kResourceType_Task,
-        kResourceType_Ultrasonic,
-        kResourceType_Victor,
-        kResourceType_Button,
-        kResourceType_Command,
-        kResourceType_AxisCamera,
-        kResourceType_PCVideoServer,
-        kResourceType_SmartDashboard,
-        kResourceType_Talon,
-        kResourceType_HiTechnicColorSensor,
-        kResourceType_HiTechnicAccel,
-        kResourceType_HiTechnicCompass,
-		kResourceType_SRF08,
-    } tResourceType;
-
-    typedef enum
-    {
-        kLanguage_LabVIEW = 1,
-        kLanguage_CPlusPlus = 2,
-        kLanguage_Java = 3,
-        kLanguage_Python = 4,
-
-        kCANPlugin_BlackJagBridge = 1,
-        kCANPlugin_2CAN = 2,
-
-        kFramework_Iterative = 1,
-        kFramework_Simple = 2,
-
-        kRobotDrive_ArcadeStandard = 1,
-        kRobotDrive_ArcadeButtonSpin = 2,
-        kRobotDrive_ArcadeRatioCurve = 3,
-        kRobotDrive_Tank = 4,
-        kRobotDrive_MecanumPolar = 5,
-        kRobotDrive_MecanumCartesian = 6,
-
-        kDriverStationCIO_Analog = 1,
-        kDriverStationCIO_DigitalIn = 2,
-        kDriverStationCIO_DigitalOut = 3,
-
-        kDriverStationEIO_Acceleration = 1,
-        kDriverStationEIO_AnalogIn = 2,
-        kDriverStationEIO_AnalogOut = 3,
-        kDriverStationEIO_Button = 4,
-        kDriverStationEIO_LED = 5,
-        kDriverStationEIO_DigitalIn = 6,
-        kDriverStationEIO_DigitalOut = 7,
-        kDriverStationEIO_FixedDigitalOut = 8,
-        kDriverStationEIO_PWM = 9,
-        kDriverStationEIO_Encoder = 10,
-        kDriverStationEIO_TouchSlider = 11,
-
-        kADXL345_SPI = 1,
-        kADXL345_I2C = 2,
-
-        kCommand_Scheduler = 1,
-
-        kSmartDashboard_Instance = 1,
-    } tInstances;
-}
-
-struct HALCommonControlData{
-	uint16_t packetIndex;
-	union {
-		uint8_t control;
-#ifndef __vxworks
-		struct {
-			uint8_t checkVersions :1;
-			uint8_t test :1;
-			uint8_t resync : 1;
-			uint8_t fmsAttached:1;
-			uint8_t autonomous : 1;
-			uint8_t enabled : 1;
-			uint8_t notEStop : 1;
-			uint8_t reset : 1;
-		};
-#else
-		struct {
-			uint8_t reset : 1;
-			uint8_t notEStop : 1;
-			uint8_t enabled : 1;
-			uint8_t autonomous : 1;
-			uint8_t fmsAttached:1;
-			uint8_t resync : 1;
-			uint8_t test :1;
-			uint8_t checkVersions :1;
-		};
-#endif
-	};
-	uint8_t dsDigitalIn;
-	uint16_t teamID;
-
-	char dsID_Alliance;
-	char dsID_Position;
-
-	union {
-		int8_t stick0Axes[6];
-		struct {
-			int8_t stick0Axis1;
-			int8_t stick0Axis2;
-			int8_t stick0Axis3;
-			int8_t stick0Axis4;
-			int8_t stick0Axis5;
-			int8_t stick0Axis6;
-		};
-	};
-	uint16_t stick0Buttons;		// Left-most 4 bits are unused
-
-	union {
-		int8_t stick1Axes[6];
-		struct {
-			int8_t stick1Axis1;
-			int8_t stick1Axis2;
-			int8_t stick1Axis3;
-			int8_t stick1Axis4;
-			int8_t stick1Axis5;
-			int8_t stick1Axis6;
-		};
-	};
-	uint16_t stick1Buttons;		// Left-most 4 bits are unused
-
-	union {
-		int8_t stick2Axes[6];
-		struct {
-			int8_t stick2Axis1;
-			int8_t stick2Axis2;
-			int8_t stick2Axis3;
-			int8_t stick2Axis4;
-			int8_t stick2Axis5;
-			int8_t stick2Axis6;
-		};
-	};
-	uint16_t stick2Buttons;		// Left-most 4 bits are unused
-
-	union {
-		int8_t stick3Axes[6];
-		struct {
-			int8_t stick3Axis1;
-			int8_t stick3Axis2;
-			int8_t stick3Axis3;
-			int8_t stick3Axis4;
-			int8_t stick3Axis5;
-			int8_t stick3Axis6;
-		};
-	};
-	uint16_t stick3Buttons;		// Left-most 4 bits are unused
-
-	//Analog inputs are 10 bit right-justified
-	uint16_t analog1;
-	uint16_t analog2;
-	uint16_t analog3;
-	uint16_t analog4;
-
-	uint64_t cRIOChecksum;
-	uint32_t FPGAChecksum0;
-	uint32_t FPGAChecksum1;
-	uint32_t FPGAChecksum2;
-	uint32_t FPGAChecksum3;
-
-	char versionData[8];
-};
-
-
-inline float intToFloat(int value) {
-  return (float)value;
-}
-
-inline int floatToInt(float value) {
-  return round(value);
-}
-
-extern "C" {
-  extern const uint32_t dio_kNumSystems;
-  extern const uint32_t solenoid_kNumDO7_0Elements;
-  extern const uint32_t interrupt_kNumSystems;
-  extern const uint32_t kSystemClockTicksPerMicrosecond;
-  
-  void* getPort(uint8_t pin);
-  void* getPortWithModule(uint8_t module, uint8_t pin);
-  const char* getHALErrorMessage(int32_t code);
-
-  uint16_t getFPGAVersion(int32_t *status);
-  uint32_t getFPGARevision(int32_t *status);
-  uint32_t getFPGATime(int32_t *status);
-
-  void setFPGALED(uint32_t state, int32_t *status);
-  int32_t getFPGALED(int32_t *status);
-
-  int HALSetErrorData(const char *errors, int errorsLength, int wait_ms);
-  int HALSetUserDsLcdData(const char *userDsLcdData, int userDsLcdDataLength, int wait_ms);
-  int HALOverrideIOConfig(const char *ioConfig, int wait_ms);
-  int HALGetDynamicControlData(uint8_t type, char *dynamicData, int32_t maxLength, int wait_ms);
-  int HALGetCommonControlData(HALCommonControlData *data, int wait_ms);
-  void HALSetNewDataSem(pthread_mutex_t *);
-  int HALSetStatusData(float battery, uint8_t dsDigitalOut, uint8_t updateNumber,
-			const char *userDataHigh, int userDataHighLength,
-			const char *userDataLow, int userDataLowLength, int wait_ms);
-
-  void HALNetworkCommunicationReserve();
-  void HALNetworkCommunicationObserveUserProgramStarting(void);
-  void HALNetworkCommunicationObserveUserProgramDisabled(void);
-  void HALNetworkCommunicationObserveUserProgramAutonomous(void);
-  void HALNetworkCommunicationObserveUserProgramTeleop(void);
-  void HALNetworkCommunicationObserveUserProgramTest(void);
-
-  uint32_t HALReport(uint8_t resource, uint8_t instanceNumber, uint8_t context = 0, const char *feature = NULL);
-}
-
-// TODO: HACKS for now...
-extern "C" {
-  //void FRC_NetworkCommunication_Reserve();
-
-  void NumericArrayResize();
-  void RTSetCleanupProc();
-  void EDVR_CreateReference();
-  void Occur();
-}
-#endif
diff --git a/hal/include/HAL/HAL.hpp b/hal/include/HAL/HAL.hpp
new file mode 100644
index 0000000000000000000000000000000000000000..88741b78430b5bfcb1ca201e352016674a14e742
--- /dev/null
+++ b/hal/include/HAL/HAL.hpp
@@ -0,0 +1,312 @@
+/*----------------------------------------------------------------------------*/
+/* Copyright (c) FIRST 2013. All Rights Reserved.  			      */
+/* Open Source Software - may be modified and shared by FRC teams. The code   */
+/* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
+/*----------------------------------------------------------------------------*/
+#pragma once
+
+#ifdef __vxworks
+#include <vxWorks.h>
+#else
+#include <stdint.h>
+#endif
+#include <cmath>
+
+#include "Analog.hpp"
+#include "Digital.hpp"
+#include "Solenoid.hpp"
+#include "Notifier.hpp"
+#include "Interrupts.hpp"
+#include "Errors.hpp"
+
+#include "Utilities.hpp"
+#include "Semaphore.hpp"
+#include "Task.hpp"
+
+#define HAL_IO_CONFIG_DATA_SIZE 32
+#define HAL_SYS_STATUS_DATA_SIZE 44
+#define HAL_USER_STATUS_DATA_SIZE (984 - HAL_IO_CONFIG_DATA_SIZE - HAL_SYS_STATUS_DATA_SIZE)
+#define HAL_USER_DS_LCD_DATA_SIZE 128
+
+#define HALFRC_NetworkCommunication_DynamicType_DSEnhancedIO_Input 17
+#define HALFRC_NetworkCommunication_DynamicType_DSEnhancedIO_Output 18
+#define HALFRC_NetworkCommunication_DynamicType_Kinect_Header 19
+#define HALFRC_NetworkCommunication_DynamicType_Kinect_Extra1 20
+#define HALFRC_NetworkCommunication_DynamicType_Kinect_Vertices1 21
+#define HALFRC_NetworkCommunication_DynamicType_Kinect_Extra2 22
+#define HALFRC_NetworkCommunication_DynamicType_Kinect_Vertices2 23
+#define HALFRC_NetworkCommunication_DynamicType_Kinect_Joystick 24
+#define HALFRC_NetworkCommunication_DynamicType_Kinect_Custom 25
+
+namespace HALUsageReporting
+{
+	enum tResourceType
+	{
+		kResourceType_Controller,
+		kResourceType_Module,
+		kResourceType_Language,
+		kResourceType_CANPlugin,
+		kResourceType_Accelerometer,
+		kResourceType_ADXL345,
+		kResourceType_AnalogChannel,
+		kResourceType_AnalogTrigger,
+		kResourceType_AnalogTriggerOutput,
+		kResourceType_CANJaguar,
+		kResourceType_Compressor,
+		kResourceType_Counter,
+		kResourceType_Dashboard,
+		kResourceType_DigitalInput,
+		kResourceType_DigitalOutput,
+		kResourceType_DriverStationCIO,
+		kResourceType_DriverStationEIO,
+		kResourceType_DriverStationLCD,
+		kResourceType_Encoder,
+		kResourceType_GearTooth,
+		kResourceType_Gyro,
+		kResourceType_I2C,
+		kResourceType_Framework,
+		kResourceType_Jaguar,
+		kResourceType_Joystick,
+		kResourceType_Kinect,
+		kResourceType_KinectStick,
+		kResourceType_PIDController,
+		kResourceType_Preferences,
+		kResourceType_PWM,
+		kResourceType_Relay,
+		kResourceType_RobotDrive,
+		kResourceType_SerialPort,
+		kResourceType_Servo,
+		kResourceType_Solenoid,
+		kResourceType_SPI,
+		kResourceType_Task,
+		kResourceType_Ultrasonic,
+		kResourceType_Victor,
+		kResourceType_Button,
+		kResourceType_Command,
+		kResourceType_AxisCamera,
+		kResourceType_PCVideoServer,
+		kResourceType_SmartDashboard,
+		kResourceType_Talon,
+		kResourceType_HiTechnicColorSensor,
+		kResourceType_HiTechnicAccel,
+		kResourceType_HiTechnicCompass,
+		kResourceType_SRF08,
+	};
+
+	enum tInstances
+	{
+		kLanguage_LabVIEW = 1,
+		kLanguage_CPlusPlus = 2,
+		kLanguage_Java = 3,
+		kLanguage_Python = 4,
+
+		kCANPlugin_BlackJagBridge = 1,
+		kCANPlugin_2CAN = 2,
+
+		kFramework_Iterative = 1,
+		kFramework_Simple = 2,
+
+		kRobotDrive_ArcadeStandard = 1,
+		kRobotDrive_ArcadeButtonSpin = 2,
+		kRobotDrive_ArcadeRatioCurve = 3,
+		kRobotDrive_Tank = 4,
+		kRobotDrive_MecanumPolar = 5,
+		kRobotDrive_MecanumCartesian = 6,
+
+		kDriverStationCIO_Analog = 1,
+		kDriverStationCIO_DigitalIn = 2,
+		kDriverStationCIO_DigitalOut = 3,
+
+		kDriverStationEIO_Acceleration = 1,
+		kDriverStationEIO_AnalogIn = 2,
+		kDriverStationEIO_AnalogOut = 3,
+		kDriverStationEIO_Button = 4,
+		kDriverStationEIO_LED = 5,
+		kDriverStationEIO_DigitalIn = 6,
+		kDriverStationEIO_DigitalOut = 7,
+		kDriverStationEIO_FixedDigitalOut = 8,
+		kDriverStationEIO_PWM = 9,
+		kDriverStationEIO_Encoder = 10,
+		kDriverStationEIO_TouchSlider = 11,
+
+		kADXL345_SPI = 1,
+		kADXL345_I2C = 2,
+
+		kCommand_Scheduler = 1,
+
+		kSmartDashboard_Instance = 1,
+	};
+}
+
+struct HALCommonControlData
+{
+	uint16_t packetIndex;
+	union
+	{
+		uint8_t control;
+#ifndef __vxworks
+		struct
+		{
+			uint8_t checkVersions :1;
+			uint8_t test :1;
+			uint8_t resync :1;
+			uint8_t fmsAttached :1;
+			uint8_t autonomous :1;
+			uint8_t enabled :1;
+			uint8_t notEStop :1;
+			uint8_t reset :1;
+		};
+#else
+		struct
+		{
+			uint8_t reset : 1;
+			uint8_t notEStop : 1;
+			uint8_t enabled : 1;
+			uint8_t autonomous : 1;
+			uint8_t fmsAttached:1;
+			uint8_t resync : 1;
+			uint8_t test :1;
+			uint8_t checkVersions :1;
+		};
+#endif
+	};
+	uint8_t dsDigitalIn;
+	uint16_t teamID;
+
+	char dsID_Alliance;
+	char dsID_Position;
+
+	union
+	{
+		int8_t stick0Axes[6];
+		struct
+		{ // TODO: ???
+			int8_t stick0Axis1;
+			int8_t stick0Axis2;
+			int8_t stick0Axis3;
+			int8_t stick0Axis4;
+			int8_t stick0Axis5;
+			int8_t stick0Axis6;
+		};
+	};
+	uint16_t stick0Buttons;		// Left-most 4 bits are unused
+
+	union
+	{
+		int8_t stick1Axes[6];
+		struct
+		{ // TODO: ???
+			int8_t stick1Axis1;
+			int8_t stick1Axis2;
+			int8_t stick1Axis3;
+			int8_t stick1Axis4;
+			int8_t stick1Axis5;
+			int8_t stick1Axis6;
+		};
+	};
+	uint16_t stick1Buttons;		// Left-most 4 bits are unused
+
+	union
+	{
+		int8_t stick2Axes[6];
+		struct
+		{ // TODO: ???
+			int8_t stick2Axis1;
+			int8_t stick2Axis2;
+			int8_t stick2Axis3;
+			int8_t stick2Axis4;
+			int8_t stick2Axis5;
+			int8_t stick2Axis6;
+		};
+	};
+	uint16_t stick2Buttons;		// Left-most 4 bits are unused
+
+	union
+	{
+		int8_t stick3Axes[6];
+		struct
+		{ // TODO: ???
+			int8_t stick3Axis1;
+			int8_t stick3Axis2;
+			int8_t stick3Axis3;
+			int8_t stick3Axis4;
+			int8_t stick3Axis5;
+			int8_t stick3Axis6;
+		};
+	};
+	uint16_t stick3Buttons;		// Left-most 4 bits are unused
+
+	//Analog inputs are 10 bit right-justified
+	uint16_t analog1;
+	uint16_t analog2;
+	uint16_t analog3;
+	uint16_t analog4;
+
+	uint64_t cRIOChecksum;
+	uint32_t FPGAChecksum0;
+	uint32_t FPGAChecksum1;
+	uint32_t FPGAChecksum2;
+	uint32_t FPGAChecksum3;
+
+	char versionData[8];
+};
+
+inline float intToFloat(int value)
+{
+	return (float)value;
+}
+
+inline int floatToInt(float value)
+{
+	return round(value);
+}
+
+extern "C"
+{
+	extern const uint32_t dio_kNumSystems;
+	extern const uint32_t solenoid_kNumDO7_0Elements;
+	extern const uint32_t interrupt_kNumSystems;
+	extern const uint32_t kSystemClockTicksPerMicrosecond;
+
+	void* getPort(uint8_t pin);
+	void* getPortWithModule(uint8_t module, uint8_t pin);
+	const char* getHALErrorMessage(int32_t code);
+
+	uint16_t getFPGAVersion(int32_t *status);
+	uint32_t getFPGARevision(int32_t *status);
+	uint32_t getFPGATime(int32_t *status);
+
+	void setFPGALED(uint32_t state, int32_t *status);
+	int32_t getFPGALED(int32_t *status);
+
+	int HALSetErrorData(const char *errors, int errorsLength, int wait_ms);
+	int HALSetUserDsLcdData(const char *userDsLcdData, int userDsLcdDataLength, int wait_ms);
+	int HALOverrideIOConfig(const char *ioConfig, int wait_ms);
+	int HALGetDynamicControlData(uint8_t type, char *dynamicData, int32_t maxLength, int wait_ms);
+	int HALGetCommonControlData(HALCommonControlData *data, int wait_ms);
+	void HALSetNewDataSem(pthread_mutex_t *);
+	int HALSetStatusData(float battery, uint8_t dsDigitalOut, uint8_t updateNumber,
+			const char *userDataHigh, int userDataHighLength, const char *userDataLow,
+			int userDataLowLength, int wait_ms);
+
+	int HALInitialize(int mode = 0);
+	void HALNetworkCommunicationObserveUserProgramStarting();
+	void HALNetworkCommunicationObserveUserProgramDisabled();
+	void HALNetworkCommunicationObserveUserProgramAutonomous();
+	void HALNetworkCommunicationObserveUserProgramTeleop();
+	void HALNetworkCommunicationObserveUserProgramTest();
+
+	uint32_t HALReport(uint8_t resource, uint8_t instanceNumber, uint8_t context = 0,
+			const char *feature = NULL);
+}
+
+// TODO: HACKS for now...
+extern "C"
+{
+
+	void NumericArrayResize();
+	void RTSetCleanupProc();
+	void EDVR_CreateReference();
+	void Occur();
+}
+
diff --git a/hal/include/HAL/Interrupts.h b/hal/include/HAL/Interrupts.h
deleted file mode 100644
index ad85afed4f663862f3163851b2e618bc08ad6646..0000000000000000000000000000000000000000
--- a/hal/include/HAL/Interrupts.h
+++ /dev/null
@@ -1,27 +0,0 @@
-
-#ifdef __vxworks
-#include <vxWorks.h>
-#else
-#include <stdint.h>
-#endif
-
-#ifndef HAL_INTERRUPTS_H
-#define HAL_INTERRUPTS_H
-
-extern "C" {
-  typedef void (*InterruptHandlerFunction)(uint32_t interruptAssertedMask, void *param);
-  
-  void* initializeInterrupts(uint32_t interruptIndex, bool watcher, int32_t *status);
-  void cleanInterrupts(void* interrupt_pointer, int32_t *status);
-  
-  void waitForInterrupt(void* interrupt_pointer, double timeout, int32_t *status);
-  void enableInterrupts(void* interrupt_pointer, int32_t *status);
-  void disableInterrupts(void* interrupt_pointer, int32_t *status);
-  double readInterruptTimestamp(void* interrupt_pointer, int32_t *status);
-  void requestInterrupts(void* interrupt_pointer, uint8_t routing_module, uint32_t routing_pin,
-						 bool routing_analog_trigger, int32_t *status);
-  void attachInterruptHandler(void* interrupt_pointer, InterruptHandlerFunction handler,
-							  void* param, int32_t *status);
-  void setInterruptUpSourceEdge(void* interrupt_pointer, bool risingEdge, bool fallingEdge, int32_t *status);
-}
-#endif
diff --git a/hal/include/HAL/Interrupts.hpp b/hal/include/HAL/Interrupts.hpp
new file mode 100644
index 0000000000000000000000000000000000000000..4406cc1565ef123e59bf0e5a90d1a6516777303f
--- /dev/null
+++ b/hal/include/HAL/Interrupts.hpp
@@ -0,0 +1,26 @@
+#pragma once
+
+#ifdef __vxworks
+#include <vxWorks.h>
+#else
+#include <stdint.h>
+#endif
+
+extern "C"
+{
+	typedef void (*InterruptHandlerFunction)(uint32_t interruptAssertedMask, void *param);
+
+	void* initializeInterrupts(uint32_t interruptIndex, bool watcher, int32_t *status);
+	void cleanInterrupts(void* interrupt_pointer, int32_t *status);
+
+	void waitForInterrupt(void* interrupt_pointer, double timeout, int32_t *status);
+	void enableInterrupts(void* interrupt_pointer, int32_t *status);
+	void disableInterrupts(void* interrupt_pointer, int32_t *status);
+	double readInterruptTimestamp(void* interrupt_pointer, int32_t *status);
+	void requestInterrupts(void* interrupt_pointer, uint8_t routing_module, uint32_t routing_pin,
+			bool routing_analog_trigger, int32_t *status);
+	void attachInterruptHandler(void* interrupt_pointer, InterruptHandlerFunction handler,
+			void* param, int32_t *status);
+	void setInterruptUpSourceEdge(void* interrupt_pointer, bool risingEdge, bool fallingEdge,
+			int32_t *status);
+}
diff --git a/hal/include/HAL/Notifier.h b/hal/include/HAL/Notifier.h
deleted file mode 100644
index 6bb732194425679e2833a8471e568f72fc2c3ca0..0000000000000000000000000000000000000000
--- a/hal/include/HAL/Notifier.h
+++ /dev/null
@@ -1,17 +0,0 @@
-
-#ifdef __vxworks
-#include <vxWorks.h>
-#else
-#include <stdint.h>
-#endif
-
-#ifndef HAL_NOTIFIER_H
-#define HAL_NOTIFIER_H
-
-extern "C" {
-  void* initializeNotifier(void (*ProcessQueue)(uint32_t, void*), int32_t *status);
-  void cleanNotifier(void* notifier_pointer, int32_t *status);
-
-  void updateNotifierAlarm(void* notifier_pointer, uint32_t triggerTime, int32_t *status);
-}
-#endif
diff --git a/hal/include/HAL/Notifier.hpp b/hal/include/HAL/Notifier.hpp
new file mode 100644
index 0000000000000000000000000000000000000000..987686caca8d536f6e2422d3269790ab01b6c027
--- /dev/null
+++ b/hal/include/HAL/Notifier.hpp
@@ -0,0 +1,15 @@
+#pragma once
+
+#ifdef __vxworks
+#include <vxWorks.h>
+#else
+#include <stdint.h>
+#endif
+
+extern "C"
+{
+	void* initializeNotifier(void (*ProcessQueue)(uint32_t, void*), int32_t *status);
+	void cleanNotifier(void* notifier_pointer, int32_t *status);
+
+	void updateNotifierAlarm(void* notifier_pointer, uint32_t triggerTime, int32_t *status);
+}
diff --git a/hal/include/HAL/Semaphore.h b/hal/include/HAL/Semaphore.hpp
similarity index 81%
rename from hal/include/HAL/Semaphore.h
rename to hal/include/HAL/Semaphore.hpp
index 61494e8e796b37d219199a6cac5e2d06acfeb541..bc3e268354602a49055b6f30b6f7f668159cbff0 100644
--- a/hal/include/HAL/Semaphore.h
+++ b/hal/include/HAL/Semaphore.hpp
@@ -1,3 +1,4 @@
+#pragma once
 
 #ifdef __vxworks
 #include <vxWorks.h>
@@ -7,20 +8,18 @@
 #include <semaphore.h>
 #endif
 
-#ifndef HAL_SEMAPHORE_H
-#define HAL_SEMAPHORE_H
-
-extern "C" {
 #ifdef __vxworks
-	typedef SEM_ID MUTEX_ID;
-	typedef SEM_ID SEMAPHORE_ID;
-	typedef SEM_ID MULTIWAIT_ID;
+typedef SEM_ID MUTEX_ID;
+typedef SEM_ID SEMAPHORE_ID;
+typedef SEM_ID MULTIWAIT_ID;
 #else
-	typedef pthread_mutex_t* MUTEX_ID;
-	typedef sem_t* SEMAPHORE_ID;
-	typedef pthread_cond_t* MULTIWAIT_ID;
+typedef pthread_mutex_t* MUTEX_ID;
+typedef sem_t* SEMAPHORE_ID;
+typedef pthread_cond_t* MULTIWAIT_ID;
 #endif
 
+extern "C"
+{
 	extern const uint32_t SEMAPHORE_Q_FIFO;
 	extern const uint32_t SEMAPHORE_Q_PRIORITY;
 	extern const uint32_t SEMAPHORE_DELETE_SAFE;
@@ -51,4 +50,3 @@ extern "C" {
 	int8_t giveMultiWait(MULTIWAIT_ID sem);
 }
 
-#endif
diff --git a/hal/include/HAL/Solenoid.h b/hal/include/HAL/Solenoid.h
deleted file mode 100644
index fb555d025260731ebcb2303cefe70cee01776cbf..0000000000000000000000000000000000000000
--- a/hal/include/HAL/Solenoid.h
+++ /dev/null
@@ -1,17 +0,0 @@
-
-#ifdef __vxworks
-#include <vxWorks.h>
-#else
-#include <stdint.h>
-#endif
-
-#ifndef HAL_SOLENOID_H
-#define HAL_SOLENOID_H
-extern "C" {
-  void* initializeSolenoidPort(void* port_pointer, int32_t *status);
-  bool checkSolenoidModule(uint8_t module);
-  
-  bool getSolenoid(void* solenoid_port_pointer, int32_t *status);
-  void setSolenoid(void* solenoid_port_pointer, bool value, int32_t *status);
-}
-#endif
diff --git a/hal/include/HAL/Solenoid.hpp b/hal/include/HAL/Solenoid.hpp
new file mode 100644
index 0000000000000000000000000000000000000000..90cde27aad4e3149f25623db1aead59857594215
--- /dev/null
+++ b/hal/include/HAL/Solenoid.hpp
@@ -0,0 +1,16 @@
+#pragma once
+
+#ifdef __vxworks
+#include <vxWorks.h>
+#else
+#include <stdint.h>
+#endif
+
+extern "C"
+{
+	void* initializeSolenoidPort(void* port_pointer, int32_t *status);
+	bool checkSolenoidModule(uint8_t module);
+
+	bool getSolenoid(void* solenoid_port_pointer, int32_t *status);
+	void setSolenoid(void* solenoid_port_pointer, bool value, int32_t *status);
+}
diff --git a/hal/include/HAL/Task.h b/hal/include/HAL/Task.h
deleted file mode 100644
index 4456531d9917bcc68f31359a5986e17fd32bcd3d..0000000000000000000000000000000000000000
--- a/hal/include/HAL/Task.h
+++ /dev/null
@@ -1,68 +0,0 @@
-
-#ifdef __vxworks
-#include <vxWorks.h>
-#else
-#include <stdint.h>
-#include <pthread.h>
-#endif
-
-#ifndef _FUNCPTR_DEFINED
-#define _FUNCPTR_DEFINED
-#ifdef __cplusplus
-typedef int 		(*FUNCPTR) (...);     /* ptr to function returning int */
-#else
-typedef int 		(*FUNCPTR) ();	   /* ptr to function returning int */
-#endif /* __cplusplus */
-#endif /* _FUNCPTR_DEFINED */
-
-#ifndef _STATUS_DEFINED
-#define _STATUS_DEFINED
-typedef	int		STATUS;
-#endif /* _STATUS_DEFINED */
-
-#ifndef OK
-#define OK		0
-#endif /* OK */
-#ifndef ERROR
-#define ERROR		(-1)
-#endif /* ERROR */
-
-#ifndef HAL_TASK_H
-#define HAL_TASK_H
-
-#ifdef __vxworks
-#define NULL_TASK -1
-#else
-#define NULL_TASK NULL
-#endif
-
-extern "C" {
-  extern const uint32_t VXWORKS_FP_TASK;
-  extern const int32_t HAL_objLib_OBJ_ID_ERROR;
-  extern const int32_t HAL_objLib_OBJ_DELETED;
-  extern const int32_t HAL_taskLib_ILLEGAL_OPTIONS;
-  extern const int32_t HAL_memLib_NOT_ENOUGH_MEMORY;
-  extern const int32_t HAL_taskLib_ILLEGAL_PRIORITY;
-
-#ifdef __vxworks
-  typedef int32_t TASK;
-#else
-  typedef pthread_t* TASK;
-#endif
-
-  TASK spawnTask(char * name, int priority, int options, int stackSize, 
-		         FUNCPTR entryPt, uint32_t arg0, uint32_t arg1, uint32_t arg2,
-		         uint32_t arg3, uint32_t arg4, uint32_t arg5, uint32_t arg6,
-		         uint32_t arg7, uint32_t arg8, uint32_t arg9);
-  STATUS restartTask(TASK task);
-  STATUS deleteTask(TASK task);
-  STATUS isTaskReady(TASK task);
-  STATUS isTaskSuspended(TASK task);
-  STATUS suspendTask(TASK task);
-  STATUS resumeTask(TASK task);
-  STATUS verifyTaskID(TASK task);
-  STATUS setTaskPriority(TASK task, int priority);
-  STATUS getTaskPriority(TASK task, int* priority);
-}
-  
-#endif
diff --git a/hal/include/HAL/Task.hpp b/hal/include/HAL/Task.hpp
new file mode 100644
index 0000000000000000000000000000000000000000..87d51d89ac17c1be7db561232a114097b193b397
--- /dev/null
+++ b/hal/include/HAL/Task.hpp
@@ -0,0 +1,62 @@
+#pragma once
+
+#ifdef __vxworks
+#include <vxWorks.h>
+#else
+#include <stdint.h>
+#include <pthread.h>
+#endif
+
+#ifndef _FUNCPTR_DEFINED
+#define _FUNCPTR_DEFINED
+#ifdef __cplusplus
+typedef int (*FUNCPTR)(...);
+/* ptr to function returning int */
+#else
+typedef int (*FUNCPTR) (); /* ptr to function returning int */
+#endif /* __cplusplus */
+#endif /* _FUNCPTR_DEFINED */
+
+#ifndef _STATUS_DEFINED
+#define _STATUS_DEFINED
+typedef int STATUS;
+#endif /* _STATUS_DEFINED */
+
+#ifndef OK
+#define OK		0
+#endif /* OK */
+#ifndef ERROR
+#define ERROR		(-1)
+#endif /* ERROR */
+
+#ifdef __vxworks
+#define NULL_TASK -1
+typedef int32_t TASK;
+#else
+#define NULL_TASK NULL
+typedef pthread_t* TASK;
+#endif
+
+extern "C"
+{
+	extern const uint32_t VXWORKS_FP_TASK;
+	extern const int32_t HAL_objLib_OBJ_ID_ERROR;
+	extern const int32_t HAL_objLib_OBJ_DELETED;
+	extern const int32_t HAL_taskLib_ILLEGAL_OPTIONS;
+	extern const int32_t HAL_memLib_NOT_ENOUGH_MEMORY;
+	extern const int32_t HAL_taskLib_ILLEGAL_PRIORITY;
+
+	TASK spawnTask(char * name, int priority, int options, int stackSize, FUNCPTR entryPt,
+			uint32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4,
+			uint32_t arg5, uint32_t arg6, uint32_t arg7, uint32_t arg8, uint32_t arg9);
+	STATUS restartTask(TASK task);
+	STATUS deleteTask(TASK task);
+	STATUS isTaskReady(TASK task);
+	STATUS isTaskSuspended(TASK task);
+	STATUS suspendTask(TASK task);
+	STATUS resumeTask(TASK task);
+	STATUS verifyTaskID(TASK task);
+	STATUS setTaskPriority(TASK task, int priority);
+	STATUS getTaskPriority(TASK task, int* priority);
+}
+
diff --git a/hal/include/HAL/Utilities.h b/hal/include/HAL/Utilities.h
deleted file mode 100644
index 6e0384e1949c1a671fbb919ca73c82f67944ad13..0000000000000000000000000000000000000000
--- a/hal/include/HAL/Utilities.h
+++ /dev/null
@@ -1,18 +0,0 @@
-
-#ifdef __vxworks
-#include <vxWorks.h>
-#else
-#include <stdint.h>
-#endif
-
-#ifndef HAL_UTILITIES_H
-#define HAL_UTILITIES_H
-
-extern "C" {
-  extern const int32_t HAL_NO_WAIT;
-  extern const int32_t HAL_WAIT_FOREVER;
-
-  void delayTicks(int32_t ticks);
-  void delayMillis(double ms);
-  void delaySeconds(double s);}
-#endif
diff --git a/hal/include/HAL/Utilities.hpp b/hal/include/HAL/Utilities.hpp
new file mode 100644
index 0000000000000000000000000000000000000000..b24cd29776b51298b2854c5b85e1e876c77c683f
--- /dev/null
+++ b/hal/include/HAL/Utilities.hpp
@@ -0,0 +1,17 @@
+#pragma once
+
+#ifdef __vxworks
+#include <vxWorks.h>
+#else
+#include <stdint.h>
+#endif
+
+extern "C"
+{
+	extern const int32_t HAL_NO_WAIT;
+	extern const int32_t HAL_WAIT_FOREVER;
+
+	void delayTicks(int32_t ticks);
+	void delayMillis(double ms);
+	void delaySeconds(double s);
+}
diff --git a/hal/include/HAL/cpp/Resource.h b/hal/include/HAL/cpp/Resource.hpp
similarity index 93%
rename from hal/include/HAL/cpp/Resource.h
rename to hal/include/HAL/cpp/Resource.hpp
index 43d93e3959308f5e25118e3dc142ba4dba839a5a..41ca9139cc3f5b261c0508e58848b2f624ffe8ac 100644
--- a/hal/include/HAL/cpp/Resource.h
+++ b/hal/include/HAL/cpp/Resource.hpp
@@ -3,12 +3,10 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef RESOURCE_H_
-#define RESOURCE_H_
-
-#include "../Errors.h"
-#include "Synchronized.h"
+#include "../Errors.hpp"
+#include "Synchronized.hpp"
 #ifdef __vxworks
 #include <vxWorks.h>
 #else
@@ -45,4 +43,3 @@ private:
 	DISALLOW_COPY_AND_ASSIGN(Resource);
 };
 
-#endif
diff --git a/hal/include/HAL/cpp/StackTrace.h b/hal/include/HAL/cpp/StackTrace.h
deleted file mode 100644
index 6112d9c2e50a366a7220b02fcc83f2efb2e2cd07..0000000000000000000000000000000000000000
--- a/hal/include/HAL/cpp/StackTrace.h
+++ /dev/null
@@ -1,15 +0,0 @@
-
-#ifdef __vxworks
-#include <vxWorks.h>
-#else
-#include <stdint.h>
-#endif
-
-#ifndef HAL_STACKTRACE_H
-#define HAL_STACKTRACE_H
-
-extern "C" {
-  void printCurrentStackTrace();
-  bool getErrnoToName(int32_t errNo, char* name);
-}
-#endif
diff --git a/hal/include/HAL/cpp/StackTrace.hpp b/hal/include/HAL/cpp/StackTrace.hpp
new file mode 100644
index 0000000000000000000000000000000000000000..9e5939b88b2d80fd76d150263c13dc6e597d5431
--- /dev/null
+++ b/hal/include/HAL/cpp/StackTrace.hpp
@@ -0,0 +1,13 @@
+#pragma once
+
+#ifdef __vxworks
+#include <vxWorks.h>
+#else
+#include <stdint.h>
+#endif
+
+extern "C"
+{
+	void printCurrentStackTrace();
+	bool getErrnoToName(int32_t errNo, char* name);
+}
diff --git a/hal/include/HAL/cpp/Synchronized.h b/hal/include/HAL/cpp/Synchronized.hpp
similarity index 91%
rename from hal/include/HAL/cpp/Synchronized.h
rename to hal/include/HAL/cpp/Synchronized.hpp
index d889e73d081a93d2a20d528eff73576ce064dcbe..da631d25225b58d818e549ef346bd73ccf708a35 100644
--- a/hal/include/HAL/cpp/Synchronized.h
+++ b/hal/include/HAL/cpp/Synchronized.hpp
@@ -3,11 +3,9 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef SYNCHRONIZED_H
-#define SYNCHRONIZED_H
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
 // A macro to disallow the copy constructor and operator= functions
 // This should be used in the private: declarations for a class
@@ -17,6 +15,8 @@
 
 #define CRITICAL_REGION(s) { Synchronized _sync(s);
 #define END_REGION }
+// TODO: is this Better?
+#define SYNCHRONIZE(s) for (Synchronized _sync(s), int _i=0;i < 1; i++)
 
 class Synchronized;
 
@@ -35,10 +35,12 @@ class Synchronized;
 class ReentrantSemaphore
 {
 public:
-	explicit ReentrantSemaphore() {
+	explicit ReentrantSemaphore()
+	{
 		m_semaphore = initializeMutexRecursive();
 	}
-	~ReentrantSemaphore() {
+	~ReentrantSemaphore()
+	{
 		deleteMutex(m_semaphore);
 	}
 
@@ -46,7 +48,8 @@ public:
 	 * Lock the semaphore, blocking until it's available.
 	 * @return 0 for success, -1 for error. If -1, the error will be in errno.
 	 */
-	int take() {
+	int take()
+	{
 		return takeMutex(m_semaphore);
 	}
 
@@ -54,15 +57,15 @@ public:
 	 * Unlock the semaphore.
 	 * @return 0 for success, -1 for error. If -1, the error will be in errno.
 	 */
-	int give() {
+	int give()
+	{
 		return giveMutex(m_semaphore);
 	}
 
 private:
 	MUTEX_ID m_semaphore;
 
-	friend class Synchronized;
-	DISALLOW_COPY_AND_ASSIGN(ReentrantSemaphore);
+	friend class Synchronized;DISALLOW_COPY_AND_ASSIGN(ReentrantSemaphore);
 };
 
 /**
@@ -99,4 +102,3 @@ private:
 	DISALLOW_COPY_AND_ASSIGN(Synchronized);
 };
 
-#endif
diff --git a/hal/include/Log.h b/hal/include/Log.hpp
similarity index 97%
rename from hal/include/Log.h
rename to hal/include/Log.hpp
index f9253c34bee8277873b9df33ab882ee6a7de4cb3..eb221e79c465c3fbdc4a1c686bb56bba408ed9f1 100644
--- a/hal/include/Log.h
+++ b/hal/include/Log.hpp
@@ -1,5 +1,4 @@
-#ifndef __LOG_H__
-#define __LOG_H__
+#pragma once
 
 #include <sstream>
 #include <iomanip>
@@ -102,5 +101,3 @@ inline std::string NowTime()
     sprintf(result, "%s.%03ld", buffer, (long)tv.tv_usec / 1000);
     return result;
 }
-
-#endif //__LOG_H__
diff --git a/hal/lib/Athena/Analog.cpp b/hal/lib/Athena/Analog.cpp
index f2630c8c7aa4e87d4ad21b6a48d44ec8a6d37874..2b7a22a8de6cbfe735e4c5b974a1593ced702928 100644
--- a/hal/lib/Athena/Analog.cpp
+++ b/hal/lib/Athena/Analog.cpp
@@ -1,12 +1,12 @@
 
-#include "HAL/Analog.h"
+#include "HAL/Analog.hpp"
 
 #include "Port.h"
-#include "HAL/Errors.h"
-#include "HAL/Semaphore.h"
+#include "HAL/Errors.hpp"
+#include "HAL/Semaphore.hpp"
 #include "ChipObject.h"
-#include "HAL/cpp/Synchronized.h"
-#include "HAL/cpp/Resource.h"
+#include "HAL/cpp/Synchronized.hpp"
+#include "HAL/cpp/Resource.hpp"
 #include "NetworkCommunication/AICalibration.h"
 #include "NetworkCommunication/LoadOut.h"
 
@@ -19,11 +19,10 @@ static const uint32_t kAnalogPins = 8;
 static const uint32_t kAccumulatorNumChannels = 2;
 static const uint32_t kAccumulatorChannels[] = {1, 2};
 
-struct analog_port_t {
+struct AnalogPort {
   Port port;
   tAccumulator *accumulator;
 };
-typedef struct analog_port_t AnalogPort;
 
 bool analogSampleRateSet = false;
 MUTEX_ID analogRegisterWindowSemaphore = NULL;
diff --git a/hal/lib/Athena/ChipObject.h b/hal/lib/Athena/ChipObject.h
index 45fa2ec78b3108a27fddaea3a280e545b617f3d6..a1a08fa12221aaeb2c8958a56d7854e99ae563eb 100644
--- a/hal/lib/Athena/ChipObject.h
+++ b/hal/lib/Athena/ChipObject.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __ChipObject_h__
-#define __ChipObject_h__
+#pragma once
 
 #include <stdint.h>
 #include "ChipObject/RoboRIO_FRC_ChipObject_Aliases.h"
@@ -34,6 +32,6 @@
 #include "ChipObject/tSPI.h"
 #include "ChipObject/tSysWatchdog.h"
 
+// FIXME: these should not be here!
 using namespace nFPGA;
 using namespace nRoboRIO_FPGANamespace;
-#endif
diff --git a/hal/lib/Athena/ChipObject/tSystemInterface.h b/hal/lib/Athena/ChipObject/tSystemInterface.h
index d13e93222bc23bb24bb0b1a26b86b3ad52911fcf..4a80b0a7f611d3ccc67815bdbe9a595c3bcb4725 100644
--- a/hal/lib/Athena/ChipObject/tSystemInterface.h
+++ b/hal/lib/Athena/ChipObject/tSystemInterface.h
@@ -12,9 +12,9 @@ public:
    tSystemInterface(){}
    virtual ~tSystemInterface(){}
 
-   virtual const uint16_t getExpectedFPGAVersion()=0;
-   virtual const uint32_t getExpectedFPGARevision()=0;
-   virtual const uint32_t * const getExpectedFPGASignature()=0;
+   virtual uint16_t getExpectedFPGAVersion()=0;
+   virtual uint32_t getExpectedFPGARevision()=0;
+   virtual uint32_t * getExpectedFPGASignature()=0;
    virtual void getHardwareFpgaSignature(uint32_t *guid_ptr, tRioStatusCode *status)=0;
    virtual uint32_t getLVHandle(tRioStatusCode *status)=0;
    virtual uint32_t getHandle()=0;
diff --git a/hal/lib/Athena/Digital.cpp b/hal/lib/Athena/Digital.cpp
index a6ecdb926abb0227a5c65f59ac1071e9f07d3c88..5b27cd8cf1844a19d85b23013e9ae450210b079c 100644
--- a/hal/lib/Athena/Digital.cpp
+++ b/hal/lib/Athena/Digital.cpp
@@ -1,11 +1,11 @@
 
-#include "HAL/Digital.h"
+#include "HAL/Digital.hpp"
 
 #include "Port.h"
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "ChipObject.h"
-#include "HAL/cpp/Synchronized.h"
-#include "HAL/cpp/Resource.h"
+#include "HAL/cpp/Synchronized.hpp"
+#include "HAL/cpp/Resource.hpp"
 #include "NetworkCommunication/LoadOut.h"
 #include <stdio.h>
 #include <math.h>
@@ -41,11 +41,10 @@ static const float kDefaultPwmCenter = 1.5;
 static const int32_t kDefaultPwmStepsDown = 1000;
 static const int32_t kPwmDisabled = 0;
 
-struct digital_port_t {
+struct DigitalPort {
   Port port;
   uint32_t PWMGeneratorID;
 };
-typedef struct digital_port_t DigitalPort;
 
 // XXX: Set these back to static once we figure out the memory clobbering issue
 MUTEX_ID digitalDIOSemaphore = NULL;
@@ -142,23 +141,17 @@ void* initializeDigitalPort(void* port_pointer, int32_t *status) {
 }
 
 bool checkDigitalModule(uint8_t module) {
-  if (nLoadOut::getModulePresence(nLoadOut::kModuleType_Digital, module - 1))
-    return true;
-  return false;
+  return nLoadOut::getModulePresence(nLoadOut::kModuleType_Digital, module - 1);
 }
 
 bool checkPWMChannel(void* digital_port_pointer) {
   DigitalPort* port = (DigitalPort*) digital_port_pointer;
-  if (port->port.pin > 0 && port->port.pin <= kPwmPins)
-    return true;
-  return false;
+  return (port->port.pin > 0 && port->port.pin <= kPwmPins);
 }
 
 bool checkRelayChannel(void* digital_port_pointer) {
   DigitalPort* port = (DigitalPort*) digital_port_pointer;
-  if (port->port.pin > 0 && port->port.pin <= kRelayPins)
-    return true;
-  return false;
+  return (port->port.pin > 0 && port->port.pin <= kRelayPins);
 }
 
 uint8_t remapDigitalChannel(uint32_t pin, int32_t *status) {
diff --git a/hal/lib/Athena/HAL.cpp b/hal/lib/Athena/HAL.cpp
index 1cc25049c2c73ded36fc82432925444756dcfb52..3ec4995cdfbcfef152e2aae46bd6b9b416e3cd9e 100644
--- a/hal/lib/Athena/HAL.cpp
+++ b/hal/lib/Athena/HAL.cpp
@@ -1,51 +1,70 @@
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
 #include "Port.h"
-#include "HAL/Errors.h"
+#include "HAL/Errors.hpp"
 #include "ChipObject.h"
 #include "NetworkCommunication/FRCComm.h"
 #include "NetworkCommunication/UsageReporting.h"
 #include "NetworkCommunication/LoadOut.h"
 #include "ChipObject/nInterfaceGlobals.h"
-
+#include <fstream>
+#include <iostream>
+#include <unistd.h>
+#include <signal.h> // linux for kill
 const uint32_t solenoid_kNumDO7_0Elements = 0;
 const uint32_t dio_kNumSystems = tDIO::kNumSystems;
 const uint32_t interrupt_kNumSystems = tInterrupt::kNumSystems;
 const uint32_t kSystemClockTicksPerMicrosecond = 40;
 
-void* getPort(uint8_t pin) {
-  Port* port = new Port();
-  port->pin = pin;
-  port->module = 1;
-  return port;
+void* getPort(uint8_t pin)
+{
+	Port* port = new Port();
+	port->pin = pin;
+	port->module = 1;
+	return port;
 }
 
 /**
  * @deprecated Uses module numbers
  */
-void* getPortWithModule(uint8_t module, uint8_t pin) {
-  Port* port = new Port();
-  port->pin = pin;
-  port->module = module;
-  return port;
-}
-
-const char* getHALErrorMessage(int32_t code) {
-  if (code == 0) return "";
-  else if (code == SAMPLE_RATE_TOO_HIGH) return SAMPLE_RATE_TOO_HIGH_MESSAGE;
-  else if (code == VOLTAGE_OUT_OF_RANGE) return VOLTAGE_OUT_OF_RANGE_MESSAGE;
-  else if (code == LOOP_TIMING_ERROR) return LOOP_TIMING_ERROR_MESSAGE;
-  else if (code == SPI_WRITE_NO_MOSI) return SPI_WRITE_NO_MOSI_MESSAGE;
-  else if (code == SPI_READ_NO_MISO) return SPI_READ_NO_MISO_MESSAGE;
-  else if (code == SPI_READ_NO_DATA) return SPI_READ_NO_DATA_MESSAGE;
-  else if (code == INCOMPATIBLE_STATE) return INCOMPATIBLE_STATE_MESSAGE;
-  else if (code == NO_AVAILABLE_RESOURCES) return NO_AVAILABLE_RESOURCES_MESSAGE;
-  else if (code == NULL_PARAMETER) return NULL_PARAMETER_MESSAGE;
-  else if (code == ANALOG_TRIGGER_LIMIT_ORDER_ERROR) return ANALOG_TRIGGER_LIMIT_ORDER_ERROR_MESSAGE;
-  else if (code == ANALOG_TRIGGER_PULSE_OUTPUT_ERROR) return ANALOG_TRIGGER_PULSE_OUTPUT_ERROR_MESSAGE;
-  else if (code == PARAMETER_OUT_OF_RANGE) return PARAMETER_OUT_OF_RANGE_MESSAGE;
-  else return "";
+void* getPortWithModule(uint8_t module, uint8_t pin)
+{
+	Port* port = new Port();
+	port->pin = pin;
+	port->module = module;
+	return port;
+}
+
+const char* getHALErrorMessage(int32_t code)
+{
+	if (code == 0)
+		return "";
+	else if (code == SAMPLE_RATE_TOO_HIGH)
+		return SAMPLE_RATE_TOO_HIGH_MESSAGE;
+	else if (code == VOLTAGE_OUT_OF_RANGE)
+		return VOLTAGE_OUT_OF_RANGE_MESSAGE;
+	else if (code == LOOP_TIMING_ERROR)
+		return LOOP_TIMING_ERROR_MESSAGE;
+	else if (code == SPI_WRITE_NO_MOSI)
+		return SPI_WRITE_NO_MOSI_MESSAGE;
+	else if (code == SPI_READ_NO_MISO)
+		return SPI_READ_NO_MISO_MESSAGE;
+	else if (code == SPI_READ_NO_DATA)
+		return SPI_READ_NO_DATA_MESSAGE;
+	else if (code == INCOMPATIBLE_STATE)
+		return INCOMPATIBLE_STATE_MESSAGE;
+	else if (code == NO_AVAILABLE_RESOURCES)
+		return NO_AVAILABLE_RESOURCES_MESSAGE;
+	else if (code == NULL_PARAMETER)
+		return NULL_PARAMETER_MESSAGE;
+	else if (code == ANALOG_TRIGGER_LIMIT_ORDER_ERROR)
+		return ANALOG_TRIGGER_LIMIT_ORDER_ERROR_MESSAGE;
+	else if (code == ANALOG_TRIGGER_PULSE_OUTPUT_ERROR)
+		return ANALOG_TRIGGER_PULSE_OUTPUT_ERROR_MESSAGE;
+	else if (code == PARAMETER_OUT_OF_RANGE)
+		return PARAMETER_OUT_OF_RANGE_MESSAGE;
+	else
+		return "";
 }
 
 /**
@@ -53,11 +72,12 @@ const char* getHALErrorMessage(int32_t code) {
  * For now, expect this to be competition year.
  * @return FPGA Version number.
  */
-uint16_t getFPGAVersion(int32_t *status) {
-  tGlobal *global = tGlobal::create(status);
-  uint16_t version = global->readVersion(status);
-  delete global;
-  return version;
+uint16_t getFPGAVersion(int32_t *status)
+{
+	tGlobal *global = tGlobal::create(status);
+	uint16_t version = global->readVersion(status);
+	delete global;
+	return version;
 }
 
 /**
@@ -68,11 +88,12 @@ uint16_t getFPGAVersion(int32_t *status) {
  * The 12 least significant bits are the Build Number.
  * @return FPGA Revision number.
  */
-uint32_t getFPGARevision(int32_t *status) {
-  tGlobal *global = tGlobal::create(status);
-  uint32_t revision = global->readRevision(status);
-  delete global;
-  return revision;
+uint32_t getFPGARevision(int32_t *status)
+{
+	tGlobal *global = tGlobal::create(status);
+	uint32_t revision = global->readRevision(status);
+	delete global;
+	return revision;
 }
 
 /**
@@ -80,35 +101,37 @@ uint32_t getFPGARevision(int32_t *status) {
  * 
  * @return The current time in microseconds according to the FPGA (since FPGA reset).
  */
-uint32_t getFPGATime(int32_t *status) {
-  tGlobal *global = tGlobal::create(status);
-  uint32_t time = global->readLocalTime(status);
-  delete global;
-  return time;
+uint32_t getFPGATime(int32_t *status)
+{
+	tGlobal *global = tGlobal::create(status);
+	uint32_t time = global->readLocalTime(status);
+	delete global;
+	return time;
 }
 
-
 /**
  * Set the state of the FPGA status LED on the cRIO.
  */
-void setFPGALED(uint32_t state, int32_t *status) {
-  // XXX: Not supported?
-  // tGlobal *global = tGlobal::create(status);
-  // global->writeFPGA_LED(state, status);
-  // delete global;
+void setFPGALED(uint32_t state, int32_t *status)
+{
+	// XXX: Not supported?
+	// tGlobal *global = tGlobal::create(status);
+	// global->writeFPGA_LED(state, status);
+	// delete global;
 }
 
 /**
  * Get the current state of the FPGA status LED on the cRIO.
  * @return The curent state of the FPGA LED.
  */
-int32_t getFPGALED(int32_t *status) {
-  // XXX: Not supported?
-  // tGlobal *global = tGlobal::create(status);
-  // bool ledValue = global->readFPGA_LED(status);
-  // delete global;
-  // return ledValue;
-  return 0; // XXX: Dummy value
+int32_t getFPGALED(int32_t *status)
+{
+	// XXX: Not supported?
+	// tGlobal *global = tGlobal::create(status);
+	// bool ledValue = global->readFPGA_LED(status);
+	// delete global;
+	// return ledValue;
+	return 0; // XXX: Dummy value
 }
 
 int HALSetErrorData(const char *errors, int errorsLength, int wait_ms)
@@ -116,7 +139,8 @@ int HALSetErrorData(const char *errors, int errorsLength, int wait_ms)
 	return setErrorData(errors, errorsLength, wait_ms);
 }
 
-int HALSetUserDsLcdData(const char *userDsLcdData, int userDsLcdDataLength, int wait_ms)
+int HALSetUserDsLcdData(const char *userDsLcdData, int userDsLcdDataLength,
+		int wait_ms)
 {
 	return setUserDsLcdData(userDsLcdData, userDsLcdDataLength, wait_ms);
 }
@@ -126,14 +150,15 @@ int HALOverrideIOConfig(const char *ioConfig, int wait_ms)
 	return overrideIOConfig(ioConfig, wait_ms);
 }
 
-int HALGetDynamicControlData(uint8_t type, char *dynamicData, int32_t maxLength, int wait_ms)
+int HALGetDynamicControlData(uint8_t type, char *dynamicData, int32_t maxLength,
+		int wait_ms)
 {
-	return getDynamicControlData( type, dynamicData, maxLength, wait_ms);
+	return getDynamicControlData(type, dynamicData, maxLength, wait_ms);
 }
 
 int HALGetCommonControlData(HALCommonControlData *data, int wait_ms)
 {
-	return getCommonControlData( (FRCCommonControlData*)data, wait_ms );
+	return getCommonControlData((FRCCommonControlData*) data, wait_ms);
 }
 
 void HALSetNewDataSem(pthread_mutex_t * param)
@@ -142,16 +167,68 @@ void HALSetNewDataSem(pthread_mutex_t * param)
 }
 
 int HALSetStatusData(float battery, uint8_t dsDigitalOut, uint8_t updateNumber,
-			const char *userDataHigh, int userDataHighLength,
-			const char *userDataLow, int userDataLowLength, int wait_ms)
+		const char *userDataHigh, int userDataHighLength,
+		const char *userDataLow, int userDataLowLength, int wait_ms)
 {
-	return setStatusData(battery, dsDigitalOut, updateNumber, userDataHigh, userDataHighLength, userDataLow, userDataLowLength, wait_ms);
+	return setStatusData(battery, dsDigitalOut, updateNumber, userDataHigh,
+			userDataHighLength, userDataLow, userDataLowLength, wait_ms);
 }
 
-
-void HALNetworkCommunicationReserve()
+/**
+ * Call this to start up HAL. This is required for robot programs.
+ */
+int HALInitialize(int mode)
 {
-  nFPGA::nRoboRIO_FPGANamespace::g_currentTargetClass = nLoadOut::kTargetClass_RoboRIO;
+	// image 4; Fixes errors caused by multiple processes. Talk to NI about this
+	nFPGA::nRoboRIO_FPGANamespace::g_currentTargetClass =
+			nLoadOut::kTargetClass_RoboRIO;
+
+	// Kill any previous robot programs
+	std::fstream fs;
+	fs.open("/var/lock/frc.pid", std::fstream::in | std::fstream::out); // By making this both in/out, it won't give us an error if it doesnt exist
+	if (fs.bad())
+		return 0;
+
+	pid_t pid = 0;
+	if (!fs.eof() && !fs.fail())
+	{
+		fs >> pid;
+		//see if the pid is around, but we don't want to mess with init id=1, or ourselves
+		if (pid >= 2 && kill(pid, 0) == 0 && pid != getpid())
+		{
+			std::cout << "Killing previously running FRC program..."
+					<< std::endl;
+			kill(pid, SIGTERM); // try to kill it
+			delayMillis(100);
+			if (kill(pid, 0) == 0)
+			{
+				// still not successfull
+				if (mode == 0)
+				{
+					std::cout << "FRC pid " << pid
+							<< " did not die within 110ms. Aborting"
+							<< std::endl;
+					return 0; // just fail
+				}
+				else if (mode == 1) // kill -9 it
+					kill(pid, SIGKILL);
+				else
+				{
+					std::cout << "WARNING: FRC pid " << pid
+							<< " did not die within 110ms." << std::endl;
+				}
+			}
+
+		}
+	}
+	fs.close();
+	// we will re-open it write only to truncate the file
+	fs.open("/var/lock/frc.pid", std::fstream::out | std::fstream::trunc);
+	fs.seekp(0);
+	pid = getpid();
+	fs << pid << std::endl;
+	fs.close();
+	return 1;
 }
 
 void HALNetworkCommunicationObserveUserProgramStarting(void)
@@ -179,26 +256,42 @@ void HALNetworkCommunicationObserveUserProgramTest(void)
 	FRC_NetworkCommunication_observeUserProgramTest();
 }
 
-uint32_t HALReport(uint8_t resource, uint8_t instanceNumber, uint8_t context, const char *feature)
+uint32_t HALReport(uint8_t resource, uint8_t instanceNumber, uint8_t context,
+		const char *feature)
 {
 	//return FRC_NetworkCommunication_nUsageReporting_report( resource, instanceNumber, context, feature);
-  return 0;
+	return 0;
 }
 
-
 // TODO: HACKS
-void NumericArrayResize() {}
-void RTSetCleanupProc() {}
-void EDVR_CreateReference() {}
-void Occur() {}
+void NumericArrayResize()
+{
+}
+void RTSetCleanupProc()
+{
+}
+void EDVR_CreateReference()
+{
+}
+void Occur()
+{
+}
 
-void imaqGetErrorText() {}
-void imaqGetLastError() {}
-void niTimestamp64() {}
+void imaqGetErrorText()
+{
+}
+void imaqGetLastError()
+{
+}
+void niTimestamp64()
+{
+}
 
 #include "NetworkCommunication/LoadOut.h"
-namespace nLoadOut {
-  bool getModulePresence(tModuleType moduleType, uint8_t moduleNumber) {
-  	return true;
-  }
+namespace nLoadOut
+{
+bool getModulePresence(tModuleType moduleType, uint8_t moduleNumber)
+{
+	return true;
+}
 }
diff --git a/hal/lib/Athena/Interrupts.cpp b/hal/lib/Athena/Interrupts.cpp
index c47f5769f4a443d1aaece042637c2817780c0265..941118d4d670857e6acfebb721e7a275786fd91c 100644
--- a/hal/lib/Athena/Interrupts.cpp
+++ b/hal/lib/Athena/Interrupts.cpp
@@ -1,38 +1,39 @@
-
-#include "HAL/Interrupts.h"
-
+#include "HAL/Interrupts.hpp"
 #include "ChipObject.h"
 
-struct interrupt_t {
-  tInterrupt *anInterrupt;
-  tInterruptManager *manager;
+struct Interrupt // FIXME: why is this internal?
+{
+	tInterrupt *anInterrupt;
+	tInterruptManager *manager;
 };
-typedef struct interrupt_t Interrupt;
 
-void* initializeInterrupts(uint32_t interruptIndex, bool watcher, int32_t *status) {
-  Interrupt* anInterrupt = new Interrupt();
-  // Expects the calling leaf class to allocate an interrupt index.
-  anInterrupt->anInterrupt = tInterrupt::create(interruptIndex, status);
-  anInterrupt->anInterrupt->writeConfig_WaitForAck(false, status);
-  anInterrupt->manager = new tInterruptManager(1 << interruptIndex, watcher, status);
-  return anInterrupt;
+void* initializeInterrupts(uint32_t interruptIndex, bool watcher, int32_t *status)
+{
+	Interrupt* anInterrupt = new Interrupt();
+	// Expects the calling leaf class to allocate an interrupt index.
+	anInterrupt->anInterrupt = tInterrupt::create(interruptIndex, status);
+	anInterrupt->anInterrupt->writeConfig_WaitForAck(false, status);
+	anInterrupt->manager = new tInterruptManager(1 << interruptIndex, watcher, status);
+	return anInterrupt;
 }
 
-void cleanInterrupts(void* interrupt_pointer, int32_t *status) {
-  Interrupt* anInterrupt = (Interrupt*) interrupt_pointer;
-  delete anInterrupt->anInterrupt;
-  delete anInterrupt->manager;
-  anInterrupt->anInterrupt = NULL;
-  anInterrupt->manager = NULL;
+void cleanInterrupts(void* interrupt_pointer, int32_t *status)
+{
+	Interrupt* anInterrupt = (Interrupt*)interrupt_pointer;
+	delete anInterrupt->anInterrupt;
+	delete anInterrupt->manager;
+	anInterrupt->anInterrupt = NULL;
+	anInterrupt->manager = NULL;
 }
 
 /**
  * In synchronous mode, wait for the defined interrupt to occur.
  * @param timeout Timeout in seconds
  */
-void waitForInterrupt(void* interrupt_pointer, double timeout, int32_t *status) {
-  Interrupt* anInterrupt = (Interrupt*) interrupt_pointer;
-  anInterrupt->manager->watch((int32_t)(timeout * 1e3), status);
+void waitForInterrupt(void* interrupt_pointer, double timeout, int32_t *status)
+{
+	Interrupt* anInterrupt = (Interrupt*)interrupt_pointer;
+	anInterrupt->manager->watch((int32_t)(timeout * 1e3), status);
 }
 
 /**
@@ -40,17 +41,19 @@ void waitForInterrupt(void* interrupt_pointer, double timeout, int32_t *status)
  * oInterrupts are disabled when the RequestInterrupt call is made. This gives time to do the
  * setup of the other options before starting to field interrupts.
  */
-void enableInterrupts(void* interrupt_pointer, int32_t *status) {
-  Interrupt* anInterrupt = (Interrupt*) interrupt_pointer;
-  anInterrupt->manager->enable(status);
+void enableInterrupts(void* interrupt_pointer, int32_t *status)
+{
+	Interrupt* anInterrupt = (Interrupt*)interrupt_pointer;
+	anInterrupt->manager->enable(status);
 }
 
 /**
  * Disable Interrupts without without deallocating structures.
  */
-void disableInterrupts(void* interrupt_pointer, int32_t *status) {
-  Interrupt* anInterrupt = (Interrupt*) interrupt_pointer;
-  anInterrupt->manager->disable(status);
+void disableInterrupts(void* interrupt_pointer, int32_t *status)
+{
+	Interrupt* anInterrupt = (Interrupt*)interrupt_pointer;
+	anInterrupt->manager->disable(status);
 }
 
 /**
@@ -58,29 +61,34 @@ void disableInterrupts(void* interrupt_pointer, int32_t *status) {
  * This is in the same time domain as GetClock().
  * @return Timestamp in seconds since boot.
  */
-double readInterruptTimestamp(void* interrupt_pointer, int32_t *status) {
-  Interrupt* anInterrupt = (Interrupt*) interrupt_pointer;
-  uint32_t timestamp = anInterrupt->anInterrupt->readTimeStamp(status);
-  return timestamp * 1e-6;
+double readInterruptTimestamp(void* interrupt_pointer, int32_t *status)
+{
+	Interrupt* anInterrupt = (Interrupt*)interrupt_pointer;
+	uint32_t timestamp = anInterrupt->anInterrupt->readTimeStamp(status);
+	return timestamp * 1e-6;
 }
 
 void requestInterrupts(void* interrupt_pointer, uint8_t routing_module, uint32_t routing_pin,
-					   bool routing_analog_trigger, int32_t *status) {
-    Interrupt* anInterrupt = (Interrupt*) interrupt_pointer;
+		bool routing_analog_trigger, int32_t *status)
+{
+	Interrupt* anInterrupt = (Interrupt*)interrupt_pointer;
 	anInterrupt->anInterrupt->writeConfig_WaitForAck(false, status);
 	anInterrupt->anInterrupt->writeConfig_Source_AnalogTrigger(routing_analog_trigger, status);
 	anInterrupt->anInterrupt->writeConfig_Source_Channel(routing_pin, status);
 	anInterrupt->anInterrupt->writeConfig_Source_Module(routing_module, status);
 }
 
-void attachInterruptHandler(void* interrupt_pointer, InterruptHandlerFunction handler,
-							void* param, int32_t *status) {
-  Interrupt* anInterrupt = (Interrupt*) interrupt_pointer;
-  anInterrupt->manager->registerHandler(handler, param, status);
+void attachInterruptHandler(void* interrupt_pointer, InterruptHandlerFunction handler, void* param,
+		int32_t *status)
+{
+	Interrupt* anInterrupt = (Interrupt*)interrupt_pointer;
+	anInterrupt->manager->registerHandler(handler, param, status);
 }
-  
-void setInterruptUpSourceEdge(void* interrupt_pointer, bool risingEdge, bool fallingEdge, int32_t *status) {
-  Interrupt* anInterrupt = (Interrupt*) interrupt_pointer;
-  anInterrupt->anInterrupt->writeConfig_RisingEdge(risingEdge, status);
-  anInterrupt->anInterrupt->writeConfig_FallingEdge(fallingEdge, status);
+
+void setInterruptUpSourceEdge(void* interrupt_pointer, bool risingEdge, bool fallingEdge,
+		int32_t *status)
+{
+	Interrupt* anInterrupt = (Interrupt*)interrupt_pointer;
+	anInterrupt->anInterrupt->writeConfig_RisingEdge(risingEdge, status);
+	anInterrupt->anInterrupt->writeConfig_FallingEdge(fallingEdge, status);
 }
diff --git a/hal/lib/Athena/Notifier.cpp b/hal/lib/Athena/Notifier.cpp
index 8d9766b6c350f82cd40f1e339a8d4bba3366ce36..c5325127752650c9ad77a084d8b8d5644eff771e 100644
--- a/hal/lib/Athena/Notifier.cpp
+++ b/hal/lib/Athena/Notifier.cpp
@@ -1,40 +1,40 @@
-
-#include "HAL/Notifier.h"
-
+#include "HAL/Notifier.hpp"
 #include "ChipObject.h"
 
 static const uint32_t kTimerInterruptNumber = 28;
 
-struct notifier_t {
-  tAlarm *alarm;
-  tInterruptManager *manager;
+struct Notifier
+{
+	tAlarm *alarm;
+	tInterruptManager *manager;
 };
-typedef struct notifier_t Notifier;
 
-void* initializeNotifier(void (*ProcessQueue)(uint32_t, void*), int32_t *status) {
-  Notifier* notifier = new Notifier();
-  notifier->manager = new tInterruptManager(1 << kTimerInterruptNumber, false, status);
-  notifier->manager->registerHandler(ProcessQueue, NULL, status);
-  notifier->manager->enable(status);
-  notifier->alarm = tAlarm::create(status);
-  return notifier;
+void* initializeNotifier(void (*ProcessQueue)(uint32_t, void*), int32_t *status)
+{
+	Notifier* notifier = new Notifier();
+	notifier->manager = new tInterruptManager(1 << kTimerInterruptNumber, false, status);
+	notifier->manager->registerHandler(ProcessQueue, NULL, status);
+	notifier->manager->enable(status);
+	notifier->alarm = tAlarm::create(status);
+	return notifier;
 }
 
-void cleanNotifier(void* notifier_pointer, int32_t *status) {
-  Notifier* notifier = (Notifier*) notifier_pointer;
-  notifier->alarm->writeEnable(false, status);
-  delete notifier->alarm;
-  notifier->alarm = NULL;
-  notifier->manager->disable(status);
-  delete notifier->manager;
-  notifier->manager = NULL;
+void cleanNotifier(void* notifier_pointer, int32_t *status)
+{
+	Notifier* notifier = (Notifier*)notifier_pointer;
+	notifier->alarm->writeEnable(false, status);
+	delete notifier->alarm;
+	notifier->alarm = NULL;
+	notifier->manager->disable(status);
+	delete notifier->manager;
+	notifier->manager = NULL;
 }
 
-
-void updateNotifierAlarm(void* notifier_pointer, uint32_t triggerTime, int32_t *status) {
-  Notifier* notifier = (Notifier*) notifier_pointer;
-  // write the first item in the queue into the trigger time
-  notifier->alarm->writeTriggerTime(triggerTime, status);
-  // Enable the alarm.  The hardware disables itself after each alarm.
-  notifier->alarm->writeEnable(true, status);
+void updateNotifierAlarm(void* notifier_pointer, uint32_t triggerTime, int32_t *status)
+{
+	Notifier* notifier = (Notifier*)notifier_pointer;
+	// write the first item in the queue into the trigger time
+	notifier->alarm->writeTriggerTime(triggerTime, status);
+	// Enable the alarm.  The hardware disables itself after each alarm.
+	notifier->alarm->writeEnable(true, status);
 }
diff --git a/hal/lib/Athena/Port.h b/hal/lib/Athena/Port.h
index 433f318e92947bb4ae9e402e30c39df76d55aeaa..8679c26f6b0c21483c86755a10975285b7de6cfe 100644
--- a/hal/lib/Athena/Port.h
+++ b/hal/lib/Athena/Port.h
@@ -1,11 +1,7 @@
+#pragma once
 
-#ifndef HAL_PORT_H
-#define HAL_PORT_H
-
-struct port_t {
-  uint8_t pin;
-  uint8_t module;
-};
-typedef struct port_t Port;
-
-#endif
+typedef struct port_t
+{
+	uint8_t pin;
+	uint8_t module;
+} Port;
diff --git a/hal/lib/Athena/Semaphore.cpp b/hal/lib/Athena/Semaphore.cpp
index 5276d6df80121e38de30d6fdf1e1ccd295b64135..df24bf16f905d999728d62994c2a83dfd43a2c33 100644
--- a/hal/lib/Athena/Semaphore.cpp
+++ b/hal/lib/Athena/Semaphore.cpp
@@ -1,8 +1,8 @@
 
-#include "HAL/Semaphore.h"
+#include "HAL/Semaphore.hpp"
 
 #include "ChipObject.h"
-#include "Log.h"
+#include "Log.hpp"
 
 // set the logging level
 TLogLevel semaphoreLogLevel = logDEBUG;
diff --git a/hal/lib/Athena/Solenoid.cpp b/hal/lib/Athena/Solenoid.cpp
index 758dcf37a456792147ffff69c08813a5f5ecd6d7..42eaa72ad5175d3f199fa109a5b7f4aff1c6ed03 100644
--- a/hal/lib/Athena/Solenoid.cpp
+++ b/hal/lib/Athena/Solenoid.cpp
@@ -1,10 +1,10 @@
 
-#include "HAL/Solenoid.h"
+#include "HAL/Solenoid.hpp"
 
 #include "Port.h"
-#include "HAL/Errors.h"
+#include "HAL/Errors.hpp"
 #include "ChipObject.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "NetworkCommunication/LoadOut.h"
 
 // XXX No solenoid abstraction :(
diff --git a/hal/lib/Athena/Task.cpp b/hal/lib/Athena/Task.cpp
index 22fc93743e8730103ab5ac83ca1227168dc5a5ef..ebf92b83f45ff8e0982b25e6f3998477e3c579d2 100644
--- a/hal/lib/Athena/Task.cpp
+++ b/hal/lib/Athena/Task.cpp
@@ -1,7 +1,7 @@
 
-#include "HAL/Task.h"
+#include "HAL/Task.hpp"
 
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "ChipObject.h"
 
 #include <stdio.h>
@@ -14,13 +14,13 @@ const int32_t HAL_taskLib_ILLEGAL_OPTIONS = -1; // TODO: update to relevant Task
 const int32_t HAL_memLib_NOT_ENOUGH_MEMORY = -1; // TODO: update to relevant TaskMemoryError
 const int32_t HAL_taskLib_ILLEGAL_PRIORITY = -1; // TODO: update to relevant TaskPriorityError
 
-typedef struct task_args_t {
+struct TaskArgs {
 	FUNCPTR fun;
 	char* name;
 	pthread_t** task;
 	uint32_t arg0, arg1, arg2, arg3, arg4,
 	         arg5, arg6, arg7, arg8, arg9;
-} TaskArgs;
+};
 
 void* startRoutine(void* data) {
 	TaskArgs* args = (TaskArgs*) data;
diff --git a/hal/lib/Athena/Utilities.cpp b/hal/lib/Athena/Utilities.cpp
index 9121948433a5cab85f26c2eb491cb10f2092b23e..b821e321320b4d79fe9613bb94ae2e76b64b09cd 100644
--- a/hal/lib/Athena/Utilities.cpp
+++ b/hal/lib/Athena/Utilities.cpp
@@ -1,29 +1,29 @@
-
-#include "HAL/Utilities.h"
-
-#include "HAL/HAL.h"
-#include "ChipObject.h"
+#include "HAL/Utilities.hpp"
+#include <time.h>
 
 const int32_t HAL_NO_WAIT = 0;
 const int32_t HAL_WAIT_FOREVER = -1;
 
-void delayTicks(int32_t ticks) {
-  struct timespec test, remaining;
-  test.tv_sec = 0;
-  test.tv_nsec = ticks * 3;
-  nanosleep(&test, &remaining);
+void delayTicks(int32_t ticks)
+{
+	struct timespec test, remaining;
+	test.tv_sec = 0;
+	test.tv_nsec = ticks * 3;
+	nanosleep(&test, &remaining);
 }
 
-void delayMillis(double ms) {
-  struct timespec test, remaining;
-  test.tv_sec = ms/1000;
-  test.tv_nsec = 1000*(((uint64_t) ms)%1000000);
-  nanosleep(&test, &remaining);
+void delayMillis(double ms)
+{
+	struct timespec test, remaining;
+	test.tv_sec = ms / 1000;
+	test.tv_nsec = 1000 * (((uint64_t)ms) % 1000000);
+	nanosleep(&test, &remaining);
 }
 
-void delaySeconds(double s) {
-  struct timespec test, remaining;
-  test.tv_sec = (int) s;
-  test.tv_nsec = (s - (int)s) * 1000000000.0;
-  nanosleep(&test, &remaining);
+void delaySeconds(double s)
+{
+	struct timespec test, remaining;
+	test.tv_sec = (int)s;
+	test.tv_nsec = (s - (int)s) * 1000000000.0;
+	nanosleep(&test, &remaining);
 }
diff --git a/hal/lib/Athena/cpp/Resource.cpp b/hal/lib/Athena/cpp/Resource.cpp
index a2baa41e167934fa14538d8a3a7af954a5812470..f24f3b1c83e8041306c29887b45c9b5a50817892 100644
--- a/hal/lib/Athena/cpp/Resource.cpp
+++ b/hal/lib/Athena/cpp/Resource.cpp
@@ -4,8 +4,8 @@
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
 
-#include "HAL/cpp/Resource.h"
-#include "HAL/Errors.h"
+#include "HAL/cpp/Resource.hpp"
+#include "HAL/Errors.hpp"
 #include <cstddef>
 
 ReentrantSemaphore Resource::m_createLock;
diff --git a/hal/lib/Athena/cpp/StackTrace.cpp b/hal/lib/Athena/cpp/StackTrace.cpp
index 7629925728a887165b28ff74fb8a071848db71a0..72c07331118a5cd5e71ea6ea11ccbd7fd79f7326 100644
--- a/hal/lib/Athena/cpp/StackTrace.cpp
+++ b/hal/lib/Athena/cpp/StackTrace.cpp
@@ -1,7 +1,7 @@
 
-#include "HAL/cpp/StackTrace.h"
+#include "HAL/cpp/StackTrace.hpp"
 
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "../ChipObject.h"
 #include <stdio.h>
 
diff --git a/hal/lib/Athena/cpp/Synchronized.cpp b/hal/lib/Athena/cpp/Synchronized.cpp
index e4766130c42294bff69dd22630a6e365a0b8f9d8..e528208f8037e445f926b98939110be2e4dc5af1 100644
--- a/hal/lib/Athena/cpp/Synchronized.cpp
+++ b/hal/lib/Athena/cpp/Synchronized.cpp
@@ -4,8 +4,8 @@
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
 
-#include "HAL/cpp/Synchronized.h"
-#include "HAL/Semaphore.h"
+#include "HAL/cpp/Synchronized.hpp"
+#include "HAL/Semaphore.hpp"
 
 /**
  * Synchronized class deals with critical regions.
diff --git a/hal/lib/Athena/i2clib/i2c-lib.h b/hal/lib/Athena/i2clib/i2c-lib.h
index d379765e1343fa0b8c71472c7f636bb593851745..123fe7a752cc6f48b2a0fb2792d6b14e546009c5 100644
--- a/hal/lib/Athena/i2clib/i2c-lib.h
+++ b/hal/lib/Athena/i2clib/i2c-lib.h
@@ -1,10 +1,7 @@
-#ifndef __I2C_LIB_H__
-#define __I2C_LIB_H__
+#pragma once
 
 int i2clib_open(const char *device);
 void i2clib_close(int handle);
 int i2clib_read(int handle, uint8_t dev_addr, char *recv_buf, int32_t recv_size);
 int i2clib_write(int handle, uint8_t dev_addr, const char *send_buf, int32_t send_size);
 int i2clib_writeread(int handle, uint8_t dev_addr, const char *send_buf, int32_t send_size, char *recv_buf, int32_t recv_size);
-
-#endif /* __I2C_LIB_H__ */
\ No newline at end of file
diff --git a/networktables/cpp/CMakeLists.txt b/networktables/cpp/CMakeLists.txt
index 86ab01f5eb926c3ea3d5da51b7722039d47523ed..0569d876e8c8ce10a39af91bb14421abee2fe66c 100644
--- a/networktables/cpp/CMakeLists.txt
+++ b/networktables/cpp/CMakeLists.txt
@@ -4,9 +4,9 @@ project(NetworkTables)
 file(GLOB_RECURSE SRC_TARGET_FILES lib/Athena/*.cpp)
 file(GLOB_RECURSE SRC_SHARE_FILES lib/share/*.cpp)
 include_directories(include)
-add_library(NetworkTables SHARED ${SRC_SHARE_FILES} ${SRC_TARGET_FILES})
+add_library(NetworkTables STATIC ${SRC_SHARE_FILES} ${SRC_TARGET_FILES})
 target_link_libraries(NetworkTables ${NI_LIBS})
-INSTALL(TARGETS NetworkTables LIBRARY DESTINATION lib COMPONENT lib)
+INSTALL(TARGETS NetworkTables ARCHIVE DESTINATION lib COMPONENT lib)
 INSTALL(DIRECTORY include DESTINATION ${CMAKE_INSTALL_PREFIX} COMPONENT headers)
 # lib/ c gcc_s ld-linux
 # usr/lib stdc++
diff --git a/networktables/cpp/include/networktables2/client/ClientConnectionState.h b/networktables/cpp/include/networktables2/client/ClientConnectionState.h
index fdb8e3e3131c0da6bddc02518224abf081a1b0da..26cc23c2a3602000f810d033dd21ca2dc54c08a1 100644
--- a/networktables/cpp/include/networktables2/client/ClientConnectionState.h
+++ b/networktables/cpp/include/networktables2/client/ClientConnectionState.h
@@ -83,6 +83,7 @@ private:
 	std::exception& e;
 	char msg[100];
 public:
+	virtual ~ClientConnectionState_Error(){}
 	/**
 	 * Create a new error state
 	 * @param e
diff --git a/ni-libraries/genlinks b/ni-libraries/genlinks
new file mode 100755
index 0000000000000000000000000000000000000000..6931dbcfb79d3c5eb957ae0e0e3f755d68aa20ca
--- /dev/null
+++ b/ni-libraries/genlinks
@@ -0,0 +1,11 @@
+#!/bin/bash
+
+# this file should generate symlinks (POSIX, TODO) or LD scripts (POSIX or windows) to enable standard version linking
+
+for lib in lib*.so.*; do
+	libout="${lib%.*}"
+	rm -rf $libout
+	echo "OUTPUT_FORMAT(elf32-littlearm)" > $libout
+	echo "GROUP ( $lib )" >> $libout
+	echo "Generated LD link $libout -> $lib"
+done
diff --git a/ni-libraries/libFRC_FPGA_ChipObject.so b/ni-libraries/libFRC_FPGA_ChipObject.so
new file mode 100644
index 0000000000000000000000000000000000000000..694ddf31da4113fe7721613cbd538c11ac209196
--- /dev/null
+++ b/ni-libraries/libFRC_FPGA_ChipObject.so
@@ -0,0 +1,2 @@
+OUTPUT_FORMAT(elf32-littlearm)
+GROUP ( libFRC_FPGA_ChipObject.so.1 )
diff --git a/ni-libraries/libFRC_NetworkCommunication.so b/ni-libraries/libFRC_NetworkCommunication.so
new file mode 100644
index 0000000000000000000000000000000000000000..a24218eec1f89db69d43219b43e31021ff01e987
--- /dev/null
+++ b/ni-libraries/libFRC_NetworkCommunication.so
@@ -0,0 +1,2 @@
+OUTPUT_FORMAT(elf32-littlearm)
+GROUP ( libFRC_NetworkCommunication.so.1 )
diff --git a/ni-libraries/libNiFpga.so b/ni-libraries/libNiFpga.so
new file mode 100644
index 0000000000000000000000000000000000000000..9f26024c3fcd99bc0ede439e3ff3a47c0808a3a8
--- /dev/null
+++ b/ni-libraries/libNiFpga.so
@@ -0,0 +1,2 @@
+OUTPUT_FORMAT(elf32-littlearm)
+GROUP ( libNiFpga.so.13 )
diff --git a/ni-libraries/libNiFpga.so.13 b/ni-libraries/libNiFpga.so.13
old mode 100644
new mode 100755
diff --git a/ni-libraries/libNiFpgaLv.so b/ni-libraries/libNiFpgaLv.so
new file mode 100644
index 0000000000000000000000000000000000000000..5b915e57a8b75d227b22de704fdee0cb5a40d862
--- /dev/null
+++ b/ni-libraries/libNiFpgaLv.so
@@ -0,0 +1,2 @@
+OUTPUT_FORMAT(elf32-littlearm)
+GROUP ( libNiFpgaLv.so.13 )
diff --git a/ni-libraries/libNiFpgaLv.so.13 b/ni-libraries/libNiFpgaLv.so.13
old mode 100644
new mode 100755
diff --git a/ni-libraries/libNiRioSrv.so b/ni-libraries/libNiRioSrv.so
new file mode 100644
index 0000000000000000000000000000000000000000..99d3772eb58ce25fbf022d16b0ce5a0966fdf07e
--- /dev/null
+++ b/ni-libraries/libNiRioSrv.so
@@ -0,0 +1,2 @@
+OUTPUT_FORMAT(elf32-littlearm)
+GROUP ( libNiRioSrv.so.13 )
diff --git a/ni-libraries/libNiRioSrv.so.13 b/ni-libraries/libNiRioSrv.so.13
old mode 100644
new mode 100755
diff --git a/ni-libraries/libRoboRIO_FRC_ChipObject.so b/ni-libraries/libRoboRIO_FRC_ChipObject.so
new file mode 100644
index 0000000000000000000000000000000000000000..b44dc03baf3814c5cfdfffa857bbb40ed330c31a
--- /dev/null
+++ b/ni-libraries/libRoboRIO_FRC_ChipObject.so
@@ -0,0 +1,2 @@
+OUTPUT_FORMAT(elf32-littlearm)
+GROUP ( libRoboRIO_FRC_ChipObject.so.1 )
diff --git a/ni-libraries/libi2c.so b/ni-libraries/libi2c.so
new file mode 100644
index 0000000000000000000000000000000000000000..673ca375fe431e9f97d7698bc5a1f9c34ee3af1f
--- /dev/null
+++ b/ni-libraries/libi2c.so
@@ -0,0 +1,2 @@
+OUTPUT_FORMAT(elf32-littlearm)
+GROUP ( libi2c.so.1 )
diff --git a/ni-libraries/libni_emb.so b/ni-libraries/libni_emb.so
new file mode 100644
index 0000000000000000000000000000000000000000..9c868d372ea0509b37bb3cf6c7392927437a6229
--- /dev/null
+++ b/ni-libraries/libni_emb.so
@@ -0,0 +1,2 @@
+OUTPUT_FORMAT(elf32-littlearm)
+GROUP ( libni_emb.so.6 )
diff --git a/ni-libraries/libni_emb.so.6 b/ni-libraries/libni_emb.so.6
old mode 100644
new mode 100755
diff --git a/ni-libraries/libni_rtlog.so b/ni-libraries/libni_rtlog.so
new file mode 100644
index 0000000000000000000000000000000000000000..30456810f777f14e327a168bcfd9af87b9aeac1c
--- /dev/null
+++ b/ni-libraries/libni_rtlog.so
@@ -0,0 +1,2 @@
+OUTPUT_FORMAT(elf32-littlearm)
+GROUP ( libni_rtlog.so.2 )
diff --git a/ni-libraries/libni_rtlog.so.2 b/ni-libraries/libni_rtlog.so.2
old mode 100644
new mode 100755
diff --git a/ni-libraries/libnirio_emb_can.so b/ni-libraries/libnirio_emb_can.so
new file mode 100644
index 0000000000000000000000000000000000000000..eeb81339f510f36af387c9f3fc2c4c811a40e8f1
--- /dev/null
+++ b/ni-libraries/libnirio_emb_can.so
@@ -0,0 +1,2 @@
+OUTPUT_FORMAT(elf32-littlearm)
+GROUP ( libnirio_emb_can.so.14 )
diff --git a/ni-libraries/libnirio_emb_can.so.14 b/ni-libraries/libnirio_emb_can.so.14
old mode 100644
new mode 100755
diff --git a/ni-libraries/libspi.so b/ni-libraries/libspi.so
new file mode 100644
index 0000000000000000000000000000000000000000..e77606f67684ce3037505e29190254554370288f
--- /dev/null
+++ b/ni-libraries/libspi.so
@@ -0,0 +1,2 @@
+OUTPUT_FORMAT(elf32-littlearm)
+GROUP ( libspi.so.1 )
diff --git a/ni-libraries/libvisa.so b/ni-libraries/libvisa.so
old mode 100644
new mode 100755
diff --git a/wpilibc/CMakeLists.txt b/wpilibc/CMakeLists.txt
index 6e9edcdef232e6f412e7d0cadc42587d85e2c8bd..783da782b2c66dec2459aeac7bb14ff143dec259 100644
--- a/wpilibc/CMakeLists.txt
+++ b/wpilibc/CMakeLists.txt
@@ -3,9 +3,9 @@ project(WPILib)
 
 file(GLOB_RECURSE SRC_FILES lib/*.cpp)
 include_directories(include/ ${HAL_API_INCLUDES} ${NWT_API_INCLUDES})
-add_library(WPILibAthena SHARED ${SRC_FILES})
+add_library(WPILibAthena STATIC ${SRC_FILES})
 target_link_libraries(WPILibAthena HALAthena NetworkTables ${NI_LIBS})
-INSTALL(TARGETS WPILibAthena LIBRARY DESTINATION lib COMPONENT lib)
+INSTALL(TARGETS WPILibAthena ARCHIVE DESTINATION lib COMPONENT lib)
 INSTALL(DIRECTORY include DESTINATION ${CMAKE_INSTALL_PREFIX} COMPONENT headers)
 # lib/ c m gcc_s ld-linux
 # usr/lib stdc++
diff --git a/wpilibc/include/ADXL345_I2C.h b/wpilibc/include/ADXL345_I2C.h
index 8110ee28fa07f8d46ca5a33101665ccbd56c93f4..b9f588436b4b96fe709787a462c8fcf7640c37cc 100644
--- a/wpilibc/include/ADXL345_I2C.h
+++ b/wpilibc/include/ADXL345_I2C.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __ADXL345_I2C_h__
-#define __ADXL345_I2C_h__
+#pragma once
 
 #include "SensorBase.h"
 
@@ -48,6 +46,3 @@ public:
 protected:
 	I2C* m_i2c;
 };
-
-#endif
-
diff --git a/wpilibc/include/ADXL345_SPI.h b/wpilibc/include/ADXL345_SPI.h
index 3e8a308f7511a80f535307190f3f953bf8683769..f48811432fa95737b07d6bb2dd5c94c128cc44d2 100644
--- a/wpilibc/include/ADXL345_SPI.h
+++ b/wpilibc/include/ADXL345_SPI.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __ADXL345_SPI_h__
-#define __ADXL345_SPI_h__
+#pragma once
 
 #include "SensorBase.h"
 
@@ -62,6 +60,3 @@ protected:
 	DigitalOutput *m_cs;
 	SPI* m_spi;
 };
-
-#endif
-
diff --git a/wpilibc/include/Accelerometer.h b/wpilibc/include/Accelerometer.h
index 10605a28fa6aeb79127b3d7058f0f1f8ba485683..516bdd03f50bb80e8f3dcb6da341e324e5385061 100644
--- a/wpilibc/include/Accelerometer.h
+++ b/wpilibc/include/Accelerometer.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef ACCELEROMETER_H_
-#define ACCELEROMETER_H_
+#pragma once
 
 #include "AnalogChannel.h"
 #include "SensorBase.h"
@@ -47,5 +45,3 @@ private:
 	
 	ITable *m_table;
 };
-
-#endif
diff --git a/wpilibc/include/AnalogChannel.h b/wpilibc/include/AnalogChannel.h
index 5b4a94c4f0b4674061c7a079e2e05c8897852c7e..7d6d9621a3c9a5c709305be0cbffd069addb8309 100644
--- a/wpilibc/include/AnalogChannel.h
+++ b/wpilibc/include/AnalogChannel.h
@@ -3,11 +3,9 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef ANALOG_CHANNEL_H_
-#define ANALOG_CHANNEL_H_
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "SensorBase.h"
 #include "PIDSource.h"
 #include "LiveWindow/LiveWindowSendable.h"
@@ -65,9 +63,9 @@ public:
 	int64_t GetAccumulatorValue();
 	uint32_t GetAccumulatorCount();
 	void GetAccumulatorOutput(int64_t *value, uint32_t *count);
-	
+
 	double PIDGet();
-	
+
 	void UpdateTable();
 	void StartLiveWindowMode();
 	void StopLiveWindowMode();
@@ -80,8 +78,6 @@ private:
 	uint32_t m_channel, m_module;
 	void* m_port;
 	int64_t m_accumulatorOffset;
-	
+
 	ITable *m_table;
 };
-
-#endif
diff --git a/wpilibc/include/AnalogModule.h b/wpilibc/include/AnalogModule.h
index 7f9140c475177382b6e8b6f15a311e72825b77ba..20d4382538bead570615b9a23c10bf22b233f7b9 100644
--- a/wpilibc/include/AnalogModule.h
+++ b/wpilibc/include/AnalogModule.h
@@ -3,11 +3,9 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef ANALOG_MODULE_H_
-#define ANALOG_MODULE_H_
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "Module.h"
 
 /**
@@ -17,9 +15,9 @@
  * The accumulator is attached to the output of the oversample and average engine so that the center
  * value can be specified in higher resolution resulting in less error.
  */
-class AnalogModule: public Module
-{ 
-    friend class Module;
+class AnalogModule : public Module
+{
+	friend class Module;
 
 public:
 	static const long kTimebase = 40000000; ///< 40 MHz clock
@@ -52,5 +50,3 @@ private:
 	uint8_t m_moduleNumber;
 	void* m_ports[kAnalogChannels];
 };
-
-#endif
diff --git a/wpilibc/include/AnalogTrigger.h b/wpilibc/include/AnalogTrigger.h
index 37cf7190e2065c2151963f2599792a4adadc18d8..31d363fdb042cdbea55788c7f32df30e36bf02a9 100644
--- a/wpilibc/include/AnalogTrigger.h
+++ b/wpilibc/include/AnalogTrigger.h
@@ -3,18 +3,16 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef ANALOG_TRIGGER_H_
-#define ANALOG_TRIGGER_H_
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "AnalogTriggerOutput.h"
 #include "SensorBase.h"
 
 class AnalogChannel;
 class AnalogModule;
 
-class AnalogTrigger: public SensorBase
+class AnalogTrigger : public SensorBase
 {
 	friend class AnalogTriggerOutput;
 public:
@@ -38,6 +36,3 @@ private:
 	uint8_t m_index;
 	void* m_trigger;
 };
-
-#endif
-
diff --git a/wpilibc/include/AnalogTriggerOutput.h b/wpilibc/include/AnalogTriggerOutput.h
index d0ad527263875a23d22c7ebc7457d7da5da9eea4..b693e3d3aaaa8ff9d8e40448e41d3f0f685e9b92 100644
--- a/wpilibc/include/AnalogTriggerOutput.h
+++ b/wpilibc/include/AnalogTriggerOutput.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef ANALOG_TRIGGER_OUTPUT_H_
-#define ANALOG_TRIGGER_OUTPUT_H_
+#pragma once
 
 #include "DigitalSource.h"
 
@@ -38,7 +36,7 @@ class AnalogTrigger;
  * is not sharp / clean enough.  Using the averaging engine may help with this, but rotational speeds of
  * the sensor will then be limited.
  */
-class AnalogTriggerOutput: public DigitalSource
+class AnalogTriggerOutput : public DigitalSource
 {
 	friend class AnalogTrigger;
 public:
@@ -50,7 +48,7 @@ public:
 	virtual uint32_t GetChannelForRouting();
 	virtual uint32_t GetModuleForRouting();
 	virtual bool GetAnalogTriggerForRouting();
-	virtual void RequestInterrupts(InterruptHandlerFunction handler, void *param=NULL); ///< Asynchronus handler version.
+	virtual void RequestInterrupts(InterruptHandlerFunction handler, void *param = NULL); ///< Asynchronus handler version.
 	virtual void RequestInterrupts();		///< Synchronus Wait version.
 protected:
 	AnalogTriggerOutput(AnalogTrigger *trigger, AnalogTriggerType outputType);
@@ -59,6 +57,3 @@ private:
 	AnalogTrigger *m_trigger;
 	AnalogTriggerType m_outputType;
 };
-
-
-#endif
diff --git a/wpilibc/include/Base.h b/wpilibc/include/Base.h
index eb11f96b8e387fc56fed9a0a62c9861e88e9ddef..8e2350473d3c0e383d9ed14294f66e0e66e2aeea 100644
--- a/wpilibc/include/Base.h
+++ b/wpilibc/include/Base.h
@@ -3,13 +3,12 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef _BASE_H
-#define _BASE_H
+#pragma once
 
 // If don't have C++11, define constexpr as const for WindRiver
 #if __cplusplus < 201103L
 #define constexpr const
+#define nullptr NULL
 #endif
 
 // A macro to disallow the copy constructor and operator= functions
@@ -17,5 +16,3 @@
 #define DISALLOW_COPY_AND_ASSIGN(TypeName) \
   TypeName(const TypeName&);               \
   void operator=(const TypeName&)
-
-#endif
diff --git a/wpilibc/include/CANJaguar.h b/wpilibc/include/CANJaguar.h
index 6b61060a06129638cbb4b0aecdad1041ffcd66e7..d1ce734574d21b3c05d208b49019598ec050b258 100644
--- a/wpilibc/include/CANJaguar.h
+++ b/wpilibc/include/CANJaguar.h
@@ -3,18 +3,15 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-
-#ifndef CANJAGUAR_H
-#define CANJAGUAR_H
+#pragma once
 
 #include "ErrorBase.h"
 #include "MotorSafety.h"
 #include "MotorSafetyHelper.h"
 #include "PIDOutput.h"
 #include "SpeedController.h"
-#include "HAL/Semaphore.h"
-#include "HAL/HAL.h"
+#include "HAL/Semaphore.hpp"
+#include "HAL/HAL.hpp"
 #include "LiveWindow/LiveWindowSendable.h"
 #include "tables/ITable.h"
 
@@ -135,5 +132,3 @@ protected:
 private:
 	void InitCANJaguar();
 };
-#endif
-
diff --git a/wpilibc/include/Commands/Scheduler.h b/wpilibc/include/Commands/Scheduler.h
index c7913cbc73f84b46aa10564970780507ae31d9a7..0fada5fe5885fa8a50a00f7c4fb22ac07023aee3 100644
--- a/wpilibc/include/Commands/Scheduler.h
+++ b/wpilibc/include/Commands/Scheduler.h
@@ -14,7 +14,7 @@
 #include "networktables2/type/NumberArray.h"
 #include "networktables2/type/StringArray.h"
 #include "SmartDashboard/SmartDashboard.h"
-#include "HAL/Semaphore.h"
+#include "HAL/Semaphore.hpp"
 #include <list>
 #include <map>
 #include <set>
diff --git a/wpilibc/include/Compressor.h b/wpilibc/include/Compressor.h
index cd68af4ee436332e6509aff6f6daf7ebdc2d8643..c7d781e6033ed2abb4309f6eb1d6b907555a65ad 100644
--- a/wpilibc/include/Compressor.h
+++ b/wpilibc/include/Compressor.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef COMPRESSOR_H_
-#define COMPRESSOR_H_
+#pragma once
 
 #define COMPRESSOR_PRIORITY 90
 
@@ -22,8 +20,8 @@ class DigitalInput;
  * relay for a FIRST robot pneumatics system. The Compressor object starts a task which runs in the
  * backround and periodically polls the pressure sensor and operates the relay that controls the
  * compressor.
- */ 
-class Compressor: public SensorBase, public LiveWindowSendable
+ */
+class Compressor : public SensorBase, public LiveWindowSendable
 {
 public:
 	Compressor(uint32_t pressureSwitchChannel, uint32_t compressorRelayChannel);
@@ -36,7 +34,7 @@ public:
 	bool Enabled();
 	uint32_t GetPressureSwitchValue();
 	void SetRelayValue(Relay::Value relayValue);
-	
+
 	void UpdateTable();
 	void StartLiveWindowMode();
 	void StopLiveWindowMode();
@@ -46,15 +44,12 @@ public:
 
 private:
 	void InitCompressor(uint8_t pressureSwitchModuleNumber, uint32_t pressureSwitchChannel,
-				uint8_t compresssorRelayModuleNumber, uint32_t compressorRelayChannel);
+			uint8_t compresssorRelayModuleNumber, uint32_t compressorRelayChannel);
 
 	DigitalInput *m_pressureSwitch;
 	Relay *m_relay;
 	bool m_enabled;
 	Task m_task;
-	
+
 	ITable *m_table;
 };
-
-#endif
-
diff --git a/wpilibc/include/Controller.h b/wpilibc/include/Controller.h
index e23bcfd3546f746175f43fb53db0834e2b1e96b7..a08c0dbc7982edb8f9370a782b2688d04d9316e6 100644
--- a/wpilibc/include/Controller.h
+++ b/wpilibc/include/Controller.h
@@ -3,11 +3,9 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef CONTROLLER_H
-#define CONTROLLER_H
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
 /**
  * Interface for Controllers
@@ -30,6 +28,3 @@ public:
 	 */
 	virtual void Disable() = 0;
 };
-
-#endif
-
diff --git a/wpilibc/include/Counter.h b/wpilibc/include/Counter.h
index ca0ddf2acb8d06edf0e7032beac2310a2b1f1ad1..dd6685dc893ca8be287e5775612a3ac8e5bc20a8 100644
--- a/wpilibc/include/Counter.h
+++ b/wpilibc/include/Counter.h
@@ -3,11 +3,9 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef CPPCOUNTER_H_
-#define CPPCOUNTER_H_
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "AnalogTriggerOutput.h"
 #include "CounterBase.h"
 #include "SensorBase.h"
@@ -22,7 +20,6 @@
 class Counter : public SensorBase, public CounterBase, public LiveWindowSendable
 {
 public:
-	/* typedef enum {kTwoPulse=0, kSemiperiod=1, kPulseLength=2, kExternalDirection=3} Mode; */
 
 	Counter();
 	explicit Counter(uint32_t channel);
@@ -31,7 +28,8 @@ public:
 	explicit Counter(DigitalSource &source);
 	explicit Counter(AnalogTrigger *trigger);
 	explicit Counter(AnalogTrigger &trigger);
-	Counter(EncodingType encodingType, DigitalSource *upSource, DigitalSource *downSource, bool inverted);
+	Counter(EncodingType encodingType, DigitalSource *upSource, DigitalSource *downSource,
+			bool inverted);
 	virtual ~Counter();
 
 	void SetUpSource(uint32_t channel);
@@ -71,8 +69,10 @@ public:
 	bool GetDirection();
 	void SetSamplesToAverage(int samplesToAverage);
 	int GetSamplesToAverage();
-	uint32_t GetIndex() {return m_index;}
-	
+	uint32_t GetIndex()
+	{
+		return m_index;
+	}
 	
 	void UpdateTable();
 	void StartLiveWindowMode();
@@ -93,5 +93,3 @@ private:
 	
 	ITable *m_table;
 };
-
-#endif
diff --git a/wpilibc/include/CounterBase.h b/wpilibc/include/CounterBase.h
index 4354e42f20277cde3991c153d2db5756ce45296e..a5fbae318e4b2a67e8a2e43644f01e43af5d94d7 100644
--- a/wpilibc/include/CounterBase.h
+++ b/wpilibc/include/CounterBase.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef CPPCOUNTER_BASE_H_
-#define CPPCOUNTER_BASE_H_
+#pragma once
 
 /**
  * Interface for counting the number of ticks on a digital input channel.
@@ -15,7 +13,12 @@
 class CounterBase
 {
 public:
-	typedef enum {k1X, k2X, k4X} EncodingType;
+	enum EncodingType
+	{
+		k1X,
+		k2X,
+		k4X
+	};
 
 	virtual ~CounterBase() {}
 	virtual void Start() = 0;
@@ -27,5 +30,3 @@ public:
 	virtual bool GetStopped() = 0;
 	virtual bool GetDirection() = 0;
 };
-
-#endif
diff --git a/wpilibc/include/Dashboard.h b/wpilibc/include/Dashboard.h
index e893c8057422f08a347269453253851bc3c46206..504a9b5e9a09d44ee75288363d9a2aea61622c07 100644
--- a/wpilibc/include/Dashboard.h
+++ b/wpilibc/include/Dashboard.h
@@ -3,16 +3,13 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __DASHBOARD_H__
-#define __DASHBOARD_H__
+#pragma once
 
 #include "DashboardBase.h"
-//#include "NetworkCommunication/FRCComm.h"
 #include <stack>
 #include <vector>
-#include "HAL/HAL.h"
-#include "HAL/Semaphore.h"
+#include "HAL/HAL.hpp"
+#include "HAL/Semaphore.hpp"
 
 /**
  * Pack data into the "user data" field that gets sent to the dashboard laptop
@@ -71,6 +68,3 @@ private:
 	MUTEX_ID m_printSemaphore;
 	MUTEX_ID m_statusDataSemaphore;
 };
-
-#endif
-
diff --git a/wpilibc/include/DashboardBase.h b/wpilibc/include/DashboardBase.h
index d81ffbf418786587292e607830748e0d127dda7b..2efe38d2fba46adff6369950f57a9ed4f9770b07 100644
--- a/wpilibc/include/DashboardBase.h
+++ b/wpilibc/include/DashboardBase.h
@@ -3,22 +3,21 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef __DASHBOARDBASE_H__
-#define __DASHBOARDBASE_H__
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "ErrorBase.h"
 
-class DashboardBase : public ErrorBase {
+class DashboardBase : public ErrorBase
+{
 public:
 	virtual void GetStatusBuffer(char** userStatusData, int32_t* userStatusDataSize) = 0;
 	virtual void Flush() = 0;
 	virtual ~DashboardBase() {}
 protected:
-	DashboardBase() {}
+	DashboardBase()
+	{
+	}
 private:
 	DISALLOW_COPY_AND_ASSIGN(DashboardBase);
 };
-
-#endif
diff --git a/wpilibc/include/DigitalInput.h b/wpilibc/include/DigitalInput.h
index 8a7d8c6cb8353536700ac782d714de62b1a6b659..9d8cc547ec25a08af45c5b4687fa9fe20b06d47d 100644
--- a/wpilibc/include/DigitalInput.h
+++ b/wpilibc/include/DigitalInput.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef DIGITAL_INPUT_H_
-#define DIGITAL_INPUT_H_
+#pragma once
 
 class DigitalModule;
 
@@ -19,7 +17,8 @@ class DigitalModule;
  * allocate digital inputs and outputs as required. This class is only for devices like switches
  * etc. that aren't implemented anywhere else.
  */
-class DigitalInput : public DigitalSource, public LiveWindowSendable {
+class DigitalInput : public DigitalSource, public LiveWindowSendable
+{
 public:
 	explicit DigitalInput(uint32_t channel);
 	DigitalInput(uint8_t moduleNumber, uint32_t channel);
@@ -31,9 +30,9 @@ public:
 	virtual uint32_t GetChannelForRouting();
 	virtual uint32_t GetModuleForRouting();
 	virtual bool GetAnalogTriggerForRouting();
-	
+
 	// Interruptable Interface
-	virtual void RequestInterrupts(InterruptHandlerFunction handler, void *param=NULL); ///< Asynchronus handler version.
+	virtual void RequestInterrupts(InterruptHandlerFunction handler, void *param = NULL); ///< Asynchronus handler version.
 	virtual void RequestInterrupts();		///< Synchronus Wait version.
 	void SetUpSourceEdge(bool risingEdge, bool fallingEdge);
 
@@ -49,9 +48,6 @@ private:
 	uint32_t m_channel;
 	DigitalModule *m_module;
 	bool m_lastValue;
-	
+
 	ITable *m_table;
 };
-
-#endif
-
diff --git a/wpilibc/include/DigitalModule.h b/wpilibc/include/DigitalModule.h
index b6a9206818c1accb25be315505548feb44e0eab8..f280fc43bcfc74bb35f2df3b014b30cbc3ba79ae 100644
--- a/wpilibc/include/DigitalModule.h
+++ b/wpilibc/include/DigitalModule.h
@@ -3,18 +3,16 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef DIGITAL_MODULE_H_
-#define DIGITAL_MODULE_H_
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "Module.h"
 
 class I2C;
 
 const uint32_t kExpectedLoopTiming = 260;
 
-class DigitalModule: public Module
+class DigitalModule : public Module
 {
 	friend class I2C;
 	friend class Module;
@@ -53,8 +51,14 @@ public:
 	I2C* GetI2C(uint32_t address);
 
 	static DigitalModule* GetInstance(uint8_t moduleNumber);
-	static uint8_t RemapDigitalChannel(uint32_t channel) { return 15 - channel; }; // TODO: Need channel validation
-	static uint8_t UnmapDigitalChannel(uint32_t channel) { return 15 - channel; }; // TODO: Need channel validation
+	static uint8_t RemapDigitalChannel(uint32_t channel)
+	{
+		return 15 - channel;
+	} // TODO: Need channel validation
+	static uint8_t UnmapDigitalChannel(uint32_t channel)
+	{
+		return 15 - channel;
+	} // TODO: Need channel validation
 
 private:
 	uint8_t m_module;
@@ -62,6 +66,3 @@ private:
 	void* m_relay_ports[kRelayChannels];
 	void* m_pwm_ports[kPwmChannels];
 };
-
-#endif
-
diff --git a/wpilibc/include/DigitalOutput.h b/wpilibc/include/DigitalOutput.h
index 541f71f792537b4f5926b7e93e5da4250d5d3073..636fd559a3cdf74b2552f1833c178f84a9e0f84b 100644
--- a/wpilibc/include/DigitalOutput.h
+++ b/wpilibc/include/DigitalOutput.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef DIGITAL_OUTPUT_H_
-#define DIGITAL_OUTPUT_H_
+#pragma once
 
 #include "DigitalSource.h"
 #include "LiveWindow/LiveWindowSendable.h"
@@ -41,7 +39,7 @@ public:
 	virtual void RequestInterrupts();
 
 	void SetUpSourceEdge(bool risingEdge, bool fallingEdge);
-	
+
 	virtual void ValueChanged(ITable* source, const std::string& key, EntryValue value, bool isNew);
 	void UpdateTable();
 	void StartLiveWindowMode();
@@ -56,8 +54,6 @@ private:
 	uint32_t m_channel;
 	uint32_t m_pwmGenerator;
 	DigitalModule *m_module;
-	
+
 	ITable *m_table;
 };
-
-#endif
diff --git a/wpilibc/include/DigitalSource.h b/wpilibc/include/DigitalSource.h
index f8250a01e21bbbce36b532921ed65648e6e20b64..ca139a44eacf22614a66c31d5b2b0b7e7f713d7b 100644
--- a/wpilibc/include/DigitalSource.h
+++ b/wpilibc/include/DigitalSource.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef DIGITAL_SOURCE_H
-#define DIGITAL_SOURCE_H
+#pragma once
 
 #include "InterruptableSensorBase.h"
 
@@ -16,7 +14,7 @@
  * constructed and freed when finished for the source. The source can either be a digital input or analog trigger
  * but not both.
  */
-class DigitalSource: public InterruptableSensorBase
+class DigitalSource : public InterruptableSensorBase
 {
 public:
 	virtual ~DigitalSource();
@@ -26,6 +24,3 @@ public:
 	virtual void RequestInterrupts(InterruptHandlerFunction handler, void *param) = 0;
 	virtual void RequestInterrupts() = 0;
 };
-
-#endif
-
diff --git a/wpilibc/include/DoubleSolenoid.h b/wpilibc/include/DoubleSolenoid.h
index 91315d7e5e39fa591dceb10efa695f3e0a64797b..3147028302b7d9f952e9bec0d05605c8c54c3bdf 100644
--- a/wpilibc/include/DoubleSolenoid.h
+++ b/wpilibc/include/DoubleSolenoid.h
@@ -3,15 +3,12 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef DOUBLE_SOLENOID_H_
-#define DOUBLE_SOLENOID_H_
+#pragma once
 
 #include "SolenoidBase.h"
 #include "LiveWindow/LiveWindowSendable.h"
 #include "tables/ITableListener.h"
 
-
 /**
  * DoubleSolenoid class for running 2 channels of high voltage Digital Output
  * (9472 module).
@@ -19,16 +16,22 @@
  * The DoubleSolenoid class is typically used for pneumatics solenoids that
  * have two positions controlled by two separate channels.
  */
-class DoubleSolenoid : public SolenoidBase, public LiveWindowSendable, public ITableListener {
+class DoubleSolenoid : public SolenoidBase, public LiveWindowSendable, public ITableListener
+{
 public:
-	typedef enum {kOff, kForward, kReverse} Value;
+	enum Value
+	{
+		kOff,
+		kForward,
+		kReverse
+	};
 
 	explicit DoubleSolenoid(uint32_t forwardChannel, uint32_t reverseChannel);
 	DoubleSolenoid(uint8_t moduleNumber, uint32_t forwardChannel, uint32_t reverseChannel);
 	virtual ~DoubleSolenoid();
 	virtual void Set(Value value);
 	virtual Value Get();
-	
+
 	void ValueChanged(ITable* source, const std::string& key, EntryValue value, bool isNew);
 	void UpdateTable();
 	void StartLiveWindowMode();
@@ -47,5 +50,3 @@ private:
 	
 	ITable *m_table;
 };
-
-#endif
diff --git a/wpilibc/include/DriverStation.h b/wpilibc/include/DriverStation.h
index d716c634bab0a00cd0c758b07f109d42c4bef052..0a0fe836e2f1ff0e6b288463aa3381ed8bf6a744 100644
--- a/wpilibc/include/DriverStation.h
+++ b/wpilibc/include/DriverStation.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __DRIVER_STATION_H__
-#define __DRIVER_STATION_H__
+#pragma once
 
 #include "Dashboard.h"
 #include "DriverStationEnhancedIO.h"
@@ -21,7 +19,12 @@ class AnalogChannel;
 class DriverStation : public SensorBase
 {
 public:
-	enum Alliance {kRed, kBlue, kInvalid};
+	enum Alliance
+	{
+		kRed,
+		kBlue,
+		kInvalid
+	};
 
 	virtual ~DriverStation();
 	static DriverStation *GetInstance();
@@ -41,9 +44,9 @@ public:
 
 	bool IsEnabled();
 	bool IsDisabled();
-    bool IsAutonomous();
+	bool IsAutonomous();
 	bool IsOperatorControl();
-    bool IsTest();
+	bool IsTest();
 	bool IsNewControlData();
 	bool IsFMSAttached();
 
@@ -59,40 +62,79 @@ public:
 	// a call to SetHigh|LowPriorityDashboardPackerToUse() changes which packer
 	// is in use. You can restore the default high priority packer by calling
 	// SetHighPriorityDashboardPackerToUse(&GetHighPriorityDashboardPacker()).
-	Dashboard& GetHighPriorityDashboardPacker() { return m_dashboardHigh; }
-	Dashboard& GetLowPriorityDashboardPacker() { return m_dashboardLow; }
+	Dashboard& GetHighPriorityDashboardPacker()
+	{
+		return m_dashboardHigh;
+	}
+	Dashboard& GetLowPriorityDashboardPacker()
+	{
+		return m_dashboardLow;
+	}
 
 	// Get/set the dashboard packers to use. This can sideline or restore the
 	// default packers. Initializing SmartDashboard changes the high priority
 	// packer in use so beware that the default packer will then be idle. These
 	// methods support any kind of DashboardBase, e.g. a Dashboard or a
 	// SmartDashboard.
-	DashboardBase* GetHighPriorityDashboardPackerInUse() { return m_dashboardInUseHigh; }
-	DashboardBase* GetLowPriorityDashboardPackerInUse() { return m_dashboardInUseLow; }
-	void SetHighPriorityDashboardPackerToUse(DashboardBase* db) { m_dashboardInUseHigh = db; }
-	void SetLowPriorityDashboardPackerToUse(DashboardBase* db) { m_dashboardInUseLow = db; }
-
-	DriverStationEnhancedIO& GetEnhancedIO() { return m_enhancedIO; }
-
-	void IncrementUpdateNumber() { m_updateNumber++; }
-	MUTEX_ID GetUserStatusDataSem() { return m_statusDataSemaphore; }
+	DashboardBase* GetHighPriorityDashboardPackerInUse()
+	{
+		return m_dashboardInUseHigh;
+	}
+	DashboardBase* GetLowPriorityDashboardPackerInUse()
+	{
+		return m_dashboardInUseLow;
+	}
+	void SetHighPriorityDashboardPackerToUse(DashboardBase* db)
+	{
+		m_dashboardInUseHigh = db;
+	}
+	void SetLowPriorityDashboardPackerToUse(DashboardBase* db)
+	{
+		m_dashboardInUseLow = db;
+	}
+
+	DriverStationEnhancedIO& GetEnhancedIO()
+	{
+		return m_enhancedIO;
+	}
+
+	void IncrementUpdateNumber()
+	{
+		m_updateNumber++;
+	}
+	MUTEX_ID GetUserStatusDataSem()
+	{
+		return m_statusDataSemaphore;
+	}
 
 	/** Only to be used to tell the Driver Station what code you claim to be executing
 	 *   for diagnostic purposes only
 	 * @param entering If true, starting disabled code; if false, leaving disabled code */
-	void InDisabled(bool entering) {m_userInDisabled=entering;}
+	void InDisabled(bool entering)
+	{
+		m_userInDisabled = entering;
+	}
 	/** Only to be used to tell the Driver Station what code you claim to be executing
 	 *   for diagnostic purposes only
 	 * @param entering If true, starting autonomous code; if false, leaving autonomous code */
-	void InAutonomous(bool entering) {m_userInAutonomous=entering;}
-    /** Only to be used to tell the Driver Station what code you claim to be executing
-     *   for diagnostic purposes only
-     * @param entering If true, starting teleop code; if false, leaving teleop code */
-    void InOperatorControl(bool entering) {m_userInTeleop=entering;}
-    /** Only to be used to tell the Driver Station what code you claim to be executing
-     *   for diagnostic purposes only
-     * @param entering If true, starting test code; if false, leaving test code */
-    void InTest(bool entering) {m_userInTest=entering;}
+	void InAutonomous(bool entering)
+	{
+		m_userInAutonomous = entering;
+	}
+	/** Only to be used to tell the Driver Station what code you claim to be executing
+	 *   for diagnostic purposes only
+	 * @param entering If true, starting teleop code; if false, leaving teleop code */
+	void InOperatorControl(bool entering)
+	{
+		m_userInTeleop = entering;
+	}
+	/** Only to be used to tell the Driver Station what code you claim to be executing
+	 *   for diagnostic purposes only
+	 * @param entering If true, starting test code; if false, leaving test code */
+	void InTest(bool entering)
+	{
+		m_userInTest = entering;
+	}
 
 protected:
 	DriverStation();
@@ -125,9 +167,6 @@ private:
 	double m_approxMatchTimeOffset;
 	bool m_userInDisabled;
 	bool m_userInAutonomous;
-    bool m_userInTeleop;
-    bool m_userInTest;
+	bool m_userInTeleop;
+	bool m_userInTest;
 };
-
-#endif
-
diff --git a/wpilibc/include/DriverStationEnhancedIO.h b/wpilibc/include/DriverStationEnhancedIO.h
index a7222e7c9695c9ce39045a40d2c47942082e898f..3913de0a3b7b5debafaa9321a32da7bef5884096 100644
--- a/wpilibc/include/DriverStationEnhancedIO.h
+++ b/wpilibc/include/DriverStationEnhancedIO.h
@@ -3,17 +3,14 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __DRIVER_STATION_ENHANCED_IO_H__
-#define __DRIVER_STATION_ENHANCED_IO_H__
+#pragma once
 
 #include "ErrorBase.h"
-//#include "NetworkCommunication/FRCComm.h"
 #include <stack>
 #include <vector>
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
-#include "HAL/Semaphore.h"
+#include "HAL/Semaphore.hpp"
 
 #define kAnalogInputResolution ((double)((1<<14)-1))
 #define kAnalogInputReference 3.3
@@ -148,6 +145,3 @@ private:
 	bool m_requestEnhancedEnable;
 	int16_t m_encoderOffsets[2];
 };
-
-#endif
-
diff --git a/wpilibc/include/DriverStationLCD.h b/wpilibc/include/DriverStationLCD.h
index 1e663f3194ac4d3c7fa14d8beb9fdc01e72d0f58..a99215b20403a887a2b471c16ec9092691ecd0b3 100644
--- a/wpilibc/include/DriverStationLCD.h
+++ b/wpilibc/include/DriverStationLCD.h
@@ -3,12 +3,10 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __DRIVER_STATION_LCD_H__
-#define __DRIVER_STATION_LCD_H__
+#pragma once
 
 #include "SensorBase.h"
-#include "HAL/Semaphore.h"
+#include "HAL/Semaphore.hpp"
 #include <stdarg.h>
 
 /**
@@ -25,7 +23,16 @@ public:
 	static const uint16_t kFullDisplayTextCommand = 0x9FFF;
 	static const int32_t kLineLength = 21;
 	static const int32_t kNumLines = 6;
-	enum Line {kMain_Line6=0, kUser_Line1=0, kUser_Line2=1, kUser_Line3=2, kUser_Line4=3, kUser_Line5=4, kUser_Line6=5};
+	enum Line
+	{
+		kMain_Line6 = 0,
+		kUser_Line1 = 0,
+		kUser_Line2 = 1,
+		kUser_Line3 = 2,
+		kUser_Line4 = 3,
+		kUser_Line5 = 4,
+		kUser_Line6 = 5
+	};
 
 	virtual ~DriverStationLCD();
 	static DriverStationLCD *GetInstance();
@@ -35,7 +42,7 @@ public:
 	void VPrintf(Line line, int32_t startingColumn, const char *writeFmt, va_list args);
 	void PrintfLine(Line line, const char *writeFmt, ...);
 	void VPrintfLine(Line line, const char *writeFmt, va_list args);
- 
+
 	void Clear();
 
 protected:
@@ -44,11 +51,8 @@ protected:
 private:
 	static void InitTask(DriverStationLCD *ds);
 	static DriverStationLCD *m_instance;
-	DISALLOW_COPY_AND_ASSIGN(DriverStationLCD);
 
+	DISALLOW_COPY_AND_ASSIGN(DriverStationLCD);
 	char *m_textBuffer;
 	MUTEX_ID m_textBufferSemaphore;
 };
-
-#endif
-
diff --git a/wpilibc/include/Encoder.h b/wpilibc/include/Encoder.h
index 3ef00e8584a1129a619a70df5e1e17de3feafd2a..10caa706704ad0b22018e0d9030d2b326dde55a7 100644
--- a/wpilibc/include/Encoder.h
+++ b/wpilibc/include/Encoder.h
@@ -3,11 +3,9 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef QUAD_ENCODER_H_
-#define QUAD_ENCODER_H_
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "CounterBase.h"
 #include "SensorBase.h"
 #include "Counter.h"
@@ -25,14 +23,18 @@ class DigitalSource;
  * generates negative values. Quadrature encoders have two digital outputs, an A Channel and a B Channel
  * that are out of phase with each other to allow the FPGA to do direction sensing. 
  */
-class Encoder: public SensorBase, public CounterBase, public PIDSource, public LiveWindowSendable
+class Encoder : public SensorBase, public CounterBase, public PIDSource, public LiveWindowSendable
 {
 public:
 
-	Encoder(uint32_t aChannel, uint32_t bChannel, bool reverseDirection=false, EncodingType encodingType = k4X);
-	Encoder(uint8_t aModuleNumber, uint32_t aChannel, uint8_t bModuleNumber, uint32_t _bChannel, bool reverseDirection=false, EncodingType encodingType = k4X);
-	Encoder(DigitalSource *aSource, DigitalSource *bSource, bool reverseDirection=false, EncodingType encodingType = k4X);
-	Encoder(DigitalSource &aSource, DigitalSource &bSource, bool reverseDirection=false, EncodingType encodingType = k4X);
+	Encoder(uint32_t aChannel, uint32_t bChannel, bool reverseDirection = false,
+			EncodingType encodingType = k4X);
+	Encoder(uint8_t aModuleNumber, uint32_t aChannel, uint8_t bModuleNumber, uint32_t _bChannel,
+			bool reverseDirection = false, EncodingType encodingType = k4X);
+	Encoder(DigitalSource *aSource, DigitalSource *bSource, bool reverseDirection = false,
+			EncodingType encodingType = k4X);
+	Encoder(DigitalSource &aSource, DigitalSource &bSource, bool reverseDirection = false,
+			EncodingType encodingType = k4X);
 	virtual ~Encoder();
 
 	// CounterBase interface
@@ -54,7 +56,7 @@ public:
 	int GetSamplesToAverage();
 	void SetPIDSourceParameter(PIDSourceParameter pidSource);
 	double PIDGet();
-	
+
 	void UpdateTable();
 	void StartLiveWindowMode();
 	void StopLiveWindowMode();
@@ -74,10 +76,7 @@ private:
 	double m_distancePerPulse;		// distance of travel for each encoder tick
 	Counter *m_counter;				// Counter object for 1x and 2x encoding
 	EncodingType m_encodingType;	// Encoding type
-	PIDSourceParameter m_pidSource;// Encoder parameter that sources a PID controller
+	PIDSourceParameter m_pidSource;	// Encoder parameter that sources a PID controller
 	
 	ITable *m_table;
 };
-
-#endif
-
diff --git a/wpilibc/include/Error.h b/wpilibc/include/Error.h
index 3284d3aa7fe0b63d0aff0d79ad1c3331a7f765fa..8d4ce5fdaa37c06d94a6efe9ab0bfbcfde8ae4d6 100644
--- a/wpilibc/include/Error.h
+++ b/wpilibc/include/Error.h
@@ -3,13 +3,11 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef _ERROR_H
-#define _ERROR_H
+#pragma once
 
 #include "Base.h"
 #include <string>
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
 //  Forward declarations
 class ErrorBase;
@@ -33,10 +31,16 @@ public:
 	const ErrorBase* GetOriginatingObject() const;
 	double GetTime() const;
 	void Clear();
-	void Set(Code code, const char* contextMessage, const char* filename,
-		const char *function, uint32_t lineNumber, const ErrorBase* originatingObject);
-	static void EnableStackTrace(bool enable) { m_stackTraceEnabled=enable; }
-	static void EnableSuspendOnError(bool enable) { m_suspendOnErrorEnabled=enable; }
+	void Set(Code code, const char* contextMessage, const char* filename, const char *function,
+			uint32_t lineNumber, const ErrorBase* originatingObject);
+	static void EnableStackTrace(bool enable)
+	{
+		m_stackTraceEnabled = enable;
+	}
+	static void EnableSuspendOnError(bool enable)
+	{
+		m_suspendOnErrorEnabled = enable;
+	}
 
 private:
 	void Report();
@@ -50,9 +54,5 @@ private:
 	double m_timestamp;
 
 	static bool m_stackTraceEnabled;
-	static bool m_suspendOnErrorEnabled;
-	DISALLOW_COPY_AND_ASSIGN(Error);
+	static bool m_suspendOnErrorEnabled;DISALLOW_COPY_AND_ASSIGN(Error);
 };
-
-#endif
-
diff --git a/wpilibc/include/ErrorBase.h b/wpilibc/include/ErrorBase.h
index 6bdb9357923de640a7c2300418efebf718548e81..5eacb987d6138542f724184da67e2b4a39aa9aa0 100644
--- a/wpilibc/include/ErrorBase.h
+++ b/wpilibc/include/ErrorBase.h
@@ -3,14 +3,12 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef _ERROR_BASE_H
-#define _ERROR_BASE_H
+#pragma once
 
 #include "Base.h"
 #include "Error.h"
-#include "HAL/Semaphore.h"
-#include "HAL/HAL.h"
+#include "HAL/Semaphore.hpp"
+#include "HAL/HAL.hpp"
 
 #define wpi_setErrnoErrorWithContext(context)   (this->SetErrnoError((context), __FILE__, __FUNCTION__, __LINE__))
 #define wpi_setErrnoError()   (wpi_setErrnoErrorWithContext(""))
@@ -40,21 +38,21 @@ public:
 	virtual ~ErrorBase();
 	virtual Error& GetError();
 	virtual const Error& GetError() const;
-	virtual void SetErrnoError(const char *contextMessage,
-		const char* filename, const char* function, uint32_t lineNumber) const;
-	virtual void SetImaqError(int success, const char *contextMessage,
-        const char* filename, const char* function, uint32_t lineNumber) const;
-	virtual void SetError(Error::Code code, const char *contextMessage,
-		const char* filename, const char* function, uint32_t lineNumber) const;
+	virtual void SetErrnoError(const char *contextMessage, const char* filename,
+			const char* function, uint32_t lineNumber) const;
+	virtual void SetImaqError(int success, const char *contextMessage, const char* filename,
+			const char* function, uint32_t lineNumber) const;
+	virtual void SetError(Error::Code code, const char *contextMessage, const char* filename,
+			const char* function, uint32_t lineNumber) const;
 	virtual void SetWPIError(const char *errorMessage, const char *contextMessage,
-		const char* filename, const char* function, uint32_t lineNumber) const;
+			const char* filename, const char* function, uint32_t lineNumber) const;
 	virtual void CloneError(ErrorBase *rhs) const;
 	virtual void ClearError() const;
 	virtual bool StatusIsFatal() const;
-	static void SetGlobalError(Error::Code code, const char *contextMessage,
-		const char* filename, const char* function, uint32_t lineNumber);
+	static void SetGlobalError(Error::Code code, const char *contextMessage, const char* filename,
+			const char* function, uint32_t lineNumber);
 	static void SetGlobalWPIError(const char *errorMessage, const char *contextMessage,
-		const char* filename, const char* function, uint32_t lineNumber);
+			const char* filename, const char* function, uint32_t lineNumber);
 	static Error& GetGlobalError();
 protected:
 	mutable Error m_error;
@@ -65,5 +63,3 @@ protected:
 private:
 	DISALLOW_COPY_AND_ASSIGN(ErrorBase);
 };
-
-#endif
diff --git a/wpilibc/include/GearTooth.h b/wpilibc/include/GearTooth.h
index c2d6f49bc376da34245974026bcf7a5d2597f406..7ca82924cd4487566b0076a1bbd432d42811cf3f 100644
--- a/wpilibc/include/GearTooth.h
+++ b/wpilibc/include/GearTooth.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef GEAR_TOOTH_H_
-#define GEAR_TOOTH_H_
+#pragma once
 
 #include "Counter.h"
 
@@ -26,9 +24,6 @@ public:
 	GearTooth(DigitalSource &source, bool directionSensitive = false);
 	virtual ~GearTooth();
 	void EnableDirectionSensing(bool directionSensitive);
-	
+
 	virtual std::string GetSmartDashboardType();
 };
-
-
-#endif
diff --git a/wpilibc/include/GenericHID.h b/wpilibc/include/GenericHID.h
index fc85133480dcdebd2a0aa320acec6a8d445e615b..ac16ad9461b19a051778198ce3bc7569cec360fb 100644
--- a/wpilibc/include/GenericHID.h
+++ b/wpilibc/include/GenericHID.h
@@ -3,23 +3,24 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef GENERIC_HID_H
-#define GENERIC_HID_H
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
 /** GenericHID Interface
  */
 class GenericHID
 {
 public:
-	typedef enum {
+	enum JoystickHand
+	{
 		kLeftHand = 0,
 		kRightHand = 1
-	} JoystickHand;
+	};
 
-	virtual ~GenericHID() {}
+	virtual ~GenericHID()
+	{
+	}
 
 	virtual float GetX(JoystickHand hand = kRightHand) = 0;
 	virtual float GetY(JoystickHand hand = kRightHand) = 0;
@@ -33,6 +34,3 @@ public:
 	virtual bool GetBumper(JoystickHand hand = kRightHand) = 0;
 	virtual bool GetRawButton(uint32_t button) = 0;
 };
-
-#endif
-
diff --git a/wpilibc/include/Gyro.h b/wpilibc/include/Gyro.h
index fd5be72ba7da316c33c3d6110b0dcca9bbced85f..7bf665b0d8eef172c46e65e83f36ea67863347b9 100644
--- a/wpilibc/include/Gyro.h
+++ b/wpilibc/include/Gyro.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef GYRO_H_
-#define GYRO_H_
+#pragma once
 
 #include "SensorBase.h"
 #include "PIDSource.h"
@@ -46,7 +44,7 @@ public:
 
 	// PIDSource interface
 	double PIDGet();
-	
+
 	void UpdateTable();
 	void StartLiveWindowMode();
 	void StopLiveWindowMode();
@@ -63,7 +61,6 @@ private:
 	bool m_channelAllocated;
 	uint32_t m_center;
 	PIDSourceParameter m_pidSource;
-	
+
 	ITable *m_table;
 };
-#endif
diff --git a/wpilibc/include/HiTechnicColorSensor.h b/wpilibc/include/HiTechnicColorSensor.h
index e61fcb78f6b554a07cec4cd7783d826e1f142015..fc6d017dfe9eab77df7a3f221a3dc7f375c3b1af 100644
--- a/wpilibc/include/HiTechnicColorSensor.h
+++ b/wpilibc/include/HiTechnicColorSensor.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __HiTechnicColorSensor_h__
-#define __HiTechnicColorSensor_h__
+#pragma once
 
 #include "SensorBase.h"
 #include "LiveWindow/LiveWindowSendable.h"
@@ -26,12 +24,18 @@ class I2C;
 class HiTechnicColorSensor : public SensorBase
 {
 public:
-	enum tColorMode {kActive = 0, kPassive = 1, kRaw = 3};
-	typedef struct{
+	enum tColorMode
+	{
+		kActive = 0,
+		kPassive = 1,
+		kRaw = 3
+	};
+	struct RGB
+	{
 		uint16_t red;
 		uint16_t blue;
 		uint16_t green;
-	}RGB;
+	};
 	explicit HiTechnicColorSensor(uint8_t moduleNumber);
 	virtual ~HiTechnicColorSensor();
 	uint8_t GetColor();
@@ -44,15 +48,14 @@ public:
 	uint16_t GetRawBlue();
 	RGB GetRawRGB();
 	void SetMode(tColorMode mode);
-	
-	
+
 	//LiveWindowSendable interface
 	virtual std::string GetType();
 	virtual void InitTable(ITable *subtable);
 	virtual void UpdateTable();
 	virtual ITable* GetTable();
 	virtual void StartLiveWindowMode();
-	virtual void StopLiveWindowMode(); 
+	virtual void StopLiveWindowMode();
 
 private:
 	static const uint8_t kAddress = 0x02;
@@ -68,11 +71,8 @@ private:
 	static const uint8_t kRawRedRegister = 0x43;
 	static const uint8_t kRawGreenRegister = 0x45;
 	static const uint8_t kRawBlueRegister = 0x47;
-	
+
 	int m_mode;
 	I2C* m_i2c;
 	ITable *m_table;
 };
-
-#endif
-
diff --git a/wpilibc/include/HiTechnicCompass.h b/wpilibc/include/HiTechnicCompass.h
index de7de619062a79c87534fafb451d9ed940794655..6aedba6dcea0bb88757d1a53b30c585605abe9a0 100644
--- a/wpilibc/include/HiTechnicCompass.h
+++ b/wpilibc/include/HiTechnicCompass.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __HiTechnicCompass_h__
-#define __HiTechnicCompass_h__
+#pragma once
 
 #include "SensorBase.h"
 #include "LiveWindow/LiveWindowSendable.h"
@@ -50,6 +48,3 @@ private:
 	
 	ITable *m_table;
 };
-
-#endif
-
diff --git a/wpilibc/include/I2C.h b/wpilibc/include/I2C.h
index 380aba424de7862078bf9c80a1a6ed9e4bb7f7cd..0a71d0623c7027edf65150a4a4fb767b68147fab 100644
--- a/wpilibc/include/I2C.h
+++ b/wpilibc/include/I2C.h
@@ -3,12 +3,10 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef I2C_H
-#define I2C_H
+#pragma once
 
 #include "SensorBase.h"
-#include "HAL/Semaphore.h"
+#include "HAL/Semaphore.hpp"
 
 class DigitalModule;
 
@@ -25,7 +23,8 @@ class I2C : SensorBase
 	friend class DigitalModule;
 public:
 	virtual ~I2C();
-	bool Transaction(uint8_t *dataToSend, uint8_t sendSize, uint8_t *dataReceived, uint8_t receiveSize);
+	bool Transaction(uint8_t *dataToSend, uint8_t sendSize, uint8_t *dataReceived,
+			uint8_t receiveSize);
 	bool AddressOnly();
 	bool Write(uint8_t registerAddress, uint8_t data);
 	bool Read(uint8_t registerAddress, uint8_t count, uint8_t *data);
@@ -43,6 +42,3 @@ private:
 	uint8_t m_deviceAddress;
 	bool m_compatibilityMode;
 };
-
-#endif
-
diff --git a/wpilibc/include/InterruptableSensorBase.h b/wpilibc/include/InterruptableSensorBase.h
index 9fd5a34d2f4557f73ff3984956be8798a4e4b495..1e04243e53a0c5c84f29b36adc6ac86c91a4e964 100644
--- a/wpilibc/include/InterruptableSensorBase.h
+++ b/wpilibc/include/InterruptableSensorBase.h
@@ -3,11 +3,9 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef INTERRUPTABLE_SENSORBASE_H_
-#define INTERRUPTABLE_SENSORBASE_H_
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "SensorBase.h"
 
 class InterruptableSensorBase : public SensorBase
@@ -21,12 +19,9 @@ public:
 	virtual void WaitForInterrupt(float timeout); ///< Synchronus version.
 	virtual void EnableInterrupts();			///< Enable interrupts - after finishing setup.
 	virtual void DisableInterrupts();		///< Disable, but don't deallocate.
-	virtual double ReadInterruptTimestamp();		///< Return the timestamp for the interrupt that occurred.
+	virtual double ReadInterruptTimestamp();///< Return the timestamp for the interrupt that occurred.
 protected:
 	void* m_interrupt;
 	uint32_t m_interruptIndex;
 	void AllocateInterrupts(bool watcher);
 };
-
-#endif
-
diff --git a/wpilibc/include/IterativeRobot.h b/wpilibc/include/IterativeRobot.h
index e3e86d414f69790f70d3265b0f0221f04621b54e..b99a0e44b13cb444b4309d88b3fdc9f3b3d423aa 100644
--- a/wpilibc/include/IterativeRobot.h
+++ b/wpilibc/include/IterativeRobot.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef ROBOT_ITERATIVE_H_
-#define ROBOT_ITERATIVE_H_
+#pragma once
 
 #include "Timer.h"
 #include "RobotBase.h"
@@ -38,7 +36,8 @@
  * 
  */
 
-class IterativeRobot : public RobotBase {
+class IterativeRobot : public RobotBase
+{
 public:
 	/*
 	 * The default period for the periodic function calls (seconds)
@@ -52,13 +51,13 @@ public:
 	virtual void RobotInit();
 	virtual void DisabledInit();
 	virtual void AutonomousInit();
-    virtual void TeleopInit();
-    virtual void TestInit();
+	virtual void TeleopInit();
+	virtual void TestInit();
 
 	virtual void DisabledPeriodic();
 	virtual void AutonomousPeriodic();
-    virtual void TeleopPeriodic();
-    virtual void TestPeriodic();
+	virtual void TeleopPeriodic();
+	virtual void TestPeriodic();
 
 	void SetPeriod(double period);
 	double GetPeriod();
@@ -73,11 +72,8 @@ private:
 
 	bool m_disabledInitialized;
 	bool m_autonomousInitialized;
-    bool m_teleopInitialized;
-    bool m_testInitialized;
+	bool m_teleopInitialized;
+	bool m_testInitialized;
 	double m_period;
 	Timer m_mainLoopTimer;
 };
-
-#endif
-
diff --git a/wpilibc/include/Jaguar.h b/wpilibc/include/Jaguar.h
index 2b0a4050e81fdb63978d5af7dbb345492574614f..d562f4bfd13986141eb8071d9161dec987f44272 100644
--- a/wpilibc/include/Jaguar.h
+++ b/wpilibc/include/Jaguar.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef JAGUAR_H
-#define JAGUAR_H
+#pragma once
 
 #include "SafePWM.h"
 #include "SpeedController.h"
@@ -20,7 +18,7 @@ public:
 	explicit Jaguar(uint32_t channel);
 	Jaguar(uint8_t moduleNumber, uint32_t channel);
 	virtual ~Jaguar();
-	virtual void Set(float value, uint8_t syncGroup=0);
+	virtual void Set(float value, uint8_t syncGroup = 0);
 	virtual float Get();
 	virtual void Disable();
 
@@ -29,6 +27,3 @@ public:
 private:
 	void InitJaguar();
 };
-
-#endif
-
diff --git a/wpilibc/include/Joystick.h b/wpilibc/include/Joystick.h
index e21e070bfa9098b99647af975bb0f2b4566c7bf4..c0656eea6df8f30ca3782c10ef84ae5b9f06089e 100644
--- a/wpilibc/include/Joystick.h
+++ b/wpilibc/include/Joystick.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef JOYSTICK_H_
-#define JOYSTICK_H_
+#pragma once
 
 #include "GenericHID.h"
 #include "ErrorBase.h"
@@ -26,23 +24,30 @@ public:
 	static const uint32_t kDefaultZAxis = 3;
 	static const uint32_t kDefaultTwistAxis = 4;
 	static const uint32_t kDefaultThrottleAxis = 3;
-	typedef enum
+	enum AxisType
 	{
-		kXAxis, kYAxis, kZAxis, kTwistAxis, kThrottleAxis, kNumAxisTypes
-	} AxisType;
+		kXAxis,
+		kYAxis,
+		kZAxis,
+		kTwistAxis,
+		kThrottleAxis,
+		kNumAxisTypes
+	};
 	static const uint32_t kDefaultTriggerButton = 1;
 	static const uint32_t kDefaultTopButton = 2;
-	typedef enum
+	enum ButtonType
 	{
-		kTriggerButton, kTopButton, kNumButtonTypes
-	} ButtonType;
+		kTriggerButton,
+		kTopButton,
+		kNumButtonTypes
+	};
 
 	explicit Joystick(uint32_t port);
 	Joystick(uint32_t port, uint32_t numAxisTypes, uint32_t numButtonTypes);
 	virtual ~Joystick();
 
 	uint32_t GetAxisChannel(AxisType axis);
-	void SetAxisChannel(AxisType axis, uint32_t channel); 
+	void SetAxisChannel(AxisType axis, uint32_t channel);
 
 	virtual float GetX(JoystickHand hand = kRightHand);
 	virtual float GetY(JoystickHand hand = kRightHand);
@@ -58,7 +63,7 @@ public:
 	virtual bool GetButton(ButtonType button);
 	bool GetRawButton(uint32_t button);
 	static Joystick* GetStickForPort(uint32_t port);
-	
+
 	virtual float GetMagnitude();
 	virtual float GetDirectionRadians();
 	virtual float GetDirectionDegrees();
@@ -72,6 +77,3 @@ private:
 	uint32_t *m_axes;
 	uint32_t *m_buttons;
 };
-
-#endif
- 
diff --git a/wpilibc/include/Kinect.h b/wpilibc/include/Kinect.h
index b4fea4ca8b862f9075e803a93ebaf1605dc825de..46501cc67e49a407e11155c975eef4fe99c0af31 100644
--- a/wpilibc/include/Kinect.h
+++ b/wpilibc/include/Kinect.h
@@ -3,14 +3,12 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __KINECT_H__
-#define __KINECT_H__
+#pragma once
 
 #include "SensorBase.h"
 #include "Skeleton.h"
 
-#include "HAL/Semaphore.h"
+#include "HAL/Semaphore.hpp"
 
 #define kNumSkeletons 1
 
@@ -24,15 +22,26 @@
 class Kinect : public SensorBase
 {
 public:
-	typedef enum {kNotTracked, kPositionOnly, kTracked} SkeletonTrackingState;
-	typedef enum {kClippedRight = 1, kClippedLeft = 2, kClippedTop = 4, kClippedBottom = 8} SkeletonQuality;
-	typedef struct
+	enum SkeletonTrackingState
+	{
+		kNotTracked,
+		kPositionOnly,
+		kTracked
+	};
+	enum SkeletonQuality
+	{
+		kClippedRight = 1,
+		kClippedLeft = 2,
+		kClippedTop = 4,
+		kClippedBottom = 8
+	};
+	struct Point4
 	{
 		float x;
 		float y;
 		float z;
 		float w;
-	} Point4;
+	};
 
 	int GetNumberOfPlayers();
 	Point4 GetFloorClipPlane();
@@ -68,6 +77,3 @@ private:
 
 	static Kinect *_instance;
 };
-
-#endif
-
diff --git a/wpilibc/include/KinectStick.h b/wpilibc/include/KinectStick.h
index e605b5a3f63079cb7b087a014864b2e2f91ea7fa..43a598f894ce06828ea32dcffb1129b9f1353684 100644
--- a/wpilibc/include/KinectStick.h
+++ b/wpilibc/include/KinectStick.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __KINECT_STICK_H__
-#define __KINECT_STICK_H__
+#pragma once
 
 #include "ErrorBase.h"
 #include "GenericHID.h"
@@ -56,6 +54,3 @@ private:
 	static uint32_t _recentPacketNumber;
 	static KinectStickData _sticks;
 };
-
-#endif
-
diff --git a/wpilibc/include/Module.h b/wpilibc/include/Module.h
index 4cc3d91e836a589f83eb71cb6f1341a853f02f00..235f82c9eafb8c0d328581bc802d9b4069ddfff3 100644
--- a/wpilibc/include/Module.h
+++ b/wpilibc/include/Module.h
@@ -3,20 +3,24 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef MODULE_H_
-#define MODULE_H_
+#pragma once
 
 #include "SensorBase.h"
 #include "NetworkCommunication/LoadOut.h"
 
-#define kMaxModules	(nLoadOut::kModuleType_Solenoid * kMaxModuleNumber + (kMaxModuleNumber - 1))
+#define kMaxModules	 (nLoadOut::kModuleType_Solenoid * kMaxModuleNumber + (kMaxModuleNumber - 1))
 
-class Module: public SensorBase
+class Module : public SensorBase
 {
 public:
-	nLoadOut::tModuleType GetType() {return m_moduleType;}
-	uint8_t GetNumber() {return m_moduleNumber;}
+	nLoadOut::tModuleType GetType()
+	{
+		return m_moduleType;
+	}
+	uint8_t GetNumber()
+	{
+		return m_moduleNumber;
+	}
 	static Module *GetModule(nLoadOut::tModuleType type, uint8_t number);
 
 protected:
@@ -30,5 +34,3 @@ private:
 	static uint8_t ToIndex(nLoadOut::tModuleType type, uint8_t number);
 	static Module* m_modules[kMaxModules];
 };
-
-#endif
diff --git a/wpilibc/include/MotorSafety.h b/wpilibc/include/MotorSafety.h
index 15481d817ce921658e505ff920257732bdfa4bb0..ea7dfc4fb375f448f7355eb05d64d0cf97696245 100644
--- a/wpilibc/include/MotorSafety.h
+++ b/wpilibc/include/MotorSafety.h
@@ -3,12 +3,12 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-#ifndef _MOTOR_SAFETY_
-#define _MOTOR_SAFETY_
+#pragma once
 
 #define DEFAULT_SAFETY_EXPIRATION 0.1
 
-class MotorSafety {
+class MotorSafety
+{
 public:
 	virtual void SetExpiration(float timeout) = 0;
 	virtual float GetExpiration() = 0;
@@ -18,6 +18,3 @@ public:
 	virtual bool IsSafetyEnabled() = 0;
 	virtual void GetDescription(char *desc) = 0;
 };
-
-#endif
-
diff --git a/wpilibc/include/MotorSafetyHelper.h b/wpilibc/include/MotorSafetyHelper.h
index 80d0a3fad5056091317740c0de6f86922e7b7d32..944a197273e4bd8862e229a71e39782c2140549c 100644
--- a/wpilibc/include/MotorSafetyHelper.h
+++ b/wpilibc/include/MotorSafetyHelper.h
@@ -3,12 +3,10 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __MOTOR_SAFETY_HELPER__
-#define __MOTOR_SAFETY_HELPER__
+#pragma once
 
 #include "ErrorBase.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 
 class MotorSafety;
 
@@ -35,5 +33,3 @@ private:
 	static MotorSafetyHelper *m_headHelper; // the head of the list of MotorSafetyHelper objects
 	static ReentrantSemaphore m_listMutex;	// protect accesses to the list of helpers
 };
-
-#endif
diff --git a/wpilibc/include/NetworkCommunication/symModuleLink.h b/wpilibc/include/NetworkCommunication/symModuleLink.h
index 348cbc135d158d0ed9e07303b08f3c756e9b321b..00867a52a4382135d878ca2a72d973c2a8c864dd 100644
--- a/wpilibc/include/NetworkCommunication/symModuleLink.h
+++ b/wpilibc/include/NetworkCommunication/symModuleLink.h
@@ -1,7 +1,7 @@
 #ifndef __SYM_MODULE_LINK_H__
 #define __SYM_MODULE_LINK_H__
 
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
 #ifdef __cplusplus
 extern "C" {
diff --git a/wpilibc/include/Notifier.h b/wpilibc/include/Notifier.h
index a1143200ab5d5190dbac3ed797ecd4ff0e8d52ff..ad969360b1fc468476358e7ca34a76a3c406a58f 100644
--- a/wpilibc/include/Notifier.h
+++ b/wpilibc/include/Notifier.h
@@ -3,13 +3,11 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef NOTIFIER_H
-#define NOTIFIER_H
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "ErrorBase.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 
 typedef void (*TimerEventHandler)(void *param);
 
@@ -38,8 +36,7 @@ private:
 	Notifier *m_nextEvent;					// next Nofifier event
 	bool m_periodic;						// true if this is a periodic event
 	bool m_queued;							// indicates if this entry is queued
-	SEMAPHORE_ID m_handlerSemaphore;				// held by interrupt manager task while handler call is in progress 
+	SEMAPHORE_ID m_handlerSemaphore;		// held by interrupt manager task while handler call is in progress
+
 	DISALLOW_COPY_AND_ASSIGN(Notifier);
 };
-
-#endif
diff --git a/wpilibc/include/PIDController.h b/wpilibc/include/PIDController.h
index f1a514251450cb141417346738c0444a1b130940..060defd0ebf7040cd235c8dd058df74bd71202f8 100644
--- a/wpilibc/include/PIDController.h
+++ b/wpilibc/include/PIDController.h
@@ -3,12 +3,10 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef PIDCONTROLLER_H_
-#define PIDCONTROLLER_H_
+#pragma once
 
 #include "Base.h"
-#include "HAL/Semaphore.h"
+#include "HAL/Semaphore.hpp"
 #include "Controller.h"
 #include "LiveWindow/LiveWindow.h"
 
@@ -26,12 +24,10 @@ class Notifier;
 class PIDController : public LiveWindowSendable, public Controller, public ITableListener
 {
 public:
-	PIDController(float p, float i, float d,
-					PIDSource *source, PIDOutput *output,
-					float period = 0.05);
-	PIDController(float p, float i, float d, float f,
-					PIDSource *source, PIDOutput *output,
-					float period = 0.05);
+	PIDController(float p, float i, float d, PIDSource *source, PIDOutput *output, float period =
+			0.05);
+	PIDController(float p, float i, float d, float f, PIDSource *source, PIDOutput *output,
+			float period = 0.05);
 	virtual ~PIDController();
 	virtual float Get();
 	virtual void SetContinuous(bool continuous = true);
@@ -43,23 +39,23 @@ public:
 	virtual float GetI();
 	virtual float GetD();
 	virtual float GetF();
-	
+
 	virtual void SetSetpoint(float setpoint);
 	virtual float GetSetpoint();
 
 	virtual float GetError();
-	
+
 	virtual void SetTolerance(float percent);
 	virtual void SetAbsoluteTolerance(float absValue);
 	virtual void SetPercentTolerance(float percentValue);
 	virtual bool OnTarget();
-	
+
 	virtual void Enable();
 	virtual void Disable();
 	virtual bool IsEnabled();
-	
+
 	virtual void Reset();
-	
+
 	virtual void InitTable(ITable* table);
 
 private:
@@ -75,24 +71,28 @@ private:
 	bool m_enabled; 			//is the pid controller enabled
 	float m_prevError;	// the prior sensor input (used to compute velocity)
 	double m_totalError; //the sum of the errors for use in the integral calc
-	enum {kAbsoluteTolerance, kPercentTolerance, kNoTolerance} m_toleranceType;
+	enum
+	{
+		kAbsoluteTolerance,
+		kPercentTolerance,
+		kNoTolerance
+	} m_toleranceType;
 	float m_tolerance;	//the percetage or absolute error that is considered on target
 	float m_setpoint;
 	float m_error;
 	float m_result;
 	float m_period;
-	
+
 	MUTEX_ID m_semaphore;
-	
+
 	PIDSource *m_pidInput;
 	PIDOutput *m_pidOutput;
 	Notifier *m_controlLoop;
 
-	void Initialize(float p, float i, float d, float f,
-					PIDSource *source, PIDOutput *output,
-					float period = 0.05);
+	void Initialize(float p, float i, float d, float f, PIDSource *source, PIDOutput *output,
+			float period = 0.05);
 	static void CallCalculate(void *controller);
-	
+
 	virtual ITable* GetTable();
 	virtual std::string GetSmartDashboardType();
 	virtual void ValueChanged(ITable* source, const std::string& key, EntryValue value, bool isNew);
@@ -105,5 +105,3 @@ protected:
 
 	DISALLOW_COPY_AND_ASSIGN(PIDController);
 };
-
-#endif
diff --git a/wpilibc/include/PIDOutput.h b/wpilibc/include/PIDOutput.h
index 81483a6807be9c0b611e876d3881b7ca8c5e98a9..a2e2c95de6d9fc968f81d2c1c3ae06e332ae7e00 100644
--- a/wpilibc/include/PIDOutput.h
+++ b/wpilibc/include/PIDOutput.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef PID_OUTPUT_H
-#define PID_OUTPUT_H
+#pragma once
 
 #include "Base.h"
 
@@ -20,5 +18,3 @@ class PIDOutput
 public:
 	virtual void PIDWrite(float output) = 0;
 };
-
-#endif
diff --git a/wpilibc/include/PIDSource.h b/wpilibc/include/PIDSource.h
index a2ed1c296be98a3977e9fca6b5c9856dbdd9e6bc..e81bd286df7694ef5213beecb298a3ad1ea73697 100644
--- a/wpilibc/include/PIDSource.h
+++ b/wpilibc/include/PIDSource.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef PID_SOURCE_H
-#define PID_SOURCE_H
+#pragma once
 
 /**
  * PIDSource interface is a generic sensor source for the PID class.
@@ -15,8 +13,6 @@
 class PIDSource
 {	
 public:
-	typedef enum {kDistance, kRate, kAngle} PIDSourceParameter;
+	enum PIDSourceParameter {kDistance, kRate, kAngle};
 	virtual double PIDGet() = 0;
 };
-
-#endif
diff --git a/wpilibc/include/PWM.h b/wpilibc/include/PWM.h
index 6c58f784e441d29d3166458b24596421141dc5f8..b7696a3b3e1d3cb3b7592336b319544e70e66bec 100644
--- a/wpilibc/include/PWM.h
+++ b/wpilibc/include/PWM.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef PWM_H_
-#define PWM_H_
+#pragma once
 
 #include "SensorBase.h"
 #include "LiveWindow/LiveWindowSendable.h"
@@ -33,7 +31,12 @@ class PWM : public SensorBase, public ITableListener, public LiveWindowSendable
 {
 	friend class DigitalModule;
 public:
-	typedef enum {kPeriodMultiplier_1X = 1, kPeriodMultiplier_2X = 2, kPeriodMultiplier_4X = 4} PeriodMultiplier;
+	enum PeriodMultiplier
+	{
+		kPeriodMultiplier_1X = 1,
+		kPeriodMultiplier_2X = 2,
+		kPeriodMultiplier_4X = 4
+	};
 
 	explicit PWM(uint32_t channel);
 	PWM(uint8_t moduleNumber, uint32_t channel);
@@ -42,37 +45,41 @@ public:
 	virtual unsigned short GetRaw();
 	void SetPeriodMultiplier(PeriodMultiplier mult);
 	void EnableDeadbandElimination(bool eliminateDeadband);
-	void SetBounds(int32_t max, int32_t deadbandMax, int32_t center, int32_t deadbandMin, int32_t min);
+	void SetBounds(int32_t max, int32_t deadbandMax, int32_t center, int32_t deadbandMin,
+			int32_t min);
 	void SetBounds(double max, double deadbandMax, double center, double deadbandMin, double min);
-	uint32_t GetChannel() {return m_channel;}
+	uint32_t GetChannel()
+	{
+		return m_channel;
+	}
 	uint32_t GetModuleNumber();
 
 protected:
-    /**
-     * kDefaultPwmPeriod is in ms
-     *
-     * - 20ms periods (50 Hz) are the "safest" setting in that this works for all devices
-     * - 20ms periods seem to be desirable for Vex Motors
-     * - 20ms periods are the specified period for HS-322HD servos, but work reliably down
-     *      to 10.0 ms; starting at about 8.5ms, the servo sometimes hums and get hot;
-     *      by 5.0ms the hum is nearly continuous
-     * - 10ms periods work well for Victor 884
-     * - 5ms periods allows higher update rates for Luminary Micro Jaguar speed controllers.
-     *      Due to the shipping firmware on the Jaguar, we can't run the update period less
-     *      than 5.05 ms.
-     *
-     * kDefaultPwmPeriod is the 1x period (5.05 ms).  In hardware, the period scaling is implemented as an
-     * output squelch to get longer periods for old devices.
-     */
-    static constexpr float kDefaultPwmPeriod = 5.05;
-    /**
-     * kDefaultPwmCenter is the PWM range center in ms
-     */
-    static constexpr float kDefaultPwmCenter = 1.5;
-    /**
-     * kDefaultPWMStepsDown is the number of PWM steps below the centerpoint
-     */
-    static const int32_t kDefaultPwmStepsDown = 1000;
+	/**
+	 * kDefaultPwmPeriod is in ms
+	 *
+	 * - 20ms periods (50 Hz) are the "safest" setting in that this works for all devices
+	 * - 20ms periods seem to be desirable for Vex Motors
+	 * - 20ms periods are the specified period for HS-322HD servos, but work reliably down
+	 *      to 10.0 ms; starting at about 8.5ms, the servo sometimes hums and get hot;
+	 *      by 5.0ms the hum is nearly continuous
+	 * - 10ms periods work well for Victor 884
+	 * - 5ms periods allows higher update rates for Luminary Micro Jaguar speed controllers.
+	 *      Due to the shipping firmware on the Jaguar, we can't run the update period less
+	 *      than 5.05 ms.
+	 *
+	 * kDefaultPwmPeriod is the 1x period (5.05 ms).  In hardware, the period scaling is implemented as an
+	 * output squelch to get longer periods for old devices.
+	 */
+	static constexpr float kDefaultPwmPeriod = 5.05;
+	/**
+	 * kDefaultPwmCenter is the PWM range center in ms
+	 */
+	static constexpr float kDefaultPwmCenter = 1.5;
+	/**
+	 * kDefaultPWMStepsDown is the number of PWM steps below the centerpoint
+	 */
+	static const int32_t kDefaultPwmStepsDown = 1000;
 	static const int32_t kPwmDisabled = 0;
 
 	virtual void SetPosition(float pos);
@@ -94,21 +101,43 @@ protected:
 	std::string GetSmartDashboardType();
 	void InitTable(ITable *subTable);
 	ITable * GetTable();
-	
+
 	ITable *m_table;
 
 private:
 	void InitPWM(uint8_t moduleNumber, uint32_t channel);
 	uint32_t m_channel;
 	DigitalModule *m_module;
-	int32_t GetMaxPositivePwm() { return m_maxPwm; };
-	int32_t GetMinPositivePwm() { return m_eliminateDeadband ? m_deadbandMaxPwm : m_centerPwm + 1; };
-	int32_t GetCenterPwm() { return m_centerPwm; };
-	int32_t GetMaxNegativePwm() { return m_eliminateDeadband ? m_deadbandMinPwm : m_centerPwm - 1; };
-	int32_t GetMinNegativePwm() { return m_minPwm; };
-	int32_t GetPositiveScaleFactor() {return GetMaxPositivePwm() - GetMinPositivePwm();} ///< The scale for positive speeds.
-	int32_t GetNegativeScaleFactor() {return GetMaxNegativePwm() - GetMinNegativePwm();} ///< The scale for negative speeds.
-	int32_t GetFullRangeScaleFactor() {return GetMaxPositivePwm() - GetMinNegativePwm();} ///< The scale for positions.
+	int32_t GetMaxPositivePwm()
+	{
+		return m_maxPwm;
+	}
+	int32_t GetMinPositivePwm()
+	{
+		return m_eliminateDeadband ? m_deadbandMaxPwm : m_centerPwm + 1;
+	}
+	int32_t GetCenterPwm()
+	{
+		return m_centerPwm;
+	}
+	int32_t GetMaxNegativePwm()
+	{
+		return m_eliminateDeadband ? m_deadbandMinPwm : m_centerPwm - 1;
+	}
+	int32_t GetMinNegativePwm()
+	{
+		return m_minPwm;
+	}
+	int32_t GetPositiveScaleFactor()
+	{
+		return GetMaxPositivePwm() - GetMinPositivePwm();
+	} ///< The scale for positive speeds.
+	int32_t GetNegativeScaleFactor()
+	{
+		return GetMaxNegativePwm() - GetMinNegativePwm();
+	} ///< The scale for negative speeds.
+	int32_t GetFullRangeScaleFactor()
+	{
+		return GetMaxPositivePwm() - GetMinNegativePwm();
+	} ///< The scale for positions.
 };
-
-#endif
diff --git a/wpilibc/include/Preferences.h b/wpilibc/include/Preferences.h
index 9866c710224b6f808ad9cb5524e3c27bec8e8ff3..858659e7b7a4f3514b5918de9bfae71e6f8a63a8 100644
--- a/wpilibc/include/Preferences.h
+++ b/wpilibc/include/Preferences.h
@@ -3,14 +3,12 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __PREFERENCES_H__
-#define __PREFERENCES_H__
+#pragma once
 
 #include "ErrorBase.h"
 #include "Task.h"
 #include <map>
-#include "HAL/Semaphore.h"
+#include "HAL/Semaphore.hpp"
 #include <string>
 #include <vector>
 #include "tables/ITableListener.h"
@@ -53,7 +51,7 @@ public:
 	void Save();
 	bool ContainsKey(const char *key);
 	void Remove(const char *key);
-	
+
 	void ValueChanged(ITable* source, const std::string& key, EntryValue value, bool isNew);
 
 protected:
@@ -67,8 +65,16 @@ private:
 	void ReadTaskRun();
 	void WriteTaskRun();
 
-	static int InitReadTask(Preferences *obj) {obj->ReadTaskRun();return 0;}
-	static int InitWriteTask(Preferences *obj) {obj->WriteTaskRun();return 0;}
+	static int InitReadTask(Preferences *obj)
+	{
+		obj->ReadTaskRun();
+		return 0;
+	}
+	static int InitWriteTask(Preferences *obj)
+	{
+		obj->WriteTaskRun();
+		return 0;
+	}
 
 	static Preferences *_instance;
 
@@ -90,5 +96,3 @@ private:
 	Task m_readTask;
 	Task m_writeTask;
 };
-
-#endif
diff --git a/wpilibc/include/Relay.h b/wpilibc/include/Relay.h
index d7bb459a96356056e7d73ee2c98afae43e997df6..f018a8fe9df3e10813d4b18e0c5b86ad3bd2b745 100644
--- a/wpilibc/include/Relay.h
+++ b/wpilibc/include/Relay.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef RELAY_H_
-#define RELAY_H_
+#pragma once
 
 #include "SensorBase.h"
 #include "tables/ITableListener.h"
@@ -23,10 +21,22 @@ class DigitalModule;
  * variable speed.  It also allows the two channels (forward and reverse) to be used independently
  * for something that does not care about voltage polatiry (like a solenoid).
  */
-class Relay : public SensorBase, public ITableListener, public LiveWindowSendable {
+class Relay : public SensorBase, public ITableListener, public LiveWindowSendable
+{
 public:
-	typedef enum {kOff, kOn, kForward, kReverse} Value;
-	typedef enum {kBothDirections, kForwardOnly, kReverseOnly} Direction;
+	enum Value
+	{
+		kOff,
+		kOn,
+		kForward,
+		kReverse
+	};
+	enum Direction
+	{
+		kBothDirections,
+		kForwardOnly,
+		kReverseOnly
+	};
 
 	Relay(uint32_t channel, Direction direction = kBothDirections);
 	Relay(uint8_t moduleNumber, uint32_t channel, Direction direction = kBothDirections);
@@ -34,7 +44,7 @@ public:
 
 	void Set(Value value);
 	Value Get();
-	
+
 	void ValueChanged(ITable* source, const std::string& key, EntryValue value, bool isNew);
 	void UpdateTable();
 	void StartLiveWindowMode();
@@ -42,7 +52,7 @@ public:
 	std::string GetSmartDashboardType();
 	void InitTable(ITable *subTable);
 	ITable * GetTable();
-	
+
 	ITable *m_table;
 
 private:
@@ -52,5 +62,3 @@ private:
 	Direction m_direction;
 	DigitalModule *m_module;
 };
-
-#endif
diff --git a/wpilibc/include/Resource.h b/wpilibc/include/Resource.h
index 224cabc09a0595e07b4f8f5d80bd25f4d97af887..ed3bcbd17bed2c56e35fd9a973500b25f1189902 100644
--- a/wpilibc/include/Resource.h
+++ b/wpilibc/include/Resource.h
@@ -3,13 +3,11 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef RESOURCE_H_
-#define RESOURCE_H_
+#pragma once
 
 #include "ErrorBase.h"
-#include "HAL/cpp/Synchronized.h"
-#include "HAL/HAL.h"
+#include "HAL/cpp/Synchronized.hpp"
+#include "HAL/HAL.hpp"
 
 /**
  * The Resource class is a convenient way to track allocated resources.
@@ -40,5 +38,3 @@ private:
 
 	DISALLOW_COPY_AND_ASSIGN(Resource);
 };
-
-#endif
diff --git a/wpilibc/include/RobotBase.h b/wpilibc/include/RobotBase.h
index 6d5e4eb21b032a69ad3ad9f3df9af0b3583f9eb3..6c837f72eb87bcfac7eef74a85db6f1f5087f9b8 100644
--- a/wpilibc/include/RobotBase.h
+++ b/wpilibc/include/RobotBase.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef ROBOT_H_
-#define ROBOT_H_
+#pragma once
 
 #include "Base.h"
 #include "Task.h"
@@ -30,13 +28,12 @@ class DriverStation;
 	}
 #else
 #define START_ROBOT_CLASS(_ClassName_) \
-  int main() \
-  { \
-    HALNetworkCommunicationReserve();	\
-	RobotBase* robot = new _ClassName_(); \
-	robot->StartCompetition(); \
-	return 0; \
-  }
+	int main() \
+	{ \
+		if (!HALInitialize()){std::cerr<<"FATAL ERROR: HAL could not be initialized"<<std::endl;return -1;}	\
+		(new _ClassName_())->StartCompetition(); \
+		return 0; \
+	}
 #endif
 
 /**
@@ -47,7 +44,8 @@ class DriverStation;
  * completion before the OperatorControl code could start. In the future the Autonomous code
  * might be spawned as a task, then killed at the end of the Autonomous period.
  */
-class RobotBase {
+class RobotBase
+{
 	friend class RobotDeleter;
 public:
 	static RobotBase &getInstance();
@@ -57,7 +55,7 @@ public:
 	bool IsDisabled();
 	bool IsAutonomous();
 	bool IsOperatorControl();
-    bool IsTest();
+	bool IsTest();
 	bool IsNewDataAvailable();
 	static void startRobotTask(FUNCPTR factory);
 	static void robotTask(FUNCPTR factory, Task *task);
@@ -72,8 +70,6 @@ protected:
 
 private:
 	static RobotBase *m_instance;
+
 	DISALLOW_COPY_AND_ASSIGN(RobotBase);
 };
-
-#endif
-
diff --git a/wpilibc/include/RobotDrive.h b/wpilibc/include/RobotDrive.h
index fd21d901b2b5928c4194fe90373e807df855f843..87c64cbe9583307bbe64c10dddc87db942689164 100644
--- a/wpilibc/include/RobotDrive.h
+++ b/wpilibc/include/RobotDrive.h
@@ -3,13 +3,11 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef ROBOTDRIVE_H_
-#define ROBOTDRIVE_H_
+#pragma once
 
 #include "ErrorBase.h"
 #include <stdlib.h>
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "MotorSafety.h"
 #include "MotorSafetyHelper.h"
 
@@ -24,38 +22,42 @@ class GenericHID;
  * used for either the Drive function (intended for hand created drive code, such as autonomous)
  * or with the Tank/Arcade functions intended to be used for Operator Control driving.
  */
-class RobotDrive: public MotorSafety, public ErrorBase
+class RobotDrive : public MotorSafety, public ErrorBase
 {
 public:
-	typedef enum
+	enum MotorType
 	{
 		kFrontLeftMotor = 0,
 		kFrontRightMotor = 1,
 		kRearLeftMotor = 2,
 		kRearRightMotor = 3
-	} MotorType;
+	};
 
 	RobotDrive(uint32_t leftMotorChannel, uint32_t rightMotorChannel);
 	RobotDrive(uint32_t frontLeftMotorChannel, uint32_t rearLeftMotorChannel,
-				uint32_t frontRightMotorChannel, uint32_t rearRightMotorChannel);
+			uint32_t frontRightMotorChannel, uint32_t rearRightMotorChannel);
 	RobotDrive(SpeedController *leftMotor, SpeedController *rightMotor);
 	RobotDrive(SpeedController &leftMotor, SpeedController &rightMotor);
 	RobotDrive(SpeedController *frontLeftMotor, SpeedController *rearLeftMotor,
-				SpeedController *frontRightMotor, SpeedController *rearRightMotor);
+			SpeedController *frontRightMotor, SpeedController *rearRightMotor);
 	RobotDrive(SpeedController &frontLeftMotor, SpeedController &rearLeftMotor,
-				SpeedController &frontRightMotor, SpeedController &rearRightMotor);
+			SpeedController &frontRightMotor, SpeedController &rearRightMotor);
 	virtual ~RobotDrive();
 
 	void Drive(float outputMagnitude, float curve);
 	void TankDrive(GenericHID *leftStick, GenericHID *rightStick, bool squaredInputs = true);
 	void TankDrive(GenericHID &leftStick, GenericHID &rightStick, bool squaredInputs = true);
-	void TankDrive(GenericHID *leftStick, uint32_t leftAxis, GenericHID *rightStick, uint32_t rightAxis, bool squaredInputs = true);
-	void TankDrive(GenericHID &leftStick, uint32_t leftAxis, GenericHID &rightStick, uint32_t rightAxis, bool squaredInputs = true);
+	void TankDrive(GenericHID *leftStick, uint32_t leftAxis, GenericHID *rightStick,
+			uint32_t rightAxis, bool squaredInputs = true);
+	void TankDrive(GenericHID &leftStick, uint32_t leftAxis, GenericHID &rightStick,
+			uint32_t rightAxis, bool squaredInputs = true);
 	void TankDrive(float leftValue, float rightValue, bool squaredInputs = true);
 	void ArcadeDrive(GenericHID *stick, bool squaredInputs = true);
 	void ArcadeDrive(GenericHID &stick, bool squaredInputs = true);
-	void ArcadeDrive(GenericHID *moveStick, uint32_t moveChannel, GenericHID *rotateStick, uint32_t rotateChannel, bool squaredInputs = true);
-	void ArcadeDrive(GenericHID &moveStick, uint32_t moveChannel, GenericHID &rotateStick, uint32_t rotateChannel, bool squaredInputs = true);
+	void ArcadeDrive(GenericHID *moveStick, uint32_t moveChannel, GenericHID *rotateStick,
+			uint32_t rotateChannel, bool squaredInputs = true);
+	void ArcadeDrive(GenericHID &moveStick, uint32_t moveChannel, GenericHID &rotateStick,
+			uint32_t rotateChannel, bool squaredInputs = true);
 	void ArcadeDrive(float moveValue, float rotateValue, bool squaredInputs = true);
 	void MecanumDrive_Cartesian(float x, float y, float rotation, float gyroAngle = 0.0);
 	void MecanumDrive_Polar(float magnitude, float direction, float rotation);
@@ -90,19 +92,20 @@ protected:
 	SpeedController *m_rearLeftMotor;
 	SpeedController *m_rearRightMotor;
 	MotorSafetyHelper *m_safetyHelper;
-	
+
 private:
 	int32_t GetNumMotors()
 	{
 		int motors = 0;
-		if (m_frontLeftMotor) motors++;
-		if (m_frontRightMotor) motors++;
-		if (m_rearLeftMotor) motors++;
-		if (m_rearRightMotor) motors++;
+		if (m_frontLeftMotor)
+			motors++;
+		if (m_frontRightMotor)
+			motors++;
+		if (m_rearLeftMotor)
+			motors++;
+		if (m_rearRightMotor)
+			motors++;
 		return motors;
 	}
 	DISALLOW_COPY_AND_ASSIGN(RobotDrive);
 };
-
-#endif
-
diff --git a/wpilibc/include/SPI.h b/wpilibc/include/SPI.h
index 2db21fe547e1f7b6179a297d724dbbbe0637389c..42cc5c7260b856360b496a78ef3fad39ff074e53 100644
--- a/wpilibc/include/SPI.h
+++ b/wpilibc/include/SPI.h
@@ -3,11 +3,9 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef __SPI_H__
-#define __SPI_H__
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "SensorBase.h"
 
 class DigitalOutput;
@@ -42,9 +40,9 @@ public:
 	void SetSampleDataOnFalling();
 	void SetSampleDataOnRising();
 
-	void SetSlaveSelect(DigitalOutput *ss, tFrameMode mode=kChipSelect, bool activeLow=false);
-	void SetSlaveSelect(DigitalOutput &ss, tFrameMode mode=kChipSelect, bool activeLow=false);
-	DigitalOutput *GetSlaveSelect(tFrameMode *mode=NULL, bool *activeLow=NULL);
+	void SetSlaveSelect(DigitalOutput *ss, tFrameMode mode = kChipSelect, bool activeLow = false);
+	void SetSlaveSelect(DigitalOutput &ss, tFrameMode mode = kChipSelect, bool activeLow = false);
+	DigitalOutput *GetSlaveSelect(tFrameMode *mode = NULL, bool *activeLow = NULL);
 
 	void SetClockActiveLow();
 	void SetClockActiveHigh();
@@ -72,5 +70,3 @@ private:
 
 	DISALLOW_COPY_AND_ASSIGN(SPI);
 };
-
-#endif
diff --git a/wpilibc/include/SafePWM.h b/wpilibc/include/SafePWM.h
index 5b5b0a7c7b49b8f8c851766618b74a2f60ed4bfa..cc303b14fe9fe4f87e5fb83d06616851a1e802ba 100644
--- a/wpilibc/include/SafePWM.h
+++ b/wpilibc/include/SafePWM.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __SAFE_PWM__
-#define __SAFE_PWM__
+#pragma once
 
 #include "MotorSafety.h"
 #include "PWM.h"
@@ -19,7 +17,7 @@ class MotorSafetyHelper;
  * This delegates the actual work to a MotorSafetyHelper object that is used for all
  * objects that implement MotorSafety.
  */
-class SafePWM: public PWM, public MotorSafety
+class SafePWM : public PWM, public MotorSafety
 {
 public:
 	explicit SafePWM(uint32_t channel);
@@ -39,5 +37,3 @@ private:
 	void InitSafePWM();
 	MotorSafetyHelper *m_safetyHelper;
 };
-
-#endif
diff --git a/wpilibc/include/SensorBase.h b/wpilibc/include/SensorBase.h
index 31f7d18273cdf2f3d943bb232e33f72b147743b1..820cad2c75b2f69cff6a54ddc05ba3ff09359221 100644
--- a/wpilibc/include/SensorBase.h
+++ b/wpilibc/include/SensorBase.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef SENSORBASE_H_
-#define SENSORBASE_H_
+#pragma once
 
 #include "ErrorBase.h"
 #include <stdio.h>
@@ -16,14 +14,24 @@
  * Stores most recent status information as well as containing utility functions for checking
  * channels and error processing.
  */
-class SensorBase: public ErrorBase {
+class SensorBase : public ErrorBase
+{
 public:
 	SensorBase();
 	virtual ~SensorBase();
 	static void DeleteSingletons();
-	static uint32_t GetDefaultAnalogModule() { return 1; }
-	static uint32_t GetDefaultDigitalModule() { return 1; }
-	static uint32_t GetDefaultSolenoidModule() { return 1; }
+	static uint32_t GetDefaultAnalogModule()
+	{
+		return 1;
+	}
+	static uint32_t GetDefaultDigitalModule()
+	{
+		return 1;
+	}
+	static uint32_t GetDefaultSolenoidModule()
+	{
+		return 1;
+	}
 	static bool CheckAnalogModule(uint8_t moduleNumber);
 	static bool CheckDigitalModule(uint8_t moduleNumber);
 	static bool CheckPWMModule(uint8_t moduleNumber);
@@ -52,6 +60,3 @@ private:
 	static SensorBase *m_singletonList;
 	SensorBase *m_nextSingleton;
 };
-
-
-#endif
diff --git a/wpilibc/include/SerialPort.h b/wpilibc/include/SerialPort.h
index d77fcf9af1cc38ff282923bad9e655c6074bb9b1..ee3e91094e15f9da3336997f16b8508045a7bf72 100644
--- a/wpilibc/include/SerialPort.h
+++ b/wpilibc/include/SerialPort.h
@@ -3,12 +3,10 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __SerialPort_h__
-#define __SerialPort_h__
+#pragma once
 
 #include "ErrorBase.h"
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
 /**
  * Driver for the RS-232 serial port on the cRIO.
@@ -25,12 +23,13 @@
 class SerialPort : public ErrorBase
 {
 public:
-	typedef enum {kParity_None=0, kParity_Odd=1, kParity_Even=2, kParity_Mark=3, kParity_Space=4} Parity;
-	typedef enum {kStopBits_One=10, kStopBits_OnePointFive=15, kStopBits_Two=20} StopBits;
-	typedef enum {kFlowControl_None=0, kFlowControl_XonXoff=1, kFlowControl_RtsCts=2, kFlowControl_DtrDsr=4} FlowControl;
-	typedef enum {kFlushOnAccess=1, kFlushWhenFull=2} WriteBufferMode;
+	enum Parity {kParity_None=0, kParity_Odd=1, kParity_Even=2, kParity_Mark=3, kParity_Space=4};
+	enum StopBits {kStopBits_One=10, kStopBits_OnePointFive=15, kStopBits_Two=20};
+	enum FlowControl {kFlowControl_None=0, kFlowControl_XonXoff=1, kFlowControl_RtsCts=2, kFlowControl_DtrDsr=4};
+	enum WriteBufferMode {kFlushOnAccess=1, kFlushWhenFull=2};
 
-	SerialPort(uint32_t baudRate, uint8_t dataBits = 8, Parity parity = kParity_None, StopBits stopBits = kStopBits_One);
+	SerialPort(uint32_t baudRate, uint8_t dataBits = 8, Parity parity = kParity_None,
+			StopBits stopBits = kStopBits_One);
 	~SerialPort();
 	void SetFlowControl(FlowControl flowControl);
 	void EnableTermination(char terminator = '\n');
@@ -47,15 +46,11 @@ public:
 	void Flush();
 	void Reset();
 
-	/*
-	 * Do not call me!
-	 */
-	//void _internalHandler(uint32_t port, uint32_t eventType, uint32_t event);
 private:
 	uint32_t m_resourceManagerHandle;
 	uint32_t m_portHandle;
 	bool m_consoleModeEnabled;
+
 	DISALLOW_COPY_AND_ASSIGN(SerialPort);
 };
 
-#endif
diff --git a/wpilibc/include/Servo.h b/wpilibc/include/Servo.h
index 8f3f046c75020ecf8b9f08edc61d5807ddd39b76..07a034ca3f21d4c45460c37433ad42d4e08865f6 100644
--- a/wpilibc/include/Servo.h
+++ b/wpilibc/include/Servo.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef SERVO_H
-#define SERVO_H
+#pragma once
 
 #include "SafePWM.h"
 #include "SpeedController.h"
@@ -27,9 +25,15 @@ public:
 	float Get();
 	void SetAngle(float angle);
 	float GetAngle();
-	static float GetMaxAngle() { return kMaxServoAngle; };
-	static float GetMinAngle() { return kMinServoAngle; };
-	
+	static float GetMaxAngle()
+	{
+		return kMaxServoAngle;
+	}
+	static float GetMinAngle()
+	{
+		return kMinServoAngle;
+	}
+
 	void ValueChanged(ITable* source, const std::string& key, EntryValue value, bool isNew);
 	void UpdateTable();
 	void StartLiveWindowMode();
@@ -37,16 +41,16 @@ public:
 	std::string GetSmartDashboardType();
 	void InitTable(ITable *subTable);
 	ITable * GetTable();
-	
+
 	ITable *m_table;
 
 private:
 	void InitServo();
-	float GetServoAngleRange() {return kMaxServoAngle - kMinServoAngle;}
+	float GetServoAngleRange()
+	{
+		return kMaxServoAngle - kMinServoAngle;
+	}
 
 	static constexpr float kMaxServoAngle = 170.0;
 	static constexpr float kMinServoAngle = 0.0;
 };
-
-#endif
-
diff --git a/wpilibc/include/SimpleRobot.h b/wpilibc/include/SimpleRobot.h
index d9638057f1a4070d4daad605849902e93de63686..6b96523cb410475f2e374148b1d3ebceeb1538c5 100644
--- a/wpilibc/include/SimpleRobot.h
+++ b/wpilibc/include/SimpleRobot.h
@@ -3,16 +3,14 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef SIMPLE_ROBOT_H
-#define SIMPLE_ROBOT_H
+#pragma once
 
 #include "RobotBase.h"
 
 /**
  * @todo If this is going to last until release, it needs a better name.
  */
-class SimpleRobot: public RobotBase
+class SimpleRobot : public RobotBase
 {
 public:
 	SimpleRobot();
@@ -20,13 +18,11 @@ public:
 	virtual void RobotInit();
 	virtual void Disabled();
 	virtual void Autonomous();
-    virtual void OperatorControl();
-    virtual void Test();
+	virtual void OperatorControl();
+	virtual void Test();
 	virtual void RobotMain();
 	void StartCompetition();
 
 private:
 	bool m_robotMainOverridden;
 };
-
-#endif
diff --git a/wpilibc/include/Skeleton.h b/wpilibc/include/Skeleton.h
index be15767761ff3dde8eb0b04e3c610bb68be4f63c..7e19b9404ea3a7e26618b3d2a52e2a57c6410f27 100644
--- a/wpilibc/include/Skeleton.h
+++ b/wpilibc/include/Skeleton.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __SKELETON_H__
-#define __SKELETON_H__
+#pragma once
 
 /**
  * Represents Skeleton data from a Kinect device connected to the 
@@ -16,7 +14,7 @@ class Skeleton
 {
 	friend class Kinect;
 public:
-	typedef enum
+	enum JointTypes
 	{
 		HipCenter = 0,
 		Spine = 1,
@@ -39,17 +37,22 @@ public:
 		AnkleRight = 18,
 		FootRight = 19,
 		JointCount = 20
-	} JointTypes;
+	};
 
-	typedef enum {kNotTracked, kInferred, kTracked} JointTrackingState;
+	enum JointTrackingState
+	{
+		kNotTracked,
+		kInferred,
+		kTracked
+	};
 
-	typedef struct
+	struct Joint
 	{
 		float x;
 		float y;
 		float z;
 		JointTrackingState trackingState;
-	} Joint;
+	};
 
 	Joint GetHandRight() { return m_joints[HandRight]; }
 	Joint GetHandLeft() { return m_joints[HandLeft]; }
@@ -76,6 +79,3 @@ public:
 private:
 	Joint m_joints[20];
 };
-
-#endif
-
diff --git a/wpilibc/include/Solenoid.h b/wpilibc/include/Solenoid.h
index 5c30b150544f453f65452af8d424e8b008a9ad70..6a7ebf229bd743a9a0a792940fd8647fbca774b8 100644
--- a/wpilibc/include/Solenoid.h
+++ b/wpilibc/include/Solenoid.h
@@ -3,30 +3,28 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef SOLENOID_H_
-#define SOLENOID_H_
+#pragma once
 
 #include "SolenoidBase.h"
 #include "LiveWindow/LiveWindowSendable.h"
 #include "tables/ITableListener.h"
 
-
 /**
  * Solenoid class for running high voltage Digital Output (9472 module).
  * 
  * The Solenoid class is typically used for pneumatics solenoids, but could be used
  * for any device within the current spec of the 9472 module.
  */
-class Solenoid : public SolenoidBase, public LiveWindowSendable, public ITableListener {
+class Solenoid : public SolenoidBase, public LiveWindowSendable, public ITableListener
+{
 public:
 	explicit Solenoid(uint32_t channel);
 	Solenoid(uint8_t moduleNumber, uint32_t channel);
 	virtual ~Solenoid();
 	virtual void Set(bool on);
 	virtual bool Get();
-	
-void ValueChanged(ITable* source, const std::string& key, EntryValue value, bool isNew);
+
+	void ValueChanged(ITable* source, const std::string& key, EntryValue value, bool isNew);
 	void UpdateTable();
 	void StartLiveWindowMode();
 	void StopLiveWindowMode();
@@ -34,13 +32,9 @@ void ValueChanged(ITable* source, const std::string& key, EntryValue value, bool
 	void InitTable(ITable *subTable);
 	ITable * GetTable();
 
-
 private:
 	void InitSolenoid();
 
 	uint32_t m_channel; ///< The channel on the module to control.
-	
 	ITable *m_table;
 };
-
-#endif
diff --git a/wpilibc/include/SolenoidBase.h b/wpilibc/include/SolenoidBase.h
index 77262e7494f026426b2a498cddbdd5fee47c22f6..741ecae696574bee4b025b607e1a953174d03ede 100644
--- a/wpilibc/include/SolenoidBase.h
+++ b/wpilibc/include/SolenoidBase.h
@@ -3,20 +3,19 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef SOLENOID_BASE_H_
-#define SOLENOID_BASE_H_
+#pragma once
 
 #include "Resource.h"
 #include "SensorBase.h"
-#include "HAL/HAL.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/HAL.hpp"
+#include "HAL/cpp/Synchronized.hpp"
 
 /**
  * SolenoidBase class is the common base class for the Solenoid and
  * DoubleSolenoid classes.
  */
-class SolenoidBase : public SensorBase {
+class SolenoidBase : public SensorBase
+{
 public:
 	virtual ~SolenoidBase();
 	uint8_t GetAll();
@@ -32,5 +31,3 @@ protected:
 private:
 	void* m_ports[kSolenoidChannels];
 };
-
-#endif
diff --git a/wpilibc/include/SpeedController.h b/wpilibc/include/SpeedController.h
index b7cc103339562281c064bc516d8e273ab14f0519..96d9266b3f309a88748430518f8b9d59d624f66c 100644
--- a/wpilibc/include/SpeedController.h
+++ b/wpilibc/include/SpeedController.h
@@ -3,11 +3,9 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef SPEED_CONTROLLER_H
-#define SPEED_CONTROLLER_H
-
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "PIDOutput.h"
 
 /**
@@ -16,14 +14,14 @@
 class SpeedController : public PIDOutput
 {
 public:
-	virtual ~SpeedController() {};
+	virtual ~SpeedController() {}
 	/**
 	 * Common interface for setting the speed of a speed controller.
 	 * 
 	 * @param speed The speed to set.  Value should be between -1.0 and 1.0.
 	 * @param syncGroup The update group to add this Set() to, pending UpdateSyncGroup().  If 0, update immediately.
 	 */
-	virtual void Set(float speed, uint8_t syncGroup=0) = 0;
+	virtual void Set(float speed, uint8_t syncGroup = 0) = 0;
 	/**
 	 * Common interface for getting the current set speed of a speed controller.
 	 * 
@@ -35,6 +33,3 @@ public:
 	 */
 	virtual void Disable() = 0;
 };
-
-#endif
-
diff --git a/wpilibc/include/Talon.h b/wpilibc/include/Talon.h
index 89c396c1a6ae7772b98b1904351ff0e44168eeb4..3279d17a3a18d168d0e4f08d4750c2c60ca27cc9 100644
--- a/wpilibc/include/Talon.h
+++ b/wpilibc/include/Talon.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef Talon_H
-#define Talon_H
+#pragma once
 
 #include "SafePWM.h"
 #include "SpeedController.h"
@@ -20,7 +18,7 @@ public:
 	explicit Talon(uint32_t channel);
 	Talon(uint8_t moduleNumber, uint32_t channel);
 	virtual ~Talon();
-	virtual void Set(float value, uint8_t syncGroup=0);
+	virtual void Set(float value, uint8_t syncGroup = 0);
 	virtual float Get();
 	virtual void Disable();
 
@@ -29,6 +27,3 @@ public:
 private:
 	void InitTalon();
 };
-
-#endif
-
diff --git a/wpilibc/include/Task.h b/wpilibc/include/Task.h
index a21dac8f25c40085975c3505d08eb0400d677f9e..7377c9ecfa5a2a77cb26373137d58422886adcbb 100644
--- a/wpilibc/include/Task.h
+++ b/wpilibc/include/Task.h
@@ -3,12 +3,10 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __TASK_H__
-#define __TASK_H__
+#pragma once
 
 #include "ErrorBase.h"
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
 /**
  * WPI task is a wrapper for the native Task object.
@@ -19,11 +17,13 @@ class Task : public ErrorBase
 public:
 	static const uint32_t kDefaultPriority = 101;
 
-	Task(const char* name, FUNCPTR function, int32_t priority = kDefaultPriority, uint32_t stackSize = 20000);
+	Task(const char* name, FUNCPTR function, int32_t priority = kDefaultPriority,
+			uint32_t stackSize = 20000);
 	virtual ~Task();
 
-	bool Start(uint32_t arg0 = 0, uint32_t arg1 = 0, uint32_t arg2 = 0, uint32_t arg3 = 0, uint32_t arg4 = 0, 
-			uint32_t arg5 = 0, uint32_t arg6 = 0, uint32_t arg7 = 0, uint32_t arg8 = 0, uint32_t arg9 = 0);
+	bool Start(uint32_t arg0 = 0, uint32_t arg1 = 0, uint32_t arg2 = 0, uint32_t arg3 = 0,
+			uint32_t arg4 = 0, uint32_t arg5 = 0, uint32_t arg6 = 0, uint32_t arg7 = 0,
+			uint32_t arg8 = 0, uint32_t arg9 = 0);
 	bool Restart();
 	bool Stop();
 
@@ -50,4 +50,3 @@ private:
 	DISALLOW_COPY_AND_ASSIGN(Task);
 };
 
-#endif // __TASK_H__
diff --git a/wpilibc/include/Timer.h b/wpilibc/include/Timer.h
index 0ab9863f2ebe18ffe00c86c42b86c86fed585ede..67d574f2d397b23996e4135090c883854aceb59c 100644
--- a/wpilibc/include/Timer.h
+++ b/wpilibc/include/Timer.h
@@ -3,11 +3,9 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
+#pragma once
 
-#ifndef TIMER_H_
-#define TIMER_H_
-
-#include "HAL/Semaphore.h"
+#include "HAL/Semaphore.hpp"
 #include "Base.h"
 
 typedef void (*TimerInterruptHandler)(void *param);
@@ -16,7 +14,6 @@ void Wait(double seconds);
 double GetClock();
 double GetTime();
 
-
 /**
  * Timer objects measure accumulated time in seconds.
  * The timer object functions like a stopwatch. It can be started, stopped, and cleared. When the
@@ -45,5 +42,3 @@ private:
 	MUTEX_ID m_semaphore;
 	DISALLOW_COPY_AND_ASSIGN(Timer);
 };
-
-#endif
diff --git a/wpilibc/include/Ultrasonic.h b/wpilibc/include/Ultrasonic.h
index 77b686abe989320878eb992eb65658de91f69c47..de7d3785ec0670a465113673e44dd6236a57188a 100644
--- a/wpilibc/include/Ultrasonic.h
+++ b/wpilibc/include/Ultrasonic.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef ULTRASONIC_H_
-#define ULTRASONIC_H_
+#pragma once
 
 #include "SensorBase.h"
 #include "Task.h"
@@ -26,19 +24,20 @@ class DigitalOutput;
  * the echo is received. The time that the line is high determines the round trip distance
  * (time of flight).
  */
-class Ultrasonic: public SensorBase, public PIDSource, public LiveWindowSendable
+class Ultrasonic : public SensorBase, public PIDSource, public LiveWindowSendable
 {
 public:
-	typedef enum {
+	enum DistanceUnit
+	{
 		kInches = 0,
 		kMilliMeters = 1
-	} DistanceUnit;
-	
+	};
+
 	Ultrasonic(DigitalOutput *pingChannel, DigitalInput *echoChannel, DistanceUnit units = kInches);
 	Ultrasonic(DigitalOutput &pingChannel, DigitalInput &echoChannel, DistanceUnit units = kInches);
 	Ultrasonic(uint32_t pingChannel, uint32_t echoChannel, DistanceUnit units = kInches);
-	Ultrasonic(uint8_t pingModuleNumber, uint32_t pingChannel,
-							uint8_t echoModuleNumber, uint32_t echoChannel, DistanceUnit units = kInches);
+	Ultrasonic(uint8_t pingModuleNumber, uint32_t pingChannel, uint8_t echoModuleNumber,
+			uint32_t echoChannel, DistanceUnit units = kInches);
 	virtual ~Ultrasonic();
 
 	void Ping();
@@ -46,8 +45,14 @@ public:
 	static void SetAutomaticMode(bool enabling);
 	double GetRangeInches();
 	double GetRangeMM();
-	bool IsEnabled() { return m_enabled; }
-	void SetEnabled(bool enable) { m_enabled = enable; }
+	bool IsEnabled()
+	{
+		return m_enabled;
+	}
+	void SetEnabled(bool enable)
+	{
+		m_enabled = enable;
+	}
 	
 	double PIDGet();
 	void SetDistanceUnits(DistanceUnit units);
@@ -82,9 +87,7 @@ private:
 	Counter *m_counter;
 	Ultrasonic *m_nextSensor;
 	DistanceUnit m_units;
-	
+
 	ITable *m_table;
 };
 
-#endif
-
diff --git a/wpilibc/include/Utility.h b/wpilibc/include/Utility.h
index 8d48a6e5e2bc49051abc2525f86e0113969407ca..dfa71791722ad76dbfdadf0142e42da3e331ac28 100644
--- a/wpilibc/include/Utility.h
+++ b/wpilibc/include/Utility.h
@@ -3,11 +3,9 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code  */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib. */
 /*---------------------------------------------------------------------------*/
+#pragma once
 
-#include "HAL/HAL.h"
-
-#ifndef UTILITY_H_
-#define UTILITY_H_
+#include "HAL/HAL.hpp"
 
 #define wpi_assert(condition) wpi_assert_impl(condition, #condition, NULL, __FILE__, __LINE__, __FUNCTION__)
 #define wpi_assertWithMessage(condition, message) wpi_assert_impl(condition, #condition, message, __FILE__, __LINE__, __FUNCTION__)
@@ -36,4 +34,3 @@ void SetRIO_FPGA_LED(uint32_t state);
 int32_t GetRIO_FPGA_LED();
 int32_t ToggleRIO_FPGA_LED();
 
-#endif // UTILITY_H_
diff --git a/wpilibc/include/Victor.h b/wpilibc/include/Victor.h
index e140db395c5381dfc6173cf9adc76e5d6ef3bfb2..e1d8a2e19029dca3289cbad08a8f050492bbc447 100644
--- a/wpilibc/include/Victor.h
+++ b/wpilibc/include/Victor.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef VICTOR_H
-#define VICTOR_H
+#pragma once
 
 #include "SafePWM.h"
 #include "SpeedController.h"
@@ -20,7 +18,7 @@ public:
 	explicit Victor(uint32_t channel);
 	Victor(uint8_t moduleNumber, uint32_t channel);
 	virtual ~Victor();
-	virtual void Set(float value, uint8_t syncGroup=0);
+	virtual void Set(float value, uint8_t syncGroup = 0);
 	virtual float Get();
 	virtual void Disable();
 
@@ -29,6 +27,3 @@ public:
 private:
 	void InitVictor();
 };
-
-#endif
-
diff --git a/wpilibc/include/WPIErrors.h b/wpilibc/include/WPIErrors.h
index f7e59f53334242e2d6c8fdeada8b96ec186a651d..9ca26310fa5189971e95e82ad5acba355a51ee4c 100644
--- a/wpilibc/include/WPIErrors.h
+++ b/wpilibc/include/WPIErrors.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef __WPI_ERRORS_H__
-#define __WPI_ERRORS_H__
+#pragma once
 
 #ifdef WPI_ERRORS_DEFINE_STRINGS
 #define S(label, offset, message) const char *wpi_error_s_##label = message ;
@@ -75,4 +73,3 @@ S(IncompatibleState, 15, "Incompatible State: The operation cannot be completed"
 
 #undef S
 
-#endif // __WPI_ERRORS_H__
diff --git a/wpilibc/include/WPILib.h b/wpilibc/include/WPILib.h
index 4b5c57171abfab346120fc0eec086a9a6c04cdb9..eebf678fae1d59cb43808fed3056430ba7d88a80 100644
--- a/wpilibc/include/WPILib.h
+++ b/wpilibc/include/WPILib.h
@@ -3,9 +3,7 @@
 /* Open Source Software - may be modified and shared by FRC teams. The code   */
 /* must be accompanied by the FIRST BSD license file in $(WIND_BASE)/WPILib.  */
 /*----------------------------------------------------------------------------*/
-
-#ifndef WPILIB_H_
-#define WPILIB_H_
+#pragma once
 
 #include "string.h"
 #include <iostream>
@@ -78,7 +76,7 @@
 #include "Solenoid.h"
 #include "SpeedController.h"
 #include "SPI.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "Talon.h"
 #include "Task.h"
 #include "Timer.h"
@@ -88,4 +86,3 @@
 // XXX: #include "Vision/AxisCamera.h"
 #include "WPIErrors.h"
 
-#endif /*WPILIB_H_*/
diff --git a/wpilibc/lib/CANJaguar.cpp b/wpilibc/lib/CANJaguar.cpp
index 5f4bb56fda5eb002eb59ade78658be6236c4a27e..4e71f80b7b10bdaa02a08632e67b394925398e05 100644
--- a/wpilibc/lib/CANJaguar.cpp
+++ b/wpilibc/lib/CANJaguar.cpp
@@ -13,15 +13,10 @@
 #include <stdio.h>
 #include "LiveWindow/LiveWindow.h"
 
-/* we are on ARM now, not Freescale so no need to swap */
+/* we are on ARM-LE now, not Freescale so no need to swap */
+//TODO: is this defined in a PN way? or is this Jag-specific?
 #define swap16(x)	(x)
 #define swap32(x)	(x)
-//#define swap16(x) ( (((x)>>8) &0x00FF) \
-//                  | (((x)<<8) &0xFF00) )
-//#define swap32(x) ( (((x)>>24)&0x000000FF) \
-//                  | (((x)>>8) &0x0000FF00) \
-//                  | (((x)<<8) &0x00FF0000) \
-//                  | (((x)<<24)&0xFF000000) )
 
 #define kFullMessageIDMask (CAN_MSGID_API_M | CAN_MSGID_MFR_M | CAN_MSGID_DTYPE_M)
 
diff --git a/wpilibc/lib/Commands/Scheduler.cpp b/wpilibc/lib/Commands/Scheduler.cpp
index fd88b89dbf47285eab75f53b697ca796653d75f6..bff9fb56a1ba37f30cf3eb60bdea1c6f6351a8cc 100644
--- a/wpilibc/lib/Commands/Scheduler.cpp
+++ b/wpilibc/lib/Commands/Scheduler.cpp
@@ -9,7 +9,7 @@
 #include "Buttons/ButtonScheduler.h"
 #include "Commands/Subsystem.h"
 //#include "NetworkCommunication/UsageReporting.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "WPIErrors.h"
 #include <iostream>
 #include <set>
diff --git a/wpilibc/lib/Dashboard.cpp b/wpilibc/lib/Dashboard.cpp
index c4be829fa90a8b1f50c7bbf5ec38a77ea4429c1a..524a81a1efc00ade3c06cbc4091248bdc3c7554d 100644
--- a/wpilibc/lib/Dashboard.cpp
+++ b/wpilibc/lib/Dashboard.cpp
@@ -7,7 +7,7 @@
 #include "Dashboard.h"
 #include "DriverStation.h"
 //#include "NetworkCommunication/UsageReporting.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "WPIErrors.h"
 #include <string.h>
 #include <stdarg.h>
diff --git a/wpilibc/lib/DigitalModule.cpp b/wpilibc/lib/DigitalModule.cpp
index bdd99a097f449d0d65b5969adf208a1a0d8efb7c..8fcd291403cf53e5be07bf40eab09e5ed8efcb4c 100644
--- a/wpilibc/lib/DigitalModule.cpp
+++ b/wpilibc/lib/DigitalModule.cpp
@@ -7,7 +7,7 @@
 #include "DigitalModule.h"
 #include "I2C.h"
 #include "PWM.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "WPIErrors.h"
 #include <math.h>
 
diff --git a/wpilibc/lib/DriverStation.cpp b/wpilibc/lib/DriverStation.cpp
index 4d2b142cfe605e3701df5985bede7cae85f9e38f..f70d55d18b9b35b453967c6b059eac25f434561e 100644
--- a/wpilibc/lib/DriverStation.cpp
+++ b/wpilibc/lib/DriverStation.cpp
@@ -6,7 +6,7 @@
 
 #include "DriverStation.h"
 #include "AnalogChannel.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "Timer.h"
 //#include "NetworkCommunication/FRCComm.h"
 //#include "NetworkCommunication/UsageReporting.h"
@@ -14,7 +14,7 @@
 #include "Utility.h"
 #include "WPIErrors.h"
 #include <string.h>
-#include "Log.h"
+#include "Log.hpp"
 
 // set the logging level
 TLogLevel dsLogLevel = logDEBUG;
diff --git a/wpilibc/lib/DriverStationEnhancedIO.cpp b/wpilibc/lib/DriverStationEnhancedIO.cpp
index e815ada6c26934e11ef036f4a6a13a4b6210e30f..3c3c779cf14069c3bc99f6971e32835dfb633a16 100644
--- a/wpilibc/lib/DriverStationEnhancedIO.cpp
+++ b/wpilibc/lib/DriverStationEnhancedIO.cpp
@@ -6,7 +6,7 @@
 
 #include "DriverStationEnhancedIO.h"
 //#include "NetworkCommunication/UsageReporting.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "WPIErrors.h"
 #include <string.h>
 
diff --git a/wpilibc/lib/DriverStationLCD.cpp b/wpilibc/lib/DriverStationLCD.cpp
index ee47a11c3d18f92d56b5c0fab9f87cc912a1445c..ab16d8acecdab263269b16868021d876db5c647f 100644
--- a/wpilibc/lib/DriverStationLCD.cpp
+++ b/wpilibc/lib/DriverStationLCD.cpp
@@ -10,7 +10,7 @@
 #include <string.h>
 //#include "NetworkCommunication/FRCComm.h"
 //#include "NetworkCommunication/UsageReporting.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "WPIErrors.h"
 #undef min
 
diff --git a/wpilibc/lib/Error.cpp b/wpilibc/lib/Error.cpp
index 2e9c9ab72329156589d277dd1c5981e368c90106..b8c1e5da06f82c63c94c25ee03391a9629537a53 100644
--- a/wpilibc/lib/Error.cpp
+++ b/wpilibc/lib/Error.cpp
@@ -6,7 +6,7 @@
 
 #include "Error.h"
 
-#include "HAL/cpp/StackTrace.h"
+#include "HAL/cpp/StackTrace.hpp"
 #include <cstdio>
 #include <cstring>
 
diff --git a/wpilibc/lib/ErrorBase.cpp b/wpilibc/lib/ErrorBase.cpp
index a2b099ec770a994c194d83b03f91752999a845f9..64bdfc9a0f6c1eb1f504c306deceef60da32a09e 100644
--- a/wpilibc/lib/ErrorBase.cpp
+++ b/wpilibc/lib/ErrorBase.cpp
@@ -5,8 +5,8 @@
 /*----------------------------------------------------------------------------*/
 
 #include "ErrorBase.h"
-#include "HAL/cpp/Synchronized.h"
-#include "HAL/cpp/StackTrace.h"
+#include "HAL/cpp/Synchronized.hpp"
+#include "HAL/cpp/StackTrace.hpp"
 #include "nivision.h"
 #define WPI_ERRORS_DEFINE_STRINGS
 #include "WPIErrors.h"
@@ -97,7 +97,7 @@ void ErrorBase::SetImaqError(int success, const char *contextMessage, const char
 {
 	//  If there was an error
 	if (success <= 0) {
-		char err[256];
+		//TODO: ??? char err[256];
 		// XXX: sprintf(err, "%s: %s", contextMessage, imaqGetErrorText(imaqGetLastError()));
 
 		//  Set the current error information for this object.
diff --git a/wpilibc/lib/I2C.cpp b/wpilibc/lib/I2C.cpp
index e1751005bb1f0d17db4e1485d2ac794f8de424e0..be07f9eccb72b005564cc40237b720d93206e413 100644
--- a/wpilibc/lib/I2C.cpp
+++ b/wpilibc/lib/I2C.cpp
@@ -7,7 +7,7 @@
 #include "I2C.h"
 #include "DigitalModule.h"
 //#include "NetworkCommunication/UsageReporting.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "WPIErrors.h"
 
 MUTEX_ID I2C::m_semaphore = NULL;
diff --git a/wpilibc/lib/IterativeRobot.cpp b/wpilibc/lib/IterativeRobot.cpp
index e5a340cfcd3e6119d04377bdf11561046068c6a7..699a874cb948a977144910b661b9722459e3d3c8 100644
--- a/wpilibc/lib/IterativeRobot.cpp
+++ b/wpilibc/lib/IterativeRobot.cpp
@@ -8,7 +8,7 @@
 
 #include "DriverStation.h"
 //#include "NetworkCommunication/UsageReporting.h"
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 #include "SmartDashboard/SmartDashboard.h"
 #include "LiveWindow/LiveWindow.h"
 #include "networktables/NetworkTable.h"
diff --git a/wpilibc/lib/Kinect.cpp b/wpilibc/lib/Kinect.cpp
index 2ace5e71d4e9a1e7ed80f2d81346c5485971405e..7181faa596d1c63766ca953e9b1b0230a64800f8 100644
--- a/wpilibc/lib/Kinect.cpp
+++ b/wpilibc/lib/Kinect.cpp
@@ -10,7 +10,7 @@
 //#include "NetworkCommunication/FRCComm.h"
 //#include "NetworkCommunication/UsageReporting.h"
 #include "Skeleton.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "WPIErrors.h"
 #include <cstring>
 
diff --git a/wpilibc/lib/PIDController.cpp b/wpilibc/lib/PIDController.cpp
index b79fb7a1d0b50c4a816f322cea5f3ae3ca7b1433..79fe41e46ac4a430512cb0fed3d4c5538767e1b6 100644
--- a/wpilibc/lib/PIDController.cpp
+++ b/wpilibc/lib/PIDController.cpp
@@ -10,7 +10,7 @@
 #include "PIDSource.h"
 #include "PIDOutput.h"
 #include <math.h>
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 
 static const char *kP = "p";
 static const char *kI = "i";
diff --git a/wpilibc/lib/Preferences.cpp b/wpilibc/lib/Preferences.cpp
index 76379ec23f505fcacc2ce4392114f89b01638712..3cce8a1e7616b22105b10e9dc49cd614deac74ce 100644
--- a/wpilibc/lib/Preferences.cpp
+++ b/wpilibc/lib/Preferences.cpp
@@ -7,7 +7,7 @@
 #include "Preferences.h"
 
 //#include "NetworkCommunication/UsageReporting.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "WPIErrors.h"
 
 #include <stdio.h>
diff --git a/wpilibc/lib/RobotBase.cpp b/wpilibc/lib/RobotBase.cpp
index df3ae98d20e613cc0a5f2685cb0dcabf2e38c3c2..9b1859fdda7edeb7a304284133f8ae7f03294e20 100644
--- a/wpilibc/lib/RobotBase.cpp
+++ b/wpilibc/lib/RobotBase.cpp
@@ -12,7 +12,7 @@
 //#include "NetworkCommunication/UsageReporting.h"
 #include "Utility.h"
 #include <cstring>
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
 #ifdef __vxworks
 // VXWorks needs som special unloading code
diff --git a/wpilibc/lib/SPI.cpp b/wpilibc/lib/SPI.cpp
index 1f802f22446742073e6b04413db87cb110d2fd7b..01440486b3df28c543af9556e0deb18ebd20f6e8 100644
--- a/wpilibc/lib/SPI.cpp
+++ b/wpilibc/lib/SPI.cpp
@@ -10,7 +10,7 @@
 #include "DigitalInput.h"
 #include "DigitalOutput.h"
 //#include "NetworkCommunication/UsageReporting.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/cpp/Synchronized.hpp"
 #include "WPIErrors.h"
 
 #include <math.h>
diff --git a/wpilibc/lib/Timer.cpp b/wpilibc/lib/Timer.cpp
index fc0b1dd568dd178f353cebf2b49006d94df10430..f2b7de1dbadb14219bd65f926adf49f1f30c4c7b 100644
--- a/wpilibc/lib/Timer.cpp
+++ b/wpilibc/lib/Timer.cpp
@@ -8,8 +8,8 @@
 
 #include <time.h>
 
-#include "HAL/HAL.h"
-#include "HAL/cpp/Synchronized.h"
+#include "HAL/HAL.hpp"
+#include "HAL/cpp/Synchronized.hpp"
 #include "Utility.h"
 
 /**
diff --git a/wpilibc/lib/Utility.cpp b/wpilibc/lib/Utility.cpp
index bcd632f170d3495a2c24c7f95d556f221999a405..54b484fbde25bf7be72c3d5671c7503d6f1ef771 100644
--- a/wpilibc/lib/Utility.cpp
+++ b/wpilibc/lib/Utility.cpp
@@ -7,8 +7,8 @@
 #include "Utility.h"
 
 //#include "NetworkCommunication/FRCComm.h"
-#include "HAL/HAL.h"
-#include "HAL/cpp/StackTrace.h"
+#include "HAL/HAL.hpp"
+#include "HAL/cpp/StackTrace.hpp"
 #include "Task.h"
 #include <stdio.h>
 #include <string.h>
diff --git a/wpilibj/wpilibJavaJNI/CMakeLists.txt b/wpilibj/wpilibJavaJNI/CMakeLists.txt
index 444ec087aebd762336a7f19df390039230180782..9a10f9ae8d7027ababe609f2f6354262f3ec9c08 100644
--- a/wpilibj/wpilibJavaJNI/CMakeLists.txt
+++ b/wpilibj/wpilibJavaJNI/CMakeLists.txt
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 2.8)
 project(WPILibJavaJNI)
 
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wformat=2 -Wextra")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wformat=2 -Wextra -Wno-unused-parameter -fPIC -Werror")
 SET(CMAKE_SKIP_BUILD_RPATH TRUE)
 file(GLOB_RECURSE NI_LIBS ../../ni-libraries/*.so)
 get_filename_component(HAL_API_INCLUDES ../../hal/include REALPATH)
@@ -12,7 +12,7 @@ get_filename_component(HAL_API_INCLUDES ../../hal/include REALPATH)
 file(GLOB_RECURSE SRC_FILES lib/*.cpp)
 include_directories(target/include ${embeddedJDKHome}/include ${embeddedJDKHome}/include/linux ${HAL_API_INCLUDES})
 add_library(wpilibJavaJNI SHARED ${SRC_FILES})
-find_library(HAL_LIB libHALAthena.so target/lib)
+find_library(HAL_LIB libHALAthena.a target/lib)
 add_library(HALAthena UNKNOWN IMPORTED)
 set_property(TARGET HALAthena PROPERTY IMPORTED_LOCATION ${HAL_LIB})
 target_link_libraries(wpilibJavaJNI HALAthena ${NI_LIBS})
diff --git a/wpilibj/wpilibJavaJNI/lib/AnalogJNI.cpp b/wpilibj/wpilibJavaJNI/lib/AnalogJNI.cpp
index d8eded535deaf213e2c0d08c4e2d4f3e9e908201..c48b27c8e9e74057af0de4437976d78ffb997128 100644
--- a/wpilibj/wpilibJavaJNI/lib/AnalogJNI.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/AnalogJNI.cpp
@@ -1,10 +1,10 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_hal_AnalogJNI.h"
 
-#include "HAL/Analog.h"
+#include "HAL/Analog.hpp"
 
 // set the logging level
 TLogLevel analogJNILogLevel = logWARNING;
diff --git a/wpilibj/wpilibJavaJNI/lib/CANJNI.cpp b/wpilibj/wpilibJavaJNI/lib/CANJNI.cpp
index ff472673886c3d9b2cb4dd5e5b62accaecdaf4ad..5f98e5dc5781c65386d04f15a67b3d9b6a402022 100644
--- a/wpilibj/wpilibJavaJNI/lib/CANJNI.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/CANJNI.cpp
@@ -1,10 +1,10 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_can_CANJNI.h"
 
-#include "HAL/CAN.h"
+#include "HAL/CAN.hpp"
 #include "NetworkCommunication/JaguarCANDriver.h"
 
 // set the logging level
diff --git a/wpilibj/wpilibJavaJNI/lib/CounterJNI.cpp b/wpilibj/wpilibJavaJNI/lib/CounterJNI.cpp
index 939cfef903c405ee08a29cde3cb4b2c7ef844d42..1d99b0bf7488a2d1c96b5e52a769f69055ad874d 100644
--- a/wpilibj/wpilibJavaJNI/lib/CounterJNI.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/CounterJNI.cpp
@@ -1,10 +1,10 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_hal_CounterJNI.h"
 
-#include "HAL/Digital.h"
+#include "HAL/Digital.hpp"
 
 // set the logging level
 TLogLevel counterJNILogLevel = logDEBUG;
diff --git a/wpilibj/wpilibJavaJNI/lib/DIOJNI.cpp b/wpilibj/wpilibJavaJNI/lib/DIOJNI.cpp
index 0a6ef5d61f7310378c45109bd7b47939c36c0f12..a2209dba289affafd804211a4c05b8f778539357 100644
--- a/wpilibj/wpilibJavaJNI/lib/DIOJNI.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/DIOJNI.cpp
@@ -1,10 +1,10 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_hal_DIOJNI.h"
 
-#include "HAL/Digital.h"
+#include "HAL/Digital.hpp"
 
 // set the logging level
 TLogLevel dioJNILogLevel = logDEBUG;
diff --git a/wpilibj/wpilibJavaJNI/lib/EncoderJNI.cpp b/wpilibj/wpilibJavaJNI/lib/EncoderJNI.cpp
index 28fd2a5ff275075081bbf5f6f5beceda6e587291..b7f60bb59045fb32d6ecd935e93f64535f48db14 100644
--- a/wpilibj/wpilibJavaJNI/lib/EncoderJNI.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/EncoderJNI.cpp
@@ -1,10 +1,10 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_hal_EncoderJNI.h"
 
-#include "HAL/Digital.h"
+#include "HAL/Digital.hpp"
 
 // set the logging level
 TLogLevel encoderJNILogLevel = logDEBUG;
diff --git a/wpilibj/wpilibJavaJNI/lib/FRCNetworkCommunicationsLibrary.cpp b/wpilibj/wpilibJavaJNI/lib/FRCNetworkCommunicationsLibrary.cpp
index 246f1e9e20c58d292c6d4e8dfc215796471602e7..1bf29e9e1cdcc0e104081dacf51b4aaeb993c374 100644
--- a/wpilibj/wpilibJavaJNI/lib/FRCNetworkCommunicationsLibrary.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/FRCNetworkCommunicationsLibrary.cpp
@@ -1,9 +1,9 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_communication_FRCNetworkCommunicationsLibrary.h"
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 //#include "NetworkCommunication/FRCComm.h"
 //#include "NetworkCommunication/UsageReporting.h"
 
@@ -501,7 +501,7 @@ JNIEXPORT void JNICALL Java_edu_wpi_first_wpilibj_communication_FRCNetworkCommun
 JNIEXPORT void JNICALL Java_edu_wpi_first_wpilibj_communication_FRCNetworkCommunicationsLibrary_FRCNetworkCommunicationReserve
   (JNIEnv *, jclass)
 {
-	HALNetworkCommunicationReserve();
+	assert(1 == HALInitialize(0));
 }
 
 /*
diff --git a/wpilibj/wpilibJavaJNI/lib/HALUtil.cpp b/wpilibj/wpilibJavaJNI/lib/HALUtil.cpp
index 4b5d235b6e12355f469254b5f5668ee42cc89e84..6828a0438c61f8ea0e9f8c0e602e942c59d49c2c 100644
--- a/wpilibj/wpilibJavaJNI/lib/HALUtil.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/HALUtil.cpp
@@ -1,8 +1,8 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 #include "edu_wpi_first_wpilibj_hal_HALUtil.h"
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
 // set the logging level
 TLogLevel halUtilLogLevel = logDEBUG;
diff --git a/wpilibj/wpilibJavaJNI/lib/I2CJNI.cpp b/wpilibj/wpilibJavaJNI/lib/I2CJNI.cpp
index a07960f530919e7eeb9518f75e7ecb4e540ab0a6..2eaff318642768bd72d95fd7a3dcefd463d0f5fa 100644
--- a/wpilibj/wpilibJavaJNI/lib/I2CJNI.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/I2CJNI.cpp
@@ -1,6 +1,6 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_hal_I2CJNI.h"
 
diff --git a/wpilibj/wpilibJavaJNI/lib/InterruptJNI.cpp b/wpilibj/wpilibJavaJNI/lib/InterruptJNI.cpp
index c87783b1f2d933cfcddafa74f1ca6f402109e25f..9aeea3d243b72b9c88e162075cf1671f9eac233e 100644
--- a/wpilibj/wpilibJavaJNI/lib/InterruptJNI.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/InterruptJNI.cpp
@@ -1,6 +1,6 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_hal_InterruptJNI.h"
 
diff --git a/wpilibj/wpilibJavaJNI/lib/JNIWrapper.cpp b/wpilibj/wpilibJavaJNI/lib/JNIWrapper.cpp
index 49b2972edc6f83ec0141e33f82ee6a271ded2a98..de4b9687ff7fc91058a11a8ec76792b6bb7d6f2b 100644
--- a/wpilibj/wpilibJavaJNI/lib/JNIWrapper.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/JNIWrapper.cpp
@@ -1,10 +1,10 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_hal_JNIWrapper.h"
 
-#include "HAL/HAL.h"
+#include "HAL/HAL.hpp"
 
 /*
  * Class:     edu_wpi_first_wpilibj_hal_JNIWrapper
diff --git a/wpilibj/wpilibJavaJNI/lib/PWMJNI.cpp b/wpilibj/wpilibJavaJNI/lib/PWMJNI.cpp
index 71f9c2a6e8dd75c113412f5b343c82279cdc2a04..7095b318ca32f94fed82ca7cc2eb9610910b0859 100644
--- a/wpilibj/wpilibJavaJNI/lib/PWMJNI.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/PWMJNI.cpp
@@ -1,10 +1,10 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_hal_PWMJNI.h"
 
-#include "HAL/Digital.h"
+#include "HAL/Digital.hpp"
 
 // set the logging level
 TLogLevel pwmJNILogLevel = logERROR;
diff --git a/wpilibj/wpilibJavaJNI/lib/RelayJNI.cpp b/wpilibj/wpilibJavaJNI/lib/RelayJNI.cpp
index b2370aaac57ffd38e9bfc7acb62071e5dcb0d018..244fa31bbae2bd7fda26341d98825f5bd989607d 100644
--- a/wpilibj/wpilibJavaJNI/lib/RelayJNI.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/RelayJNI.cpp
@@ -1,10 +1,10 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_hal_RelayJNI.h"
 
-#include "HAL/Digital.h"
+#include "HAL/Digital.hpp"
 
 // set the logging level
 TLogLevel relayJNILogLevel = logDEBUG;
diff --git a/wpilibj/wpilibJavaJNI/lib/SPIJNI.cpp b/wpilibj/wpilibJavaJNI/lib/SPIJNI.cpp
index 93894e892232a023c342da8df9c4017757037629..0e5ef6097bd7595f94f513e2013c52acfa810f2b 100644
--- a/wpilibj/wpilibJavaJNI/lib/SPIJNI.cpp
+++ b/wpilibj/wpilibJavaJNI/lib/SPIJNI.cpp
@@ -1,6 +1,6 @@
 #include <jni.h>
 #include <assert.h>
-#include "Log.h"
+#include "Log.hpp"
 
 #include "edu_wpi_first_wpilibj_hal_SPIJNI.h"
 
