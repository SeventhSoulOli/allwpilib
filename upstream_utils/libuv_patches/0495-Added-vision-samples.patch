From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Brad Miller <brad@bradhouse.com>
Date: Wed, 19 Nov 2014 14:37:58 -0500
Subject: [PATCH 0495/6262] Added vision samples

Change-Id: Ieb482d072ae15817be40477f187f081c9f7fe19f
---
 .../src/IntermediateVisionRobot.cpp           | 40 ++++++++++++++++
 .../QuickVision/src/QuickVisionRobot.cpp      | 22 +++++++++
 .../resources/templates/examples/examples.xml | 48 +++++++++++++++++--
 3 files changed, 107 insertions(+), 3 deletions(-)
 create mode 100644 eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/IntermediateVision/src/IntermediateVisionRobot.cpp
 create mode 100644 eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/QuickVision/src/QuickVisionRobot.cpp

diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/IntermediateVision/src/IntermediateVisionRobot.cpp b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/IntermediateVision/src/IntermediateVisionRobot.cpp
new file mode 100644
index 0000000000000000000000000000000000000000..a6037ed36a9649806dcd0cf0bf57608213927cd4
--- /dev/null
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/IntermediateVision/src/IntermediateVisionRobot.cpp
@@ -0,0 +1,40 @@
+#include "WPILib.h"
+
+/**
+ * Uses IMAQdx to manually acquire a new image each frame, and annotate the image by drawing
+ * a circle on it, and show it on the FRC Dashboard.
+ */
+class IntermediateVisionRobot : public SampleRobot
+{
+	IMAQdxSession session;
+	Image *frame;
+
+public:
+	void RobotInit() override {
+	    // create an image
+		frame = imaqCreateImage(IMAQ_IMAGE_RGB, 0);
+		// open the camera
+		IMAQdxOpenCamera("cam1", IMAQdxCameraControlModeController, &session);
+		IMAQdxConfigureGrab(session);
+	}
+
+	void OperatorControl() override {
+	    // acquire images
+		IMAQdxStartAcquisition(session);
+
+        // grab an image, draw the circle, and provide it for the camera server which will
+        // in turn send it to the dashboard.
+		while(IsOperatorControl() && IsEnabled()) {
+			IMAQdxGrab(session, frame, true, NULL);
+
+			imaqDrawShapeOnImage(frame, frame, { 10, 10, 100, 100 }, DrawMode::IMAQ_DRAW_VALUE, ShapeMode::IMAQ_SHAPE_OVAL, 0.0f);
+
+			CameraServer::GetInstance()->SetImage(frame);
+		}
+        // stop image acquisition
+		IMAQdxStopAcquisition(session);
+	}
+};
+
+START_ROBOT_CLASS(IntermediateVisionRobot);
+
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/QuickVision/src/QuickVisionRobot.cpp b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/QuickVision/src/QuickVisionRobot.cpp
new file mode 100644
index 0000000000000000000000000000000000000000..00fdffd3bbb85fb037895972bbca28c8ce4d4cd2
--- /dev/null
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/QuickVision/src/QuickVisionRobot.cpp
@@ -0,0 +1,22 @@
+#include "WPILib.h"
+
+/**
+ * Uses the CameraServer class to automatically capture video from a USB webcam
+ * and send it to the FRC dashboard without doing any vision processing. This
+ * is the easiest way to get camera images to the dashboard. Just add this to the
+ * RobotInit() method in your program.
+ */
+class QuickVisionRobot : public SampleRobot
+{
+public:
+	void RobotInit() override {
+		CameraServer::GetInstance()->SetQuality(75);
+		CameraServer::GetInstance()->StartAutomaticCapture();
+	}
+
+	void OperatorControl() override {
+	}
+};
+
+START_ROBOT_CLASS(QuickVisionRobot);
+
diff --git a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/examples.xml b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/examples.xml
index d8c7751f07c8209fa106c5340c1814c2877a90e5..84261e94df6f5abc0a17f7353eabbea96f0ec479 100644
--- a/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/examples.xml
+++ b/eclipse-plugins/edu.wpi.first.wpilib.plugins.cpp/resources/templates/examples/examples.xml
@@ -87,7 +87,12 @@
     <description>Example programs that demonstrate the use of the various commonly used sensors on FRC robots</description>
   </tagDescription>
 
-<example>
+    <tagDescription>
+        <name>Vision</name>
+        <description>Example programs that demonstrate the use of a camera for image acquisition and processing</description>
+    </tagDescription>
+
+    <example>
   <name>Motor Controller</name>
   <description>Demonstrate controlling a single motor with a Joystick.</description>
   <tags>
@@ -240,8 +245,45 @@
       destination="src/Robot.cpp"></file>
   </files>
   </example>
-  
-  <example>
+
+    <example>
+        <name>Simple vision program</name>
+        <description>The minimal program to acquire images from an attached USB camera on the robot
+        and send them to the dashboard.</description>
+        <tags>
+            <tag>Vision</tag>
+            <tag>Complete List</tag>
+        </tags>
+        <packages>
+            <package>src</package>
+        </packages>
+        <files>
+            <file source="examples/QuickVision/src/Robot.cpp"
+                  destination="src/Robot.cpp"></file>
+        </files>
+    </example>
+
+    <example>
+        <name>Getting Started</name>
+        <description>An example program that acquires images from an attached USB camera and adds some
+            annotation to the image as you might do for showing operators the result of some image
+            recognition, and sends it to the dashboard for display.
+        </description>
+        <tags>
+            <tag>Vision</tag>
+            <tag>Complete List</tag>
+        </tags>
+        <packages>
+            <package>src</package>
+        </packages>
+        <files>
+            <file source="examples/IntermediateVision/src/Robot.cpp"
+                  destination="src/Robot.cpp"></file>
+        </files>
+    </example>
+
+
+    <example>
     <name>GearsBot</name>
     <description>A fully functional example CommandBased program for
     WPIs GearsBot robot. This code can run on your computer if it
