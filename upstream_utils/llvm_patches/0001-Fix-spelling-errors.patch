From 2878b733a776e48cf65ed81dc11c9c63650cd2d6 Mon Sep 17 00:00:00 2001
From: PJ Reiniger <pj.reiniger@gmail.com>
Date: Tue, 3 May 2022 19:53:22 -0400
Subject: [PATCH 01/37] Fix spelling errors

---
 llvm/include/llvm/Support/Chrono.h        | 2 +-
 llvm/include/llvm/Support/ErrorHandling.h | 2 +-
 llvm/include/llvm/Support/MemoryBuffer.h  | 4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/llvm/include/llvm/Support/Chrono.h b/llvm/include/llvm/Support/Chrono.h
index 098512dce783..7ae0991400a6 100644
--- a/llvm/include/llvm/Support/Chrono.h
+++ b/llvm/include/llvm/Support/Chrono.h
@@ -22,7 +22,7 @@ class raw_ostream;
 namespace sys {
 
 /// A time point on the system clock. This is provided for two reasons:
-/// - to insulate us agains subtle differences in behavoir to differences in
+/// - to insulate us against subtle differences in behavior to differences in
 ///   system clock precision (which is implementation-defined and differs between
 ///   platforms).
 /// - to shorten the type name
diff --git a/llvm/include/llvm/Support/ErrorHandling.h b/llvm/include/llvm/Support/ErrorHandling.h
index 7cbc668b3a0e..d88d79b69440 100644
--- a/llvm/include/llvm/Support/ErrorHandling.h
+++ b/llvm/include/llvm/Support/ErrorHandling.h
@@ -45,7 +45,7 @@ class StringRef;
   void install_fatal_error_handler(fatal_error_handler_t handler,
                                    void *user_data = nullptr);
 
-  /// Restores default error handling behaviour.
+  /// Restores default error handling behavior.
   void remove_fatal_error_handler();
 
   /// ScopedFatalErrorHandler - This is a simple helper class which just
diff --git a/llvm/include/llvm/Support/MemoryBuffer.h b/llvm/include/llvm/Support/MemoryBuffer.h
index f47a8d2d334b..3b20fec3e136 100644
--- a/llvm/include/llvm/Support/MemoryBuffer.h
+++ b/llvm/include/llvm/Support/MemoryBuffer.h
@@ -205,7 +205,7 @@ public:
 private:
   // Hide these base class factory function so one can't write
   //   WritableMemoryBuffer::getXXX()
-  // and be surprised that he got a read-only Buffer.
+  // and be surprised that they got a read-only Buffer.
   using MemoryBuffer::getFileAsStream;
   using MemoryBuffer::getFileOrSTDIN;
   using MemoryBuffer::getMemBuffer;
@@ -250,7 +250,7 @@ public:
 private:
   // Hide these base class factory function so one can't write
   //   WritableMemoryBuffer::getXXX()
-  // and be surprised that he got a read-only Buffer.
+  // and be surprised that they got a read-only Buffer.
   using MemoryBuffer::getFileAsStream;
   using MemoryBuffer::getFileOrSTDIN;
   using MemoryBuffer::getMemBuffer;
-- 
2.20.1.windows.1

