From 3d4f2f598a07cb9f74eabb851818f7dc3ae0c406 Mon Sep 17 00:00:00 2001
From: PJ Reiniger <pj.reiniger@gmail.com>
Date: Tue, 3 May 2022 19:53:22 -0400
Subject: [PATCH 01/37] Fix spelling errors

---
 llvm/include/llvm/Support/Chrono.h        | 2 +-
 llvm/include/llvm/Support/ErrorHandling.h | 2 +-
 llvm/include/llvm/Support/MemoryBuffer.h  | 4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/llvm/include/llvm/Support/Chrono.h b/llvm/include/llvm/Support/Chrono.h
index 994068af3771..2a14b56e5f6b 100644
--- a/llvm/include/llvm/Support/Chrono.h
+++ b/llvm/include/llvm/Support/Chrono.h
@@ -23,7 +23,7 @@ class raw_ostream;
 namespace sys {
 
 /// A time point on the system clock. This is provided for two reasons:
-/// - to insulate us agains subtle differences in behavoir to differences in
+/// - to insulate us against subtle differences in behavior to differences in
 ///   system clock precision (which is implementation-defined and differs between
 ///   platforms).
 /// - to shorten the type name
diff --git a/llvm/include/llvm/Support/ErrorHandling.h b/llvm/include/llvm/Support/ErrorHandling.h
index 39cbfed2436a..5c67713fb061 100644
--- a/llvm/include/llvm/Support/ErrorHandling.h
+++ b/llvm/include/llvm/Support/ErrorHandling.h
@@ -46,7 +46,7 @@ class StringRef;
   void install_fatal_error_handler(fatal_error_handler_t handler,
                                    void *user_data = nullptr);
 
-  /// Restores default error handling behaviour.
+  /// Restores default error handling behavior.
   void remove_fatal_error_handler();
 
   /// ScopedFatalErrorHandler - This is a simple helper class which just
diff --git a/llvm/include/llvm/Support/MemoryBuffer.h b/llvm/include/llvm/Support/MemoryBuffer.h
index 8933295d4ea4..c1a8de5b65d0 100644
--- a/llvm/include/llvm/Support/MemoryBuffer.h
+++ b/llvm/include/llvm/Support/MemoryBuffer.h
@@ -201,7 +201,7 @@ public:
 private:
   // Hide these base class factory function so one can't write
   //   WritableMemoryBuffer::getXXX()
-  // and be surprised that he got a read-only Buffer.
+  // and be surprised that they got a read-only Buffer.
   using MemoryBuffer::getFileAsStream;
   using MemoryBuffer::getFileOrSTDIN;
   using MemoryBuffer::getMemBuffer;
@@ -249,7 +249,7 @@ public:
 private:
   // Hide these base class factory function so one can't write
   //   WritableMemoryBuffer::getXXX()
-  // and be surprised that he got a read-only Buffer.
+  // and be surprised that they got a read-only Buffer.
   using MemoryBuffer::getFileAsStream;
   using MemoryBuffer::getFileOrSTDIN;
   using MemoryBuffer::getMemBuffer;
-- 
2.20.1.windows.1

