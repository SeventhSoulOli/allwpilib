apply plugin: 'maven-publish'

def baseArtifactId = 'Glass'
def artifactGroupId = 'edu.wpi.first.tools'
def zipBaseName = '_GROUP_edu_wpi_first_tools_ID_Glass_CLS'

model {
    publishing {
        def tasks = []
        $.components.each { component ->
            component.binaries.each { binary ->
                if (binary in NativeExecutableBinarySpec && binary.application.name.contains("glassApp")) {
                    if (binary.buildable && binary.name.contains("Release")) {
                        // We are now in the binary that we want.
                        // This is the default application path for the ZIP task.
                        def applicationPath = binary.executable.file

                        // Create the ZIP.
                        def outputsFolder = file("$project.buildDir/outputs")
                        def task = project.tasks.create("copyGlassExecutable", Zip) {
                            description("Copies the Glass executable to the outputs directory.")
                            destinationDir(outputsFolder)

                            archiveBaseName = '_M_' + zipBaseName
                            duplicatesStrategy = 'exclude'
                            classifier = binary.targetPlatform.name + binary.buildType.name

                            from(licenseFile) {
                                into '/'
                            }

                            from(applicationPath)
                            into(nativeUtils.getPlatformPath(binary))
                        }

                        task.dependsOn binary.tasks.link
                        tasks.add(task)
                        project.build.dependsOn task
                        project.artifacts { task }
                        addTaskToCopyAllOutputs(task)
                    }
                }
            }
        }

        publications {
            cpp(MavenPublication) {
                tasks.each { artifact it }
                artifactId = baseArtifactId
                groupId = artifactGroupId
                version wpilibVersioning.version.get()
            }
        }
    }
}
