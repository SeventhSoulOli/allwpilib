description = "A simulation library for the ADXL345 I2C and SPI Accelerometer, ADXL362 SPI Accelerometer, and ADXRS450 SPI Gyro"

ext {
    includeWpiutil = true
    pluginName = 'halsim_adx_gyro_accelerometer'
}

apply from: "${rootDir}/shared/plugins/setupBuild.gradle"
ext {
	publishZipFunction = includeStandardZipFormat
}


if (!project.hasProperty('onlyAthena')) {
    model {
        exportsConfigs {
            halsim_adx_gyro_accelerometer(ExportsConfig) {
                x86ExcludeSymbols = ['_CT??_R0?AV_System_error', '_CT??_R0?AVexception', '_CT??_R0?AVfailure',
                                     '_CT??_R0?AVbad_cast',
                                     '_CT??_R0?AVruntime_error', '_CT??_R0?AVsystem_error', '_CTA5?AVfailure',
                                     '_TI5?AVfailure']
                x64ExcludeSymbols = ['_CT??_R0?AV_System_error', '_CT??_R0?AVexception', '_CT??_R0?AVfailure',
                                     '_CT??_R0?AVbad_cast',
                                     '_CT??_R0?AVruntime_error', '_CT??_R0?AVsystem_error', '_CTA5?AVfailure',
                                     '_TI5?AVfailure']
            }
        }
    }
}



apply plugin: 'google-test-test-suite'

ext {
	sharedCvConfigs = [halsim_adx_gyro_accelerometerTest: []]
	staticCvConfigs = [:]
	useJava = false
	useCpp = true
}
apply from: "${rootDir}/shared/opencv.gradle"

ext {
	staticGtestConfigs = [:]
}

staticGtestConfigs["${pluginName}Test"] = []
apply from: "${rootDir}/shared/googletest.gradle"

model {

	testSuites {
		"${pluginName}Test"(GoogleTestTestSuiteSpec) {
		for(NativeComponentSpec c : $.components) {
			if (c.name == pluginName) {
				testing c
				break
			}
		}
			sources {
				cpp {
					source {
						srcDirs 'src/test/native/cpp'
						include '**/*.cpp'
					}
					exportedHeaders {
						srcDirs 'src/test/native/include', 'src/main/native/cpp'
					}
				}
			}
		}
	}
	binaries {
		withType(GoogleTestTestSuiteBinarySpec) {
			if (!project.hasProperty('onlyAthena')) {
				lib project: ':ntcore', library: 'ntcore', linkage: 'shared'
				lib project: ':cscore', library: 'cscore', linkage: 'shared'
				lib project: ':hal', library: 'hal', linkage: 'shared'
				lib project: ':wpiutil', library: 'wpiutil', linkage: 'shared'
				lib project: ':cameraserver', library: 'cameraserver', linkage: 'shared'
				lib project: ':wpilibc', library: 'wpilibc', linkage: 'shared'
				lib library: pluginName, linkage: 'shared'
			} else {
				it.buildable = false
			}
		}
	}
}

tasks.withType(RunTestExecutable) {
	args "--gtest_output=xml:test_detail.xml"
	outputs.dir outputDir
}
