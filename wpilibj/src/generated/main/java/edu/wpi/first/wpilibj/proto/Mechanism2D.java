// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.
// Code generated by protocol buffer compiler. Do not edit!
package edu.wpi.first.wpilibj.proto;

import java.io.IOException;
import us.hebi.quickbuf.Descriptors;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.ProtoUtil;
import us.hebi.quickbuf.RepeatedByte;
import us.hebi.quickbuf.RepeatedMessage;
import us.hebi.quickbuf.Utf8String;

public final class Mechanism2D {
  private static final RepeatedByte descriptorData = ProtoUtil.decodeBase64(1536,
    "ChFtZWNoYW5pc20yZC5wcm90bxIJd3BpLnByb3RvIo8BChdQcm90b2J1Zk1lY2hhbmlzbVJvb3QyZBIS" + 
    "CgRuYW1lGAEgASgJUgRuYW1lEgwKAXgYAiABKAFSAXgSDAoBeRgDIAEoAVIBeRJECglsaWdhbWVudHMY" + 
    "BCADKAsyJi53cGkucHJvdG8uUHJvdG9idWZNZWNoYW5pc21MaWdhbWVudDJkUglsaWdhbWVudHMi0wEK" + 
    "G1Byb3RvYnVmTWVjaGFuaXNtTGlnYW1lbnQyZBISCgRuYW1lGAEgASgJUgRuYW1lEhQKBWFuZ2xlGAIg" + 
    "ASgBUgVhbmdsZRIUCgVjb2xvchgDIAEoCVIFY29sb3ISFgoGbGVuZ3RoGAQgASgBUgZsZW5ndGgSFgoG" + 
    "d2VpZ2h0GAUgASgBUgZ3ZWlnaHQSRAoJbGlnYW1lbnRzGAYgAygLMiYud3BpLnByb3RvLlByb3RvYnVm" + 
    "TWVjaGFuaXNtTGlnYW1lbnQyZFIJbGlnYW1lbnRzIqgBChNQcm90b2J1Zk1lY2hhbmlzbTJkEhQKBXdp" + 
    "ZHRoGAEgASgBUgV3aWR0aBIWCgZoZWlnaHQYAiABKAFSBmhlaWdodBIpChBiYWNrZ3JvdW5kX2NvbG9y" + 
    "GAMgASgJUg9iYWNrZ3JvdW5kQ29sb3ISOAoFcm9vdHMYBCADKAsyIi53cGkucHJvdG8uUHJvdG9idWZN" + 
    "ZWNoYW5pc21Sb290MmRSBXJvb3RzQh0KG2VkdS53cGkuZmlyc3Qud3BpbGliai5wcm90b0qlBwoGEgQA" + 
    "ABsBCggKAQwSAwAAEgoICgECEgMCABIKCAoBCBIDBAA0CgkKAggBEgMEADQKCgoCBAASBAYACwEKCgoD" + 
    "BAABEgMGCB8KCwoEBAACABIDBwQUCgwKBQQAAgAFEgMHBAoKDAoFBAACAAESAwcLDwoMCgUEAAIAAxID" + 
    "BxITCgsKBAQAAgESAwgEEQoMCgUEAAIBBRIDCAQKCgwKBQQAAgEBEgMICwwKDAoFBAACAQMSAwgPEAoL" + 
    "CgQEAAICEgMJBBEKDAoFBAACAgUSAwkECgoMCgUEAAICARIDCQsMCgwKBQQAAgIDEgMJDxAKCwoEBAAC" + 
    "AxIDCgQ3CgwKBQQAAgMEEgMKBAwKDAoFBAACAwYSAwoNKAoMCgUEAAIDARIDCikyCgwKBQQAAgMDEgMK" + 
    "NTYKCgoCBAESBA0AFAEKCgoDBAEBEgMNCCMKCwoEBAECABIDDgQUCgwKBQQBAgAFEgMOBAoKDAoFBAEC" + 
    "AAESAw4LDwoMCgUEAQIAAxIDDhITCgsKBAQBAgESAw8EFQoMCgUEAQIBBRIDDwQKCgwKBQQBAgEBEgMP" + 
    "CxAKDAoFBAECAQMSAw8TFAoLCgQEAQICEgMQBBUKDAoFBAECAgUSAxAECgoMCgUEAQICARIDEAsQCgwK" + 
    "BQQBAgIDEgMQExQKCwoEBAECAxIDEQQWCgwKBQQBAgMFEgMRBAoKDAoFBAECAwESAxELEQoMCgUEAQID" + 
    "AxIDERQVCgsKBAQBAgQSAxIEFgoMCgUEAQIEBRIDEgQKCgwKBQQBAgQBEgMSCxEKDAoFBAECBAMSAxIU",
    "FQoLCgQEAQIFEgMTBDcKDAoFBAECBQQSAxMEDAoMCgUEAQIFBhIDEw0oCgwKBQQBAgUBEgMTKTIKDAoF" + 
    "BAECBQMSAxM1NgoKCgIEAhIEFgAbAQoKCgMEAgESAxYIGwoLCgQEAgIAEgMXBBUKDAoFBAICAAUSAxcE" + 
    "CgoMCgUEAgIAARIDFwsQCgwKBQQCAgADEgMXExQKCwoEBAICARIDGAQWCgwKBQQCAgEFEgMYBAoKDAoF" + 
    "BAICAQESAxgLEQoMCgUEAgIBAxIDGBQVCgsKBAQCAgISAxkEIAoMCgUEAgICBRIDGQQKCgwKBQQCAgIB" + 
    "EgMZCxsKDAoFBAICAgMSAxkeHwoLCgQEAgIDEgMaBC8KDAoFBAICAwQSAxoEDAoMCgUEAgIDBhIDGg0k" + 
    "CgwKBQQCAgMBEgMaJSoKDAoFBAICAwMSAxotLmIGcHJvdG8z");

  static final Descriptors.FileDescriptor descriptor = Descriptors.FileDescriptor.internalBuildGeneratedFileFrom("mechanism2d.proto", "wpi.proto", descriptorData);

  static final Descriptors.Descriptor wpi_proto_ProtobufMechanismRoot2d_descriptor = descriptor.internalContainedType(33, 143, "ProtobufMechanismRoot2d", "wpi.proto.ProtobufMechanismRoot2d");

  static final Descriptors.Descriptor wpi_proto_ProtobufMechanismLigament2d_descriptor = descriptor.internalContainedType(179, 211, "ProtobufMechanismLigament2d", "wpi.proto.ProtobufMechanismLigament2d");

  static final Descriptors.Descriptor wpi_proto_ProtobufMechanism2d_descriptor = descriptor.internalContainedType(393, 168, "ProtobufMechanism2d", "wpi.proto.ProtobufMechanism2d");

  /**
   * @return this proto file's descriptor.
   */
  public static Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  /**
   * Protobuf type {@code ProtobufMechanismRoot2d}
   */
  public static final class ProtobufMechanismRoot2d extends ProtoMessage<ProtobufMechanismRoot2d> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional double x = 2;</code>
     */
    private double x;

    /**
     * <code>optional double y = 3;</code>
     */
    private double y;

    /**
     * <code>optional string name = 1;</code>
     */
    private final Utf8String name = Utf8String.newEmptyInstance();

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 4;</code>
     */
    private RepeatedMessage<ProtobufMechanismLigament2d> ligaments = null;

    private ProtobufMechanismRoot2d() {
    }

    /**
     * @return a new empty instance of {@code ProtobufMechanismRoot2d}
     */
    public static ProtobufMechanismRoot2d newInstance() {
      return new ProtobufMechanismRoot2d();
    }

    /**
     * <code>optional double x = 2;</code>
     * @return whether the x field is set
     */
    public boolean hasX() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional double x = 2;</code>
     * @return this
     */
    public ProtobufMechanismRoot2d clearX() {
      bitField0_ &= ~0x00000001;
      x = 0D;
      return this;
    }

    /**
     * <code>optional double x = 2;</code>
     * @return the x
     */
    public double getX() {
      return x;
    }

    /**
     * <code>optional double x = 2;</code>
     * @param value the x to set
     * @return this
     */
    public ProtobufMechanismRoot2d setX(final double value) {
      bitField0_ |= 0x00000001;
      x = value;
      return this;
    }

    /**
     * <code>optional double y = 3;</code>
     * @return whether the y field is set
     */
    public boolean hasY() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional double y = 3;</code>
     * @return this
     */
    public ProtobufMechanismRoot2d clearY() {
      bitField0_ &= ~0x00000002;
      y = 0D;
      return this;
    }

    /**
     * <code>optional double y = 3;</code>
     * @return the y
     */
    public double getY() {
      return y;
    }

    /**
     * <code>optional double y = 3;</code>
     * @param value the y to set
     * @return this
     */
    public ProtobufMechanismRoot2d setY(final double value) {
      bitField0_ |= 0x00000002;
      y = value;
      return this;
    }

    /**
     * <code>optional string name = 1;</code>
     * @return whether the name field is set
     */
    public boolean hasName() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional string name = 1;</code>
     * @return this
     */
    public ProtobufMechanismRoot2d clearName() {
      bitField0_ &= ~0x00000004;
      name.clear();
      return this;
    }

    /**
     * <code>optional string name = 1;</code>
     * @return the name
     */
    public String getName() {
      return name.getString();
    }

    /**
     * <code>optional string name = 1;</code>
     * @return internal {@code Utf8String} representation of name for reading
     */
    public Utf8String getNameBytes() {
      return this.name;
    }

    /**
     * <code>optional string name = 1;</code>
     * @return internal {@code Utf8String} representation of name for modifications
     */
    public Utf8String getMutableNameBytes() {
      bitField0_ |= 0x00000004;
      return this.name;
    }

    /**
     * <code>optional string name = 1;</code>
     * @param value the name to set
     * @return this
     */
    public ProtobufMechanismRoot2d setName(final CharSequence value) {
      bitField0_ |= 0x00000004;
      name.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string name = 1;</code>
     * @param value the name to set
     * @return this
     */
    public ProtobufMechanismRoot2d setName(final Utf8String value) {
      bitField0_ |= 0x00000004;
      name.copyFrom(value);
      return this;
    }

    private void initLigaments() {
      if (ligaments == null) {
        ligaments = RepeatedMessage.newEmptyInstance(ProtobufMechanismLigament2d.getFactory());
      }
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 4;</code>
     * @return whether the ligaments field is set
     */
    public boolean hasLigaments() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 4;</code>
     * @return this
     */
    public ProtobufMechanismRoot2d clearLigaments() {
      bitField0_ &= ~0x00000008;
      if (ligaments != null) {
        ligaments.clear();
      }
      return this;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 4;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableLigaments()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<ProtobufMechanismLigament2d> getLigaments() {
      initLigaments();
      return ligaments;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 4;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<ProtobufMechanismLigament2d> getMutableLigaments() {
      initLigaments();
      bitField0_ |= 0x00000008;
      return ligaments;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 4;</code>
     * @param value the ligaments to add
     * @return this
     */
    public ProtobufMechanismRoot2d addLigaments(final ProtobufMechanismLigament2d value) {
      initLigaments();
      bitField0_ |= 0x00000008;
      ligaments.add(value);
      return this;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 4;</code>
     * @param values the ligaments to add
     * @return this
     */
    public ProtobufMechanismRoot2d addAllLigaments(final ProtobufMechanismLigament2d... values) {
      initLigaments();
      bitField0_ |= 0x00000008;
      ligaments.addAll(values);
      return this;
    }

    @Override
    public ProtobufMechanismRoot2d copyFrom(final ProtobufMechanismRoot2d other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        x = other.x;
        y = other.y;
        name.copyFrom(other.name);
        if (other.hasLigaments()) {
          initLigaments();
          ligaments.copyFrom(other.ligaments);
        } else {
          clearLigaments();
        }
      }
      return this;
    }

    @Override
    public ProtobufMechanismRoot2d mergeFrom(final ProtobufMechanismRoot2d other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasX()) {
        setX(other.x);
      }
      if (other.hasY()) {
        setY(other.y);
      }
      if (other.hasName()) {
        getMutableNameBytes().copyFrom(other.name);
      }
      if (other.hasLigaments()) {
        getMutableLigaments().addAll(other.ligaments);
      }
      return this;
    }

    @Override
    public ProtobufMechanismRoot2d clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      x = 0D;
      y = 0D;
      name.clear();
      if (ligaments != null) {
        ligaments.clear();
      }
      return this;
    }

    @Override
    public ProtobufMechanismRoot2d clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      name.clear();
      if (ligaments != null) {
        ligaments.clearQuick();
      }
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof ProtobufMechanismRoot2d)) {
        return false;
      }
      ProtobufMechanismRoot2d other = (ProtobufMechanismRoot2d) o;
      return bitField0_ == other.bitField0_
        && (!hasX() || ProtoUtil.isEqual(x, other.x))
        && (!hasY() || ProtoUtil.isEqual(y, other.y))
        && (!hasName() || name.equals(other.name))
        && (!hasLigaments() || ligaments.equals(other.ligaments));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 17);
        output.writeDoubleNoTag(x);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 25);
        output.writeDoubleNoTag(y);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 10);
        output.writeStringNoTag(name);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        for (int i = 0; i < ligaments.length(); i++) {
          output.writeRawByte((byte) 34);
          output.writeMessageNoTag(ligaments.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 9;
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 9;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(name);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += (1 * ligaments.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(ligaments);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public ProtobufMechanismRoot2d mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 17: {
            // x
            x = input.readDouble();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 25) {
              break;
            }
          }
          case 25: {
            // y
            y = input.readDouble();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 10) {
              break;
            }
          }
          case 10: {
            // name
            input.readString(name);
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 34) {
              break;
            }
          }
          case 34: {
            // ligaments
            initLigaments();
            tag = input.readRepeatedMessage(ligaments, tag);
            bitField0_ |= 0x00000008;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeDouble(FieldNames.x, x);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeDouble(FieldNames.y, y);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeString(FieldNames.name, name);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRepeatedMessage(FieldNames.ligaments, ligaments);
      }
      output.endObject();
    }

    @Override
    public ProtobufMechanismRoot2d mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 120: {
            if (input.isAtField(FieldNames.x)) {
              if (!input.trySkipNullValue()) {
                x = input.readDouble();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 121: {
            if (input.isAtField(FieldNames.y)) {
              if (!input.trySkipNullValue()) {
                y = input.readDouble();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 3373707: {
            if (input.isAtField(FieldNames.name)) {
              if (!input.trySkipNullValue()) {
                input.readString(name);
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 479313438: {
            if (input.isAtField(FieldNames.ligaments)) {
              if (!input.trySkipNullValue()) {
                initLigaments();
                input.readRepeatedMessage(ligaments);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public ProtobufMechanismRoot2d clone() {
      return new ProtobufMechanismRoot2d().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static ProtobufMechanismRoot2d parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new ProtobufMechanismRoot2d(), data).checkInitialized();
    }

    public static ProtobufMechanismRoot2d parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new ProtobufMechanismRoot2d(), input).checkInitialized();
    }

    public static ProtobufMechanismRoot2d parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new ProtobufMechanismRoot2d(), input).checkInitialized();
    }

    /**
     * @return factory for creating ProtobufMechanismRoot2d messages
     */
    public static MessageFactory<ProtobufMechanismRoot2d> getFactory() {
      return ProtobufMechanismRoot2dFactory.INSTANCE;
    }

    /**
     * @return this type's descriptor.
     */
    public static Descriptors.Descriptor getDescriptor() {
      return Mechanism2D.wpi_proto_ProtobufMechanismRoot2d_descriptor;
    }

    private enum ProtobufMechanismRoot2dFactory implements MessageFactory<ProtobufMechanismRoot2d> {
      INSTANCE;

      @Override
      public ProtobufMechanismRoot2d create() {
        return ProtobufMechanismRoot2d.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName x = FieldName.forField("x");

      static final FieldName y = FieldName.forField("y");

      static final FieldName name = FieldName.forField("name");

      static final FieldName ligaments = FieldName.forField("ligaments");
    }
  }

  /**
   * Protobuf type {@code ProtobufMechanismLigament2d}
   */
  public static final class ProtobufMechanismLigament2d extends ProtoMessage<ProtobufMechanismLigament2d> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional double angle = 2;</code>
     */
    private double angle;

    /**
     * <code>optional double length = 4;</code>
     */
    private double length;

    /**
     * <code>optional double weight = 5;</code>
     */
    private double weight;

    /**
     * <code>optional string name = 1;</code>
     */
    private final Utf8String name = Utf8String.newEmptyInstance();

    /**
     * <code>optional string color = 3;</code>
     */
    private final Utf8String color = Utf8String.newEmptyInstance();

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 6;</code>
     */
    private RepeatedMessage<ProtobufMechanismLigament2d> ligaments = null;

    private ProtobufMechanismLigament2d() {
    }

    /**
     * @return a new empty instance of {@code ProtobufMechanismLigament2d}
     */
    public static ProtobufMechanismLigament2d newInstance() {
      return new ProtobufMechanismLigament2d();
    }

    /**
     * <code>optional double angle = 2;</code>
     * @return whether the angle field is set
     */
    public boolean hasAngle() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional double angle = 2;</code>
     * @return this
     */
    public ProtobufMechanismLigament2d clearAngle() {
      bitField0_ &= ~0x00000001;
      angle = 0D;
      return this;
    }

    /**
     * <code>optional double angle = 2;</code>
     * @return the angle
     */
    public double getAngle() {
      return angle;
    }

    /**
     * <code>optional double angle = 2;</code>
     * @param value the angle to set
     * @return this
     */
    public ProtobufMechanismLigament2d setAngle(final double value) {
      bitField0_ |= 0x00000001;
      angle = value;
      return this;
    }

    /**
     * <code>optional double length = 4;</code>
     * @return whether the length field is set
     */
    public boolean hasLength() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional double length = 4;</code>
     * @return this
     */
    public ProtobufMechanismLigament2d clearLength() {
      bitField0_ &= ~0x00000002;
      length = 0D;
      return this;
    }

    /**
     * <code>optional double length = 4;</code>
     * @return the length
     */
    public double getLength() {
      return length;
    }

    /**
     * <code>optional double length = 4;</code>
     * @param value the length to set
     * @return this
     */
    public ProtobufMechanismLigament2d setLength(final double value) {
      bitField0_ |= 0x00000002;
      length = value;
      return this;
    }

    /**
     * <code>optional double weight = 5;</code>
     * @return whether the weight field is set
     */
    public boolean hasWeight() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional double weight = 5;</code>
     * @return this
     */
    public ProtobufMechanismLigament2d clearWeight() {
      bitField0_ &= ~0x00000004;
      weight = 0D;
      return this;
    }

    /**
     * <code>optional double weight = 5;</code>
     * @return the weight
     */
    public double getWeight() {
      return weight;
    }

    /**
     * <code>optional double weight = 5;</code>
     * @param value the weight to set
     * @return this
     */
    public ProtobufMechanismLigament2d setWeight(final double value) {
      bitField0_ |= 0x00000004;
      weight = value;
      return this;
    }

    /**
     * <code>optional string name = 1;</code>
     * @return whether the name field is set
     */
    public boolean hasName() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional string name = 1;</code>
     * @return this
     */
    public ProtobufMechanismLigament2d clearName() {
      bitField0_ &= ~0x00000008;
      name.clear();
      return this;
    }

    /**
     * <code>optional string name = 1;</code>
     * @return the name
     */
    public String getName() {
      return name.getString();
    }

    /**
     * <code>optional string name = 1;</code>
     * @return internal {@code Utf8String} representation of name for reading
     */
    public Utf8String getNameBytes() {
      return this.name;
    }

    /**
     * <code>optional string name = 1;</code>
     * @return internal {@code Utf8String} representation of name for modifications
     */
    public Utf8String getMutableNameBytes() {
      bitField0_ |= 0x00000008;
      return this.name;
    }

    /**
     * <code>optional string name = 1;</code>
     * @param value the name to set
     * @return this
     */
    public ProtobufMechanismLigament2d setName(final CharSequence value) {
      bitField0_ |= 0x00000008;
      name.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string name = 1;</code>
     * @param value the name to set
     * @return this
     */
    public ProtobufMechanismLigament2d setName(final Utf8String value) {
      bitField0_ |= 0x00000008;
      name.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string color = 3;</code>
     * @return whether the color field is set
     */
    public boolean hasColor() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional string color = 3;</code>
     * @return this
     */
    public ProtobufMechanismLigament2d clearColor() {
      bitField0_ &= ~0x00000010;
      color.clear();
      return this;
    }

    /**
     * <code>optional string color = 3;</code>
     * @return the color
     */
    public String getColor() {
      return color.getString();
    }

    /**
     * <code>optional string color = 3;</code>
     * @return internal {@code Utf8String} representation of color for reading
     */
    public Utf8String getColorBytes() {
      return this.color;
    }

    /**
     * <code>optional string color = 3;</code>
     * @return internal {@code Utf8String} representation of color for modifications
     */
    public Utf8String getMutableColorBytes() {
      bitField0_ |= 0x00000010;
      return this.color;
    }

    /**
     * <code>optional string color = 3;</code>
     * @param value the color to set
     * @return this
     */
    public ProtobufMechanismLigament2d setColor(final CharSequence value) {
      bitField0_ |= 0x00000010;
      color.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string color = 3;</code>
     * @param value the color to set
     * @return this
     */
    public ProtobufMechanismLigament2d setColor(final Utf8String value) {
      bitField0_ |= 0x00000010;
      color.copyFrom(value);
      return this;
    }

    private void initLigaments() {
      if (ligaments == null) {
        ligaments = RepeatedMessage.newEmptyInstance(ProtobufMechanismLigament2d.getFactory());
      }
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 6;</code>
     * @return whether the ligaments field is set
     */
    public boolean hasLigaments() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 6;</code>
     * @return this
     */
    public ProtobufMechanismLigament2d clearLigaments() {
      bitField0_ &= ~0x00000020;
      if (ligaments != null) {
        ligaments.clear();
      }
      return this;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 6;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableLigaments()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<ProtobufMechanismLigament2d> getLigaments() {
      initLigaments();
      return ligaments;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 6;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<ProtobufMechanismLigament2d> getMutableLigaments() {
      initLigaments();
      bitField0_ |= 0x00000020;
      return ligaments;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 6;</code>
     * @param value the ligaments to add
     * @return this
     */
    public ProtobufMechanismLigament2d addLigaments(final ProtobufMechanismLigament2d value) {
      initLigaments();
      bitField0_ |= 0x00000020;
      ligaments.add(value);
      return this;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismLigament2d ligaments = 6;</code>
     * @param values the ligaments to add
     * @return this
     */
    public ProtobufMechanismLigament2d addAllLigaments(
        final ProtobufMechanismLigament2d... values) {
      initLigaments();
      bitField0_ |= 0x00000020;
      ligaments.addAll(values);
      return this;
    }

    @Override
    public ProtobufMechanismLigament2d copyFrom(final ProtobufMechanismLigament2d other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        angle = other.angle;
        length = other.length;
        weight = other.weight;
        name.copyFrom(other.name);
        color.copyFrom(other.color);
        if (other.hasLigaments()) {
          initLigaments();
          ligaments.copyFrom(other.ligaments);
        } else {
          clearLigaments();
        }
      }
      return this;
    }

    @Override
    public ProtobufMechanismLigament2d mergeFrom(final ProtobufMechanismLigament2d other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasAngle()) {
        setAngle(other.angle);
      }
      if (other.hasLength()) {
        setLength(other.length);
      }
      if (other.hasWeight()) {
        setWeight(other.weight);
      }
      if (other.hasName()) {
        getMutableNameBytes().copyFrom(other.name);
      }
      if (other.hasColor()) {
        getMutableColorBytes().copyFrom(other.color);
      }
      if (other.hasLigaments()) {
        getMutableLigaments().addAll(other.ligaments);
      }
      return this;
    }

    @Override
    public ProtobufMechanismLigament2d clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      angle = 0D;
      length = 0D;
      weight = 0D;
      name.clear();
      color.clear();
      if (ligaments != null) {
        ligaments.clear();
      }
      return this;
    }

    @Override
    public ProtobufMechanismLigament2d clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      name.clear();
      color.clear();
      if (ligaments != null) {
        ligaments.clearQuick();
      }
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof ProtobufMechanismLigament2d)) {
        return false;
      }
      ProtobufMechanismLigament2d other = (ProtobufMechanismLigament2d) o;
      return bitField0_ == other.bitField0_
        && (!hasAngle() || ProtoUtil.isEqual(angle, other.angle))
        && (!hasLength() || ProtoUtil.isEqual(length, other.length))
        && (!hasWeight() || ProtoUtil.isEqual(weight, other.weight))
        && (!hasName() || name.equals(other.name))
        && (!hasColor() || color.equals(other.color))
        && (!hasLigaments() || ligaments.equals(other.ligaments));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 17);
        output.writeDoubleNoTag(angle);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 33);
        output.writeDoubleNoTag(length);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 41);
        output.writeDoubleNoTag(weight);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 10);
        output.writeStringNoTag(name);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 26);
        output.writeStringNoTag(color);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        for (int i = 0; i < ligaments.length(); i++) {
          output.writeRawByte((byte) 50);
          output.writeMessageNoTag(ligaments.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 9;
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 9;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 9;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(name);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(color);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += (1 * ligaments.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(ligaments);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public ProtobufMechanismLigament2d mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 17: {
            // angle
            angle = input.readDouble();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 33) {
              break;
            }
          }
          case 33: {
            // length
            length = input.readDouble();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 41) {
              break;
            }
          }
          case 41: {
            // weight
            weight = input.readDouble();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 10) {
              break;
            }
          }
          case 10: {
            // name
            input.readString(name);
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 26) {
              break;
            }
          }
          case 26: {
            // color
            input.readString(color);
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 50) {
              break;
            }
          }
          case 50: {
            // ligaments
            initLigaments();
            tag = input.readRepeatedMessage(ligaments, tag);
            bitField0_ |= 0x00000020;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeDouble(FieldNames.angle, angle);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeDouble(FieldNames.length, length);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeDouble(FieldNames.weight, weight);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeString(FieldNames.name, name);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeString(FieldNames.color, color);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRepeatedMessage(FieldNames.ligaments, ligaments);
      }
      output.endObject();
    }

    @Override
    public ProtobufMechanismLigament2d mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 92960979: {
            if (input.isAtField(FieldNames.angle)) {
              if (!input.trySkipNullValue()) {
                angle = input.readDouble();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1106363674: {
            if (input.isAtField(FieldNames.length)) {
              if (!input.trySkipNullValue()) {
                length = input.readDouble();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -791592328: {
            if (input.isAtField(FieldNames.weight)) {
              if (!input.trySkipNullValue()) {
                weight = input.readDouble();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 3373707: {
            if (input.isAtField(FieldNames.name)) {
              if (!input.trySkipNullValue()) {
                input.readString(name);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 94842723: {
            if (input.isAtField(FieldNames.color)) {
              if (!input.trySkipNullValue()) {
                input.readString(color);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 479313438: {
            if (input.isAtField(FieldNames.ligaments)) {
              if (!input.trySkipNullValue()) {
                initLigaments();
                input.readRepeatedMessage(ligaments);
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public ProtobufMechanismLigament2d clone() {
      return new ProtobufMechanismLigament2d().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static ProtobufMechanismLigament2d parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new ProtobufMechanismLigament2d(), data).checkInitialized();
    }

    public static ProtobufMechanismLigament2d parseFrom(final ProtoSource input) throws
        IOException {
      return ProtoMessage.mergeFrom(new ProtobufMechanismLigament2d(), input).checkInitialized();
    }

    public static ProtobufMechanismLigament2d parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new ProtobufMechanismLigament2d(), input).checkInitialized();
    }

    /**
     * @return factory for creating ProtobufMechanismLigament2d messages
     */
    public static MessageFactory<ProtobufMechanismLigament2d> getFactory() {
      return ProtobufMechanismLigament2dFactory.INSTANCE;
    }

    /**
     * @return this type's descriptor.
     */
    public static Descriptors.Descriptor getDescriptor() {
      return Mechanism2D.wpi_proto_ProtobufMechanismLigament2d_descriptor;
    }

    private enum ProtobufMechanismLigament2dFactory implements MessageFactory<ProtobufMechanismLigament2d> {
      INSTANCE;

      @Override
      public ProtobufMechanismLigament2d create() {
        return ProtobufMechanismLigament2d.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName angle = FieldName.forField("angle");

      static final FieldName length = FieldName.forField("length");

      static final FieldName weight = FieldName.forField("weight");

      static final FieldName name = FieldName.forField("name");

      static final FieldName color = FieldName.forField("color");

      static final FieldName ligaments = FieldName.forField("ligaments");
    }
  }

  /**
   * Protobuf type {@code ProtobufMechanism2d}
   */
  public static final class ProtobufMechanism2d extends ProtoMessage<ProtobufMechanism2d> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional double width = 1;</code>
     */
    private double width;

    /**
     * <code>optional double height = 2;</code>
     */
    private double height;

    /**
     * <code>optional string background_color = 3;</code>
     */
    private final Utf8String backgroundColor = Utf8String.newEmptyInstance();

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismRoot2d roots = 4;</code>
     */
    private RepeatedMessage<ProtobufMechanismRoot2d> roots = null;

    private ProtobufMechanism2d() {
    }

    /**
     * @return a new empty instance of {@code ProtobufMechanism2d}
     */
    public static ProtobufMechanism2d newInstance() {
      return new ProtobufMechanism2d();
    }

    /**
     * <code>optional double width = 1;</code>
     * @return whether the width field is set
     */
    public boolean hasWidth() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional double width = 1;</code>
     * @return this
     */
    public ProtobufMechanism2d clearWidth() {
      bitField0_ &= ~0x00000001;
      width = 0D;
      return this;
    }

    /**
     * <code>optional double width = 1;</code>
     * @return the width
     */
    public double getWidth() {
      return width;
    }

    /**
     * <code>optional double width = 1;</code>
     * @param value the width to set
     * @return this
     */
    public ProtobufMechanism2d setWidth(final double value) {
      bitField0_ |= 0x00000001;
      width = value;
      return this;
    }

    /**
     * <code>optional double height = 2;</code>
     * @return whether the height field is set
     */
    public boolean hasHeight() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional double height = 2;</code>
     * @return this
     */
    public ProtobufMechanism2d clearHeight() {
      bitField0_ &= ~0x00000002;
      height = 0D;
      return this;
    }

    /**
     * <code>optional double height = 2;</code>
     * @return the height
     */
    public double getHeight() {
      return height;
    }

    /**
     * <code>optional double height = 2;</code>
     * @param value the height to set
     * @return this
     */
    public ProtobufMechanism2d setHeight(final double value) {
      bitField0_ |= 0x00000002;
      height = value;
      return this;
    }

    /**
     * <code>optional string background_color = 3;</code>
     * @return whether the backgroundColor field is set
     */
    public boolean hasBackgroundColor() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional string background_color = 3;</code>
     * @return this
     */
    public ProtobufMechanism2d clearBackgroundColor() {
      bitField0_ &= ~0x00000004;
      backgroundColor.clear();
      return this;
    }

    /**
     * <code>optional string background_color = 3;</code>
     * @return the backgroundColor
     */
    public String getBackgroundColor() {
      return backgroundColor.getString();
    }

    /**
     * <code>optional string background_color = 3;</code>
     * @return internal {@code Utf8String} representation of backgroundColor for reading
     */
    public Utf8String getBackgroundColorBytes() {
      return this.backgroundColor;
    }

    /**
     * <code>optional string background_color = 3;</code>
     * @return internal {@code Utf8String} representation of backgroundColor for modifications
     */
    public Utf8String getMutableBackgroundColorBytes() {
      bitField0_ |= 0x00000004;
      return this.backgroundColor;
    }

    /**
     * <code>optional string background_color = 3;</code>
     * @param value the backgroundColor to set
     * @return this
     */
    public ProtobufMechanism2d setBackgroundColor(final CharSequence value) {
      bitField0_ |= 0x00000004;
      backgroundColor.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string background_color = 3;</code>
     * @param value the backgroundColor to set
     * @return this
     */
    public ProtobufMechanism2d setBackgroundColor(final Utf8String value) {
      bitField0_ |= 0x00000004;
      backgroundColor.copyFrom(value);
      return this;
    }

    private void initRoots() {
      if (roots == null) {
        roots = RepeatedMessage.newEmptyInstance(ProtobufMechanismRoot2d.getFactory());
      }
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismRoot2d roots = 4;</code>
     * @return whether the roots field is set
     */
    public boolean hasRoots() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismRoot2d roots = 4;</code>
     * @return this
     */
    public ProtobufMechanism2d clearRoots() {
      bitField0_ &= ~0x00000008;
      if (roots != null) {
        roots.clear();
      }
      return this;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismRoot2d roots = 4;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableRoots()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<ProtobufMechanismRoot2d> getRoots() {
      initRoots();
      return roots;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismRoot2d roots = 4;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<ProtobufMechanismRoot2d> getMutableRoots() {
      initRoots();
      bitField0_ |= 0x00000008;
      return roots;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismRoot2d roots = 4;</code>
     * @param value the roots to add
     * @return this
     */
    public ProtobufMechanism2d addRoots(final ProtobufMechanismRoot2d value) {
      initRoots();
      bitField0_ |= 0x00000008;
      roots.add(value);
      return this;
    }

    /**
     * <code>repeated .wpi.proto.ProtobufMechanismRoot2d roots = 4;</code>
     * @param values the roots to add
     * @return this
     */
    public ProtobufMechanism2d addAllRoots(final ProtobufMechanismRoot2d... values) {
      initRoots();
      bitField0_ |= 0x00000008;
      roots.addAll(values);
      return this;
    }

    @Override
    public ProtobufMechanism2d copyFrom(final ProtobufMechanism2d other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        width = other.width;
        height = other.height;
        backgroundColor.copyFrom(other.backgroundColor);
        if (other.hasRoots()) {
          initRoots();
          roots.copyFrom(other.roots);
        } else {
          clearRoots();
        }
      }
      return this;
    }

    @Override
    public ProtobufMechanism2d mergeFrom(final ProtobufMechanism2d other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasWidth()) {
        setWidth(other.width);
      }
      if (other.hasHeight()) {
        setHeight(other.height);
      }
      if (other.hasBackgroundColor()) {
        getMutableBackgroundColorBytes().copyFrom(other.backgroundColor);
      }
      if (other.hasRoots()) {
        getMutableRoots().addAll(other.roots);
      }
      return this;
    }

    @Override
    public ProtobufMechanism2d clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      width = 0D;
      height = 0D;
      backgroundColor.clear();
      if (roots != null) {
        roots.clear();
      }
      return this;
    }

    @Override
    public ProtobufMechanism2d clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      backgroundColor.clear();
      if (roots != null) {
        roots.clearQuick();
      }
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof ProtobufMechanism2d)) {
        return false;
      }
      ProtobufMechanism2d other = (ProtobufMechanism2d) o;
      return bitField0_ == other.bitField0_
        && (!hasWidth() || ProtoUtil.isEqual(width, other.width))
        && (!hasHeight() || ProtoUtil.isEqual(height, other.height))
        && (!hasBackgroundColor() || backgroundColor.equals(other.backgroundColor))
        && (!hasRoots() || roots.equals(other.roots));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 9);
        output.writeDoubleNoTag(width);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 17);
        output.writeDoubleNoTag(height);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 26);
        output.writeStringNoTag(backgroundColor);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        for (int i = 0; i < roots.length(); i++) {
          output.writeRawByte((byte) 34);
          output.writeMessageNoTag(roots.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 9;
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 9;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(backgroundColor);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += (1 * roots.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(roots);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public ProtobufMechanism2d mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 9: {
            // width
            width = input.readDouble();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 17) {
              break;
            }
          }
          case 17: {
            // height
            height = input.readDouble();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 26) {
              break;
            }
          }
          case 26: {
            // backgroundColor
            input.readString(backgroundColor);
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 34) {
              break;
            }
          }
          case 34: {
            // roots
            initRoots();
            tag = input.readRepeatedMessage(roots, tag);
            bitField0_ |= 0x00000008;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeDouble(FieldNames.width, width);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeDouble(FieldNames.height, height);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeString(FieldNames.backgroundColor, backgroundColor);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRepeatedMessage(FieldNames.roots, roots);
      }
      output.endObject();
    }

    @Override
    public ProtobufMechanism2d mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 113126854: {
            if (input.isAtField(FieldNames.width)) {
              if (!input.trySkipNullValue()) {
                width = input.readDouble();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1221029593: {
            if (input.isAtField(FieldNames.height)) {
              if (!input.trySkipNullValue()) {
                height = input.readDouble();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1287124693:
          case 2036780306: {
            if (input.isAtField(FieldNames.backgroundColor)) {
              if (!input.trySkipNullValue()) {
                input.readString(backgroundColor);
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 108698577: {
            if (input.isAtField(FieldNames.roots)) {
              if (!input.trySkipNullValue()) {
                initRoots();
                input.readRepeatedMessage(roots);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public ProtobufMechanism2d clone() {
      return new ProtobufMechanism2d().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static ProtobufMechanism2d parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new ProtobufMechanism2d(), data).checkInitialized();
    }

    public static ProtobufMechanism2d parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new ProtobufMechanism2d(), input).checkInitialized();
    }

    public static ProtobufMechanism2d parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new ProtobufMechanism2d(), input).checkInitialized();
    }

    /**
     * @return factory for creating ProtobufMechanism2d messages
     */
    public static MessageFactory<ProtobufMechanism2d> getFactory() {
      return ProtobufMechanism2dFactory.INSTANCE;
    }

    /**
     * @return this type's descriptor.
     */
    public static Descriptors.Descriptor getDescriptor() {
      return Mechanism2D.wpi_proto_ProtobufMechanism2d_descriptor;
    }

    private enum ProtobufMechanism2dFactory implements MessageFactory<ProtobufMechanism2d> {
      INSTANCE;

      @Override
      public ProtobufMechanism2d create() {
        return ProtobufMechanism2d.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName width = FieldName.forField("width");

      static final FieldName height = FieldName.forField("height");

      static final FieldName backgroundColor = FieldName.forField("backgroundColor", "background_color");

      static final FieldName roots = FieldName.forField("roots");
    }
  }
}
