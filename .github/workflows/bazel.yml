name: Bazel

on: [pull_request, push]

jobs:
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            architecture: x64
            config: ""
    name: "Build - Win${{ matrix.architecture }} ${{ matrix.config }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: bazelbuild/setup-bazelisk@v1
#      - name: Mount bazel cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            C:/users/runneradmin/_bazel_runneradmin/*/execroot/**
#            C:/users/runneradmin/_bazel_runneradmin/*/external/**
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.a
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.so
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.lib
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.dll
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.pdb
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.dylib
#          key: bazel-win-cache-${{ hashFiles('/private/var/tmp/**/*.o') }}
#          restore-keys: |
#            bazel-win-cache-${{ hashFiles('/private/var/tmp/**/*.o') }}

      - name: Bazel Info
        run: bazel info
        shell: bash

      - name: Build
        run: bazel test ... -k --nojava_header_compilation || echo "Failed"
        shell: bash


  build-roborio:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            architecture: x64
            config: ""
    name: "Build - Roborio${{ matrix.architecture }} ${{ matrix.config }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: bazelbuild/setup-bazelisk@v1
#      - name: Mount bazel cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            C:/users/runneradmin/_bazel_runneradmin/*/execroot/**
#            C:/users/runneradmin/_bazel_runneradmin/*/external/**
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.a
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.so
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.lib
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.dll
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.pdb
#            !C:/users/runneradmin/_bazel_runneradmin/**/*.dylib
#          key: bazel-roborioxx-cache-${{ hashFiles('/private/var/tmp/**/*.o') }}
#          restore-keys: |
#            bazel-roborioxx-cache-${{ hashFiles('/private/var/tmp/**/*.o') }}

      - name: Bazel Info
        run: bazel info
        shell: bash

      - name: Build
        run: bazel build --config=roborio ... -k --nojava_header_compilation
        shell: bash


  build-mac:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            architecture: x64
    name: "Build - Mac ${{ matrix.architecture }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: bazelbuild/setup-bazelisk@v1

#      - name: Mount bazel cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            /private/var/tmp/_bazel_runner
#            !/private/var/tmp/_bazel_runner/**/*.a
#            !/private/var/tmp/_bazel_runner/**/*.so
#            !/private/var/tmp/_bazel_runner/**/*.lib
#            !/private/var/tmp/_bazel_runner/**/*.dll
#            !/private/var/tmp/_bazel_runner/**/*.pdb
#            !/private/var/tmp/_bazel_runner/**/*.dylib
#          key: bazel-darwinxx-cache-${{ hashFiles('/private/var/tmp/**/*.o') }}
#          restore-keys: |
#            bazel-darwinxx-cache-

      - name: Bazel Info
        run: bazel info

      - name: Build and Test
        run: bazel test  ... --nojava_header_compilation -k


  build-bionic:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            architecture: x64
    name: "Build - Bionic ${{ matrix.architecture }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: bazelbuild/setup-bazelisk@v1

#      - name: Mount bazel cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            /private/var/tmp/_bazel_runner
#            !/private/var/tmp/_bazel_runner/**/*.a
#            !/private/var/tmp/_bazel_runner/**/*.so
#            !/private/var/tmp/_bazel_runner/**/*.lib
#            !/private/var/tmp/_bazel_runner/**/*.dll
#            !/private/var/tmp/_bazel_runner/**/*.pdb
#            !/private/var/tmp/_bazel_runner/**/*.dylib
#          key: bazel-bionicyy-cache-${{ hashFiles('/private/var/tmp/**/*.o') }}
#          restore-keys: |
#            bazel-bionicyy-cache-

      - name: Bazel Info
        run: bazel info

      - name: Build and Test
        run: bazel build  --config=bionic ... --nojava_header_compilation -k



  build-linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - container: wpilib/ubuntu-base:18.04
            artifact-name: Linux Release
    runs-on: ubuntu-latest
    name: "Build - ${{ matrix.artifact-name }}${{ matrix.architecture }}"
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: bazelbuild/setup-bazelisk@v1
#      - name: Mount bazel cache
#        uses: actions/cache@v2
#        with:
#          path: |
#             ~/.cache/bazel
#             !~/.cache/bazel/**/*.a
#             !~/.cache/bazel/**/*.so
#             !~/.cache/bazel/**/*.lib
#             !~/.cache/bazel/**/*.dll
#             !~/.cache/bazel/**/*.pdb
#             !~/.cache/bazel/**/*.dylib
#          key: bazel-linux-cache-${{ hashFiles('~/.cache/bazel/**/*.o') }}
#          restore-keys: |
#            bazel-linux-cache-

      - name: Bazel Info
        run: bazel info

      - name: Build and Test
        run: bazel test ... -k
#      - name: Inspect Cache
#        run: |
#            ls ~/.cache
#            ls ~/.cache/bazel
#            ls ~/.cache/bazel/_bazel_root
#            ls ~/.cache/bazel/_bazel_root/95c1a711d2dd79838a4bf5bba0956ea6
#            ls ~/.cache/bazel/_bazel_root/95c1a711d2dd79838a4bf5bba0956ea6
#            echo "Hello"


  build-raspbian:
    strategy:
      fail-fast: false
      matrix:
        include:
          - container: wpilib/ubuntu-base:18.04
            artifact-name: Raspbain Release
    runs-on: ubuntu-latest
    name: "Build - ${{ matrix.artifact-name }}${{ matrix.architecture }}"
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: bazelbuild/setup-bazelisk@v1

#      - name: Mount bazel cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.cache/bazel
#            !~/.cache/bazel/**/*.a
#            !~/.cache/bazel/**/*.so
#            !~/.cache/bazel/**/*.lib
#            !~/.cache/bazel/**/*.dll
#            !~/.cache/bazel/**/*.pdb
#            !~/.cache/bazel/**/*.dylib
#          key: bazel-raspianzz-cache-${{ hashFiles('~/.cache/bazel/**/*.o') }}
#          restore-keys: |
#            bazel-raspianzz-cache-

      - name: Bazel Info
        run: bazel info

      - name: Build and Test
        run: bazel build --config=raspbian ... -k
#      - name: Inspect Cache
#        run: |
#          ls ~/.cache
#          ls ~/.cache/bazel
#          ls ~/.cache/bazel/_bazel_root
#          ls ~/.cache/bazel/_bazel_root/95c1a711d2dd79838a4bf5bba0956ea6
#          ls ~/.cache/bazel/_bazel_root/95c1a711d2dd79838a4bf5bba0956ea6
#          echo "Hello"
